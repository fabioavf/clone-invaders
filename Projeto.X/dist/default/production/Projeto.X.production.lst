

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Dec 06 00:08:51 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    53                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC18F4520 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     
    90                           	psect	idataCOMRAM
    91  005654                     __pidataCOMRAM:
    92                           	callstack 0
    93                           
    94                           ;initializer for _level
    95  005654  0001               	dw	1
    96                           
    97                           	psect	idataBANK0
    98  005652                     __pidataBANK0:
    99                           	callstack 0
   100                           
   101                           ;initializer for _speed
   102  005652  001E               	dw	30
   103                           
   104                           	psect	idataBANK1
   105  0056CC                     __pidataBANK1:
   106                           	callstack 0
   107                           
   108                           ;initializer for main@F2650
   109  0056CC  00                 	db	0
   110  0056CD  00                 	db	0
   111  0056CE  00                 	db	0
   112  0056CF  00                 	db	0
   113  0056D0  00                 	db	0
   114  0056D1  04                 	db	4
   115  0056D2  0E                 	db	14
   116  0056D3  1B                 	db	27
   117  0056D4  00                 	db	0
   118  0056D5  04                 	db	4
   119  0056D6  04                 	db	4
   120  0056D7  00                 	db	0
   121  0056D8  00                 	db	0
   122  0056D9  04                 	db	4
   123  0056DA  0E                 	db	14
   124  0056DB  1B                 	db	27
   125  0056DC  00                 	db	0
   126  0056DD  00                 	db	0
   127  0056DE  00                 	db	0
   128  0056DF  00                 	db	0
   129  0056E0  00                 	db	0
   130  0056E1  04                 	db	4
   131  0056E2  04                 	db	4
   132  0056E3  00                 	db	0
   133  0056E4  00                 	db	0
   134  0056E5  04                 	db	4
   135  0056E6  04                 	db	4
   136  0056E7  00                 	db	0
   137  0056E8  00                 	db	0
   138  0056E9  00                 	db	0
   139  0056EA  00                 	db	0
   140  0056EB  00                 	db	0
   141  0056EC  0A                 	db	10
   142  0056ED  15                 	db	21
   143  0056EE  0E                 	db	14
   144  0056EF  11                 	db	17
   145  0056F0  00                 	db	0
   146  0056F1  00                 	db	0
   147  0056F2  00                 	db	0
   148  0056F3  00                 	db	0
   149  0056F4  0A                 	db	10
   150  0056F5  15                 	db	21
   151  0056F6  0E                 	db	14
   152  0056F7  0A                 	db	10
   153  0056F8  00                 	db	0
   154  0056F9  00                 	db	0
   155  0056FA  00                 	db	0
   156  0056FB  00                 	db	0
   157  0056FC  0A                 	db	10
   158  0056FD  15                 	db	21
   159  0056FE  0E                 	db	14
   160  0056FF  11                 	db	17
   161  005700  00                 	db	0
   162  005701  04                 	db	4
   163  005702  04                 	db	4
   164  005703  00                 	db	0
   165  005704  0A                 	db	10
   166  005705  15                 	db	21
   167  005706  0E                 	db	14
   168  005707  0A                 	db	10
   169  005708  00                 	db	0
   170  005709  04                 	db	4
   171  00570A  04                 	db	4
   172  00570B  00                 	db	0
   173                           
   174                           	psect	mediumconst
   175  007E14                     __pmediumconst:
   176                           	callstack 0
   177  007E14  00                 	db	0
   178  007E15                     _valor@ssd$F178:
   179                           	callstack 0
   180  007E15  3F                 	db	63
   181  007E16  06                 	db	6
   182  007E17  5B                 	db	91
   183  007E18  4F                 	db	79
   184  007E19  66                 	db	102
   185  007E1A  6D                 	db	109
   186  007E1B  7D                 	db	125
   187  007E1C  07                 	db	7
   188  007E1D  7F                 	db	127
   189  007E1E  6F                 	db	111
   190  007E1F  77                 	db	119
   191  007E20  7C                 	db	124
   192  007E21  39                 	db	57
   193  007E22  5E                 	db	94
   194  007E23  79                 	db	121
   195  007E24  71                 	db	113
   196  007E25                     __end_of_valor@ssd$F178:
   197                           	callstack 0
   198  0000                     _T0CON	set	4053
   199  0000                     _TMR0L	set	4054
   200  0000                     _TMR0H	set	4055
   201  0000                     _INTCON	set	4082
   202  0000                     _TRISE	set	3990
   203  0000                     _TRISD	set	3989
   204  0000                     _TRISC	set	3988
   205  0000                     _TRISB	set	3987
   206  0000                     _TRISA	set	3986
   207  0000                     _PORTE	set	3972
   208  0000                     _PORTD	set	3971
   209  0000                     _PORTC	set	3970
   210  0000                     _PORTB	set	3969
   211  0000                     _PORTA	set	3968
   212  007E25                     STR_2:
   213  007E25  7C                 	db	124
   214  007E26  20                 	db	32
   215  007E27  20                 	db	32
   216  007E28  20                 	db	32
   217  007E29  20                 	db	32
   218  007E2A  20                 	db	32
   219  007E2B  20                 	db	32
   220  007E2C  20                 	db	32
   221  007E2D  20                 	db	32
   222  007E2E  20                 	db	32
   223  007E2F  20                 	db	32
   224  007E30  20                 	db	32
   225  007E31  20                 	db	32
   226  007E32  20                 	db	32
   227  007E33  20                 	db	32
   228  007E34  7C                 	db	124
   229  007E35  00                 	db	0
   230  007E36                     STR_46:
   231  007E36  7C                 	db	124
   232  007E37  20                 	db	32
   233  007E38  20                 	db	32
   234  007E39  20                 	db	32
   235  007E3A  43                 	db	67	;'C'
   236  007E3B  4C                 	db	76	;'L'
   237  007E3C  4F                 	db	79	;'O'
   238  007E3D  4E                 	db	78	;'N'
   239  007E3E  45                 	db	69	;'E'
   240  007E3F  20                 	db	32
   241  007E40  20                 	db	32
   242  007E41  20                 	db	32
   243  007E42  20                 	db	32
   244  007E43  20                 	db	32
   245  007E44  20                 	db	32
   246  007E45  7C                 	db	124
   247  007E46  00                 	db	0
   248  007E47                     STR_42:
   249  007E47  7C                 	db	124
   250  007E48  20                 	db	32
   251  007E49  20                 	db	32
   252  007E4A  20                 	db	32
   253  007E4B  20                 	db	32
   254  007E4C  43                 	db	67	;'C'
   255  007E4D  4C                 	db	76	;'L'
   256  007E4E  4F                 	db	79	;'O'
   257  007E4F  4E                 	db	78	;'N'
   258  007E50  45                 	db	69	;'E'
   259  007E51  20                 	db	32
   260  007E52  20                 	db	32
   261  007E53  20                 	db	32
   262  007E54  20                 	db	32
   263  007E55  20                 	db	32
   264  007E56  7C                 	db	124
   265  007E57  00                 	db	0
   266  007E58                     STR_38:
   267  007E58  7C                 	db	124
   268  007E59  20                 	db	32
   269  007E5A  20                 	db	32
   270  007E5B  20                 	db	32
   271  007E5C  20                 	db	32
   272  007E5D  20                 	db	32
   273  007E5E  43                 	db	67	;'C'
   274  007E5F  4C                 	db	76	;'L'
   275  007E60  4F                 	db	79	;'O'
   276  007E61  4E                 	db	78	;'N'
   277  007E62  45                 	db	69	;'E'
   278  007E63  20                 	db	32
   279  007E64  20                 	db	32
   280  007E65  20                 	db	32
   281  007E66  20                 	db	32
   282  007E67  7C                 	db	124
   283  007E68  00                 	db	0
   284  007E69                     STR_34:
   285  007E69  7C                 	db	124
   286  007E6A  20                 	db	32
   287  007E6B  20                 	db	32
   288  007E6C  20                 	db	32
   289  007E6D  20                 	db	32
   290  007E6E  20                 	db	32
   291  007E6F  20                 	db	32
   292  007E70  43                 	db	67	;'C'
   293  007E71  4C                 	db	76	;'L'
   294  007E72  4F                 	db	79	;'O'
   295  007E73  4E                 	db	78	;'N'
   296  007E74  45                 	db	69	;'E'
   297  007E75  20                 	db	32
   298  007E76  20                 	db	32
   299  007E77  20                 	db	32
   300  007E78  7C                 	db	124
   301  007E79  00                 	db	0
   302  007E7A                     STR_47:
   303  007E7A  7C                 	db	124
   304  007E7B  20                 	db	32
   305  007E7C  20                 	db	32
   306  007E7D  20                 	db	32
   307  007E7E  49                 	db	73	;'I'
   308  007E7F  4E                 	db	78	;'N'
   309  007E80  56                 	db	86	;'V'
   310  007E81  41                 	db	65	;'A'
   311  007E82  44                 	db	68	;'D'
   312  007E83  45                 	db	69	;'E'
   313  007E84  52                 	db	82	;'R'
   314  007E85  53                 	db	83	;'S'
   315  007E86  20                 	db	32
   316  007E87  20                 	db	32
   317  007E88  20                 	db	32
   318  007E89  7C                 	db	124
   319  007E8A  00                 	db	0
   320  007E8B                     STR_30:
   321  007E8B  7C                 	db	124
   322  007E8C  20                 	db	32
   323  007E8D  20                 	db	32
   324  007E8E  20                 	db	32
   325  007E8F  20                 	db	32
   326  007E90  20                 	db	32
   327  007E91  20                 	db	32
   328  007E92  20                 	db	32
   329  007E93  43                 	db	67	;'C'
   330  007E94  4C                 	db	76	;'L'
   331  007E95  4F                 	db	79	;'O'
   332  007E96  4E                 	db	78	;'N'
   333  007E97  45                 	db	69	;'E'
   334  007E98  20                 	db	32
   335  007E99  20                 	db	32
   336  007E9A  7C                 	db	124
   337  007E9B  00                 	db	0
   338  007E9C                     STR_43:
   339  007E9C  7C                 	db	124
   340  007E9D  20                 	db	32
   341  007E9E  20                 	db	32
   342  007E9F  20                 	db	32
   343  007EA0  20                 	db	32
   344  007EA1  49                 	db	73	;'I'
   345  007EA2  4E                 	db	78	;'N'
   346  007EA3  56                 	db	86	;'V'
   347  007EA4  41                 	db	65	;'A'
   348  007EA5  44                 	db	68	;'D'
   349  007EA6  45                 	db	69	;'E'
   350  007EA7  52                 	db	82	;'R'
   351  007EA8  53                 	db	83	;'S'
   352  007EA9  20                 	db	32
   353  007EAA  20                 	db	32
   354  007EAB  7C                 	db	124
   355  007EAC  00                 	db	0
   356  007EAD                     STR_61:
   357  007EAD  7C                 	db	124
   358  007EAE  20                 	db	32
   359  007EAF  56                 	db	86	;'V'
   360  007EB0  6F                 	db	111	;'o'
   361  007EB1  63                 	db	99	;'c'
   362  007EB2  65                 	db	101	;'e'
   363  007EB3  20                 	db	32
   364  007EB4  76                 	db	118	;'v'
   365  007EB5  65                 	db	101	;'e'
   366  007EB6  6E                 	db	110	;'n'
   367  007EB7  63                 	db	99	;'c'
   368  007EB8  65                 	db	101	;'e'
   369  007EB9  75                 	db	117	;'u'
   370  007EBA  21                 	db	33
   371  007EBB  20                 	db	32
   372  007EBC  7C                 	db	124
   373  007EBD  00                 	db	0
   374  007EBE                     STR_56:
   375  007EBE  7C                 	db	124
   376  007EBF  20                 	db	32
   377  007EC0  56                 	db	86	;'V'
   378  007EC1  6F                 	db	111	;'o'
   379  007EC2  63                 	db	99	;'c'
   380  007EC3  65                 	db	101	;'e'
   381  007EC4  20                 	db	32
   382  007EC5  70                 	db	112	;'p'
   383  007EC6  65                 	db	101	;'e'
   384  007EC7  72                 	db	114	;'r'
   385  007EC8  64                 	db	100	;'d'
   386  007EC9  65                 	db	101	;'e'
   387  007ECA  75                 	db	117	;'u'
   388  007ECB  21                 	db	33
   389  007ECC  20                 	db	32
   390  007ECD  7C                 	db	124
   391  007ECE  00                 	db	0
   392  007ECF                     STR_26:
   393  007ECF  7C                 	db	124
   394  007ED0  20                 	db	32
   395  007ED1  20                 	db	32
   396  007ED2  20                 	db	32
   397  007ED3  20                 	db	32
   398  007ED4  20                 	db	32
   399  007ED5  20                 	db	32
   400  007ED6  20                 	db	32
   401  007ED7  20                 	db	32
   402  007ED8  43                 	db	67	;'C'
   403  007ED9  4C                 	db	76	;'L'
   404  007EDA  4F                 	db	79	;'O'
   405  007EDB  4E                 	db	78	;'N'
   406  007EDC  45                 	db	69	;'E'
   407  007EDD  20                 	db	32
   408  007EDE  7C                 	db	124
   409  007EDF  00                 	db	0
   410  007EE0                     STR_39:
   411  007EE0  7C                 	db	124
   412  007EE1  20                 	db	32
   413  007EE2  20                 	db	32
   414  007EE3  20                 	db	32
   415  007EE4  20                 	db	32
   416  007EE5  20                 	db	32
   417  007EE6  49                 	db	73	;'I'
   418  007EE7  4E                 	db	78	;'N'
   419  007EE8  56                 	db	86	;'V'
   420  007EE9  41                 	db	65	;'A'
   421  007EEA  44                 	db	68	;'D'
   422  007EEB  45                 	db	69	;'E'
   423  007EEC  52                 	db	82	;'R'
   424  007EED  53                 	db	83	;'S'
   425  007EEE  20                 	db	32
   426  007EEF  7C                 	db	124
   427  007EF0  00                 	db	0
   428  007EF1                     STR_1:
   429  007EF1  7C                 	db	124
   430  007EF2  2D                 	db	45
   431  007EF3  2D                 	db	45
   432  007EF4  2D                 	db	45
   433  007EF5  2D                 	db	45
   434  007EF6  2D                 	db	45
   435  007EF7  2D                 	db	45
   436  007EF8  2D                 	db	45
   437  007EF9  2D                 	db	45
   438  007EFA  2D                 	db	45
   439  007EFB  2D                 	db	45
   440  007EFC  2D                 	db	45
   441  007EFD  2D                 	db	45
   442  007EFE  2D                 	db	45
   443  007EFF  2D                 	db	45
   444  007F00  7C                 	db	124
   445  007F01  00                 	db	0
   446  007F02                     STR_19:
   447  007F02  7C                 	db	124
   448  007F03  20                 	db	32
   449  007F04  20                 	db	32
   450  007F05  20                 	db	32
   451  007F06  20                 	db	32
   452  007F07  20                 	db	32
   453  007F08  20                 	db	32
   454  007F09  20                 	db	32
   455  007F0A  20                 	db	32
   456  007F0B  20                 	db	32
   457  007F0C  20                 	db	32
   458  007F0D  49                 	db	73	;'I'
   459  007F0E  4E                 	db	78	;'N'
   460  007F0F  56                 	db	86	;'V'
   461  007F10  41                 	db	65	;'A'
   462  007F11  7C                 	db	124
   463  007F12  00                 	db	0
   464  007F13                     STR_6:
   465  007F13  7C                 	db	124
   466  007F14  20                 	db	32
   467  007F15  20                 	db	32
   468  007F16  20                 	db	32
   469  007F17  20                 	db	32
   470  007F18  20                 	db	32
   471  007F19  20                 	db	32
   472  007F1A  20                 	db	32
   473  007F1B  20                 	db	32
   474  007F1C  20                 	db	32
   475  007F1D  20                 	db	32
   476  007F1E  20                 	db	32
   477  007F1F  20                 	db	32
   478  007F20  20                 	db	32
   479  007F21  43                 	db	67	;'C'
   480  007F22  7C                 	db	124
   481  007F23  00                 	db	0
   482  007F24                     STR_23:
   483  007F24  7C                 	db	124
   484  007F25  20                 	db	32
   485  007F26  20                 	db	32
   486  007F27  20                 	db	32
   487  007F28  20                 	db	32
   488  007F29  20                 	db	32
   489  007F2A  20                 	db	32
   490  007F2B  20                 	db	32
   491  007F2C  20                 	db	32
   492  007F2D  20                 	db	32
   493  007F2E  49                 	db	73	;'I'
   494  007F2F  4E                 	db	78	;'N'
   495  007F30  56                 	db	86	;'V'
   496  007F31  41                 	db	65	;'A'
   497  007F32  44                 	db	68	;'D'
   498  007F33  7C                 	db	124
   499  007F34  00                 	db	0
   500  007F35                     STR_27:
   501  007F35  7C                 	db	124
   502  007F36  20                 	db	32
   503  007F37  20                 	db	32
   504  007F38  20                 	db	32
   505  007F39  20                 	db	32
   506  007F3A  20                 	db	32
   507  007F3B  20                 	db	32
   508  007F3C  20                 	db	32
   509  007F3D  20                 	db	32
   510  007F3E  49                 	db	73	;'I'
   511  007F3F  4E                 	db	78	;'N'
   512  007F40  56                 	db	86	;'V'
   513  007F41  41                 	db	65	;'A'
   514  007F42  44                 	db	68	;'D'
   515  007F43  45                 	db	69	;'E'
   516  007F44  7C                 	db	124
   517  007F45  00                 	db	0
   518  007F46                     STR_22:
   519  007F46  7C                 	db	124
   520  007F47  20                 	db	32
   521  007F48  20                 	db	32
   522  007F49  20                 	db	32
   523  007F4A  20                 	db	32
   524  007F4B  20                 	db	32
   525  007F4C  20                 	db	32
   526  007F4D  20                 	db	32
   527  007F4E  20                 	db	32
   528  007F4F  20                 	db	32
   529  007F50  43                 	db	67	;'C'
   530  007F51  4C                 	db	76	;'L'
   531  007F52  4F                 	db	79	;'O'
   532  007F53  4E                 	db	78	;'N'
   533  007F54  45                 	db	69	;'E'
   534  007F55  7C                 	db	124
   535  007F56  00                 	db	0
   536  007F57                     STR_7:
   537  007F57  7C                 	db	124
   538  007F58  20                 	db	32
   539  007F59  20                 	db	32
   540  007F5A  20                 	db	32
   541  007F5B  20                 	db	32
   542  007F5C  20                 	db	32
   543  007F5D  20                 	db	32
   544  007F5E  20                 	db	32
   545  007F5F  20                 	db	32
   546  007F60  20                 	db	32
   547  007F61  20                 	db	32
   548  007F62  20                 	db	32
   549  007F63  20                 	db	32
   550  007F64  20                 	db	32
   551  007F65  49                 	db	73	;'I'
   552  007F66  7C                 	db	124
   553  007F67  00                 	db	0
   554  007F68                     STR_10:
   555  007F68  7C                 	db	124
   556  007F69  20                 	db	32
   557  007F6A  20                 	db	32
   558  007F6B  20                 	db	32
   559  007F6C  20                 	db	32
   560  007F6D  20                 	db	32
   561  007F6E  20                 	db	32
   562  007F6F  20                 	db	32
   563  007F70  20                 	db	32
   564  007F71  20                 	db	32
   565  007F72  20                 	db	32
   566  007F73  20                 	db	32
   567  007F74  20                 	db	32
   568  007F75  43                 	db	67	;'C'
   569  007F76  4C                 	db	76	;'L'
   570  007F77  7C                 	db	124
   571  007F78  00                 	db	0
   572  007F79                     STR_11:
   573  007F79  7C                 	db	124
   574  007F7A  20                 	db	32
   575  007F7B  20                 	db	32
   576  007F7C  20                 	db	32
   577  007F7D  20                 	db	32
   578  007F7E  20                 	db	32
   579  007F7F  20                 	db	32
   580  007F80  20                 	db	32
   581  007F81  20                 	db	32
   582  007F82  20                 	db	32
   583  007F83  20                 	db	32
   584  007F84  20                 	db	32
   585  007F85  20                 	db	32
   586  007F86  49                 	db	73	;'I'
   587  007F87  4E                 	db	78	;'N'
   588  007F88  7C                 	db	124
   589  007F89  00                 	db	0
   590  007F8A                     STR_18:
   591  007F8A  7C                 	db	124
   592  007F8B  20                 	db	32
   593  007F8C  20                 	db	32
   594  007F8D  20                 	db	32
   595  007F8E  20                 	db	32
   596  007F8F  20                 	db	32
   597  007F90  20                 	db	32
   598  007F91  20                 	db	32
   599  007F92  20                 	db	32
   600  007F93  20                 	db	32
   601  007F94  20                 	db	32
   602  007F95  43                 	db	67	;'C'
   603  007F96  4C                 	db	76	;'L'
   604  007F97  4F                 	db	79	;'O'
   605  007F98  4E                 	db	78	;'N'
   606  007F99  7C                 	db	124
   607  007F9A  00                 	db	0
   608  007F9B                     STR_14:
   609  007F9B  7C                 	db	124
   610  007F9C  20                 	db	32
   611  007F9D  20                 	db	32
   612  007F9E  20                 	db	32
   613  007F9F  20                 	db	32
   614  007FA0  20                 	db	32
   615  007FA1  20                 	db	32
   616  007FA2  20                 	db	32
   617  007FA3  20                 	db	32
   618  007FA4  20                 	db	32
   619  007FA5  20                 	db	32
   620  007FA6  20                 	db	32
   621  007FA7  43                 	db	67	;'C'
   622  007FA8  4C                 	db	76	;'L'
   623  007FA9  4F                 	db	79	;'O'
   624  007FAA  7C                 	db	124
   625  007FAB  00                 	db	0
   626  007FAC                     STR_31:
   627  007FAC  7C                 	db	124
   628  007FAD  20                 	db	32
   629  007FAE  20                 	db	32
   630  007FAF  20                 	db	32
   631  007FB0  20                 	db	32
   632  007FB1  20                 	db	32
   633  007FB2  20                 	db	32
   634  007FB3  20                 	db	32
   635  007FB4  49                 	db	73	;'I'
   636  007FB5  4E                 	db	78	;'N'
   637  007FB6  56                 	db	86	;'V'
   638  007FB7  41                 	db	65	;'A'
   639  007FB8  44                 	db	68	;'D'
   640  007FB9  45                 	db	69	;'E'
   641  007FBA  52                 	db	82	;'R'
   642  007FBB  7C                 	db	124
   643  007FBC  00                 	db	0
   644  007FBD                     STR_35:
   645  007FBD  7C                 	db	124
   646  007FBE  20                 	db	32
   647  007FBF  20                 	db	32
   648  007FC0  20                 	db	32
   649  007FC1  20                 	db	32
   650  007FC2  20                 	db	32
   651  007FC3  20                 	db	32
   652  007FC4  49                 	db	73	;'I'
   653  007FC5  4E                 	db	78	;'N'
   654  007FC6  56                 	db	86	;'V'
   655  007FC7  41                 	db	65	;'A'
   656  007FC8  44                 	db	68	;'D'
   657  007FC9  45                 	db	69	;'E'
   658  007FCA  52                 	db	82	;'R'
   659  007FCB  53                 	db	83	;'S'
   660  007FCC  7C                 	db	124
   661  007FCD  00                 	db	0
   662  007FCE                     STR_15:
   663  007FCE  7C                 	db	124
   664  007FCF  20                 	db	32
   665  007FD0  20                 	db	32
   666  007FD1  20                 	db	32
   667  007FD2  20                 	db	32
   668  007FD3  20                 	db	32
   669  007FD4  20                 	db	32
   670  007FD5  20                 	db	32
   671  007FD6  20                 	db	32
   672  007FD7  20                 	db	32
   673  007FD8  20                 	db	32
   674  007FD9  20                 	db	32
   675  007FDA  49                 	db	73	;'I'
   676  007FDB  4E                 	db	78	;'N'
   677  007FDC  56                 	db	86	;'V'
   678  007FDD  7C                 	db	124
   679  007FDE  00                 	db	0
   680  007FDF                     STR_54:
   681  007FDF  54                 	db	84	;'T'
   682  007FE0  4F                 	db	79	;'O'
   683  007FE1  20                 	db	32
   684  007FE2  53                 	db	83	;'S'
   685  007FE3  54                 	db	84	;'T'
   686  007FE4  41                 	db	65	;'A'
   687  007FE5  52                 	db	82	;'R'
   688  007FE6  54                 	db	84	;'T'
   689  007FE7  2E                 	db	46
   690  007FE8  2E                 	db	46
   691  007FE9  2E                 	db	46
   692  007FEA  00                 	db	0
   693  007FEB                     STR_57:
   694  007FEB  7C                 	db	124
   695  007FEC  20                 	db	32
   696  007FED  53                 	db	83	;'S'
   697  007FEE  63                 	db	99	;'c'
   698  007FEF  6F                 	db	111	;'o'
   699  007FF0  72                 	db	114	;'r'
   700  007FF1  65                 	db	101	;'e'
   701  007FF2  20                 	db	32
   702  007FF3  3D                 	db	61	;'='
   703  007FF4  20                 	db	32
   704  007FF5  00                 	db	0
   705  007FF6                     STR_53:
   706  007FF6  50                 	db	80	;'P'
   707  007FF7  52                 	db	82	;'R'
   708  007FF8  45                 	db	69	;'E'
   709  007FF9  53                 	db	83	;'S'
   710  007FFA  53                 	db	83	;'S'
   711  007FFB  20                 	db	32
   712  007FFC  35                 	db	53	;'5'
   713  007FFD  00                 	db	0
   714  007FFE  00                 	db	0	; dummy byte at the end
   715  0000                     
   716                           ; #config settings
   717                           
   718                           	psect	cinit
   719  005CD4                     __pcinit:
   720                           	callstack 0
   721  005CD4                     start_initialization:
   722                           	callstack 0
   723  005CD4                     __initialization:
   724                           	callstack 0
   725                           
   726                           ; Initialize objects allocated to BANK1 (64 bytes)
   727                           ; load TBLPTR registers with __pidataBANK1
   728  005CD4  0ECC               	movlw	low __pidataBANK1
   729  005CD6  6EF6               	movwf	tblptrl,c
   730  005CD8  0E56               	movlw	high __pidataBANK1
   731  005CDA  6EF7               	movwf	tblptrh,c
   732  005CDC  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   733  005CDE  6EF8               	movwf	tblptru,c
   734  005CE0  EE01  F0B0         	lfsr	0,__pdataBANK1
   735  005CE4  EE10 F040          	lfsr	1,64
   736  005CE8                     copy_data0:
   737  005CE8  0009               	tblrd		*+
   738  005CEA  CFF5 FFEE          	movff	tablat,postinc0
   739  005CEE  50E5               	movf	postdec1,w,c
   740  005CF0  50E1               	movf	fsr1l,w,c
   741  005CF2  E1FA               	bnz	copy_data0
   742                           
   743                           ; Initialize objects allocated to BANK0 (2 bytes)
   744                           ; load TBLPTR registers with __pidataBANK0
   745  005CF4  0E52               	movlw	low __pidataBANK0
   746  005CF6  6EF6               	movwf	tblptrl,c
   747  005CF8  0E56               	movlw	high __pidataBANK0
   748  005CFA  6EF7               	movwf	tblptrh,c
   749  005CFC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   750  005CFE  6EF8               	movwf	tblptru,c
   751  005D00  0009               	tblrd		*+	;fetch initializer
   752  005D02  CFF5 F0DC          	movff	tablat,__pdataBANK0
   753  005D06  0009               	tblrd		*+	;fetch initializer
   754  005D08  CFF5 F0DD          	movff	tablat,__pdataBANK0+1
   755                           
   756                           ; Initialize objects allocated to COMRAM (2 bytes)
   757                           ; load TBLPTR registers with __pidataCOMRAM
   758  005D0C  0E54               	movlw	low __pidataCOMRAM
   759  005D0E  6EF6               	movwf	tblptrl,c
   760  005D10  0E56               	movlw	high __pidataCOMRAM
   761  005D12  6EF7               	movwf	tblptrh,c
   762  005D14  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   763  005D16  6EF8               	movwf	tblptru,c
   764  005D18  0009               	tblrd		*+	;fetch initializer
   765  005D1A  CFF5 F07E          	movff	tablat,__pdataCOMRAM
   766  005D1E  0009               	tblrd		*+	;fetch initializer
   767  005D20  CFF5 F07F          	movff	tablat,__pdataCOMRAM+1
   768                           
   769                           ; Clear objects allocated to BANK1 (176 bytes)
   770  005D24  EE01  F000         	lfsr	0,__pbssBANK1
   771  005D28  0EB0               	movlw	176
   772  005D2A                     clear_0:
   773  005D2A  6AEE               	clrf	postinc0,c
   774  005D2C  06E8               	decf	wreg,f,c
   775  005D2E  E1FD               	bnz	clear_0
   776                           
   777                           ; Clear objects allocated to BANK0 (92 bytes)
   778  005D30  EE00  F080         	lfsr	0,__pbssBANK0
   779  005D34  0E5C               	movlw	92
   780  005D36                     clear_1:
   781  005D36  6AEE               	clrf	postinc0,c
   782  005D38  06E8               	decf	wreg,f,c
   783  005D3A  E1FD               	bnz	clear_1
   784                           
   785                           ; Clear objects allocated to COMRAM (12 bytes)
   786  005D3C  EE00  F072         	lfsr	0,__pbssCOMRAM
   787  005D40  0E0C               	movlw	12
   788  005D42                     clear_2:
   789  005D42  6AEE               	clrf	postinc0,c
   790  005D44  06E8               	decf	wreg,f,c
   791  005D46  E1FD               	bnz	clear_2
   792  005D48                     end_of_initialization:
   793                           	callstack 0
   794  005D48                     __end_of__initialization:
   795                           	callstack 0
   796  005D48  0E00               	movlw	low (__Lmediumconst shr (0+16))
   797  005D4A  6EF8               	movwf	tblptru,c
   798  005D4C  0100               	movlb	0
   799  005D4E  EFEA  F02E         	goto	_main	;jump to C main() function
   800                           
   801                           	psect	bssCOMRAM
   802  000072                     __pbssCOMRAM:
   803                           	callstack 0
   804  000072                     _score:
   805                           	callstack 0
   806  000072                     	ds	2
   807  000074                     _key:
   808                           	callstack 0
   809  000074                     	ds	2
   810  000076                     _j:
   811                           	callstack 0
   812  000076                     	ds	1
   813  000077                     _v3:
   814                           	callstack 0
   815  000077                     	ds	1
   816  000078                     _v2:
   817                           	callstack 0
   818  000078                     	ds	1
   819  000079                     _v1:
   820                           	callstack 0
   821  000079                     	ds	1
   822  00007A                     _v0:
   823                           	callstack 0
   824  00007A                     	ds	1
   825  00007B                     _display:
   826                           	callstack 0
   827  00007B                     	ds	1
   828  00007C                     kpDebounce@tempo:
   829                           	callstack 0
   830  00007C                     	ds	1
   831  00007D                     _i:
   832                           	callstack 0
   833  00007D                     	ds	1
   834                           
   835                           	psect	dataCOMRAM
   836  00007E                     __pdataCOMRAM:
   837                           	callstack 0
   838  00007E                     _level:
   839                           	callstack 0
   840  00007E                     	ds	2
   841                           
   842                           	psect	bssBANK0
   843  000080                     __pbssBANK0:
   844                           	callstack 0
   845  000080                     _screenBuffer:
   846                           	callstack 0
   847  000080                     	ds	64
   848  0000C0                     _player:
   849                           	callstack 0
   850  0000C0                     	ds	11
   851  0000CB                     _aliensLeft:
   852                           	callstack 0
   853  0000CB                     	ds	2
   854  0000CD                     _contadorLoop:
   855                           	callstack 0
   856  0000CD                     	ds	2
   857  0000CF                     _keyCount:
   858                           	callstack 0
   859  0000CF                     	ds	2
   860  0000D1                     kpDebounce@valorAntigo:
   861                           	callstack 0
   862  0000D1                     	ds	2
   863  0000D3                     kpDebounce@valorNovo:
   864                           	callstack 0
   865  0000D3                     	ds	2
   866  0000D5                     _valor:
   867                           	callstack 0
   868  0000D5                     	ds	2
   869  0000D7                     _k:
   870                           	callstack 0
   871  0000D7                     	ds	1
   872  0000D8                     _seed:
   873                           	callstack 0
   874  0000D8                     	ds	4
   875                           
   876                           	psect	dataBANK0
   877  0000DC                     __pdataBANK0:
   878                           	callstack 0
   879  0000DC                     _speed:
   880                           	callstack 0
   881  0000DC                     	ds	2
   882                           
   883                           	psect	bssBANK1
   884  000100                     __pbssBANK1:
   885                           	callstack 0
   886  000100                     _aliens:
   887                           	callstack 0
   888  000100                     	ds	176
   889                           
   890                           	psect	dataBANK1
   891  0001B0                     __pdataBANK1:
   892                           	callstack 0
   893  0001B0                     main@F2650:
   894                           	callstack 0
   895  0001B0                     	ds	64
   896                           
   897                           	psect	cstackCOMRAM
   898  000001                     __pcstackCOMRAM:
   899                           	callstack 0
   900  000001                     ??_kpDebounce:
   901  000001                     ?_kpRead:
   902                           	callstack 0
   903  000001                     ?___wmul:
   904                           	callstack 0
   905  000001                     ?___awdiv:
   906                           	callstack 0
   907  000001                     ?___lwdiv:
   908                           	callstack 0
   909  000001                     ?___lmul:
   910                           	callstack 0
   911  000001                     Delay40us@i:
   912                           	callstack 0
   913  000001                     digitalWrite@pin:
   914                           	callstack 0
   915  000001                     pinMode@pin:
   916                           	callstack 0
   917  000001                     setupLevel@lvl:
   918                           	callstack 0
   919  000001                     ___wmul@multiplier:
   920                           	callstack 0
   921  000001                     ___awdiv@dividend:
   922                           	callstack 0
   923  000001                     ___lwdiv@dividend:
   924                           	callstack 0
   925  000001                     ___lmul@multiplier:
   926                           	callstack 0
   927                           
   928                           ; 4 bytes @ 0x0
   929  000001                     	ds	1
   930  000002                     Delay2ms@i:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x1
   934  000002                     	ds	1
   935  000003                     ??_setupLevel:
   936  000003                     digitalWrite@value:
   937                           	callstack 0
   938  000003                     pinMode@type:
   939                           	callstack 0
   940  000003                     ___wmul@multiplicand:
   941                           	callstack 0
   942  000003                     ___awdiv@divisor:
   943                           	callstack 0
   944  000003                     ___lwdiv@divisor:
   945                           	callstack 0
   946                           
   947                           ; 2 bytes @ 0x2
   948  000003                     	ds	2
   949  000005                     ??_digitalWrite:
   950  000005                     ??_pinMode:
   951  000005                     ___awdiv@counter:
   952                           	callstack 0
   953  000005                     ___wmul@product:
   954                           	callstack 0
   955  000005                     ___lwdiv@quotient:
   956                           	callstack 0
   957  000005                     ___lmul@multiplicand:
   958                           	callstack 0
   959                           
   960                           ; 4 bytes @ 0x4
   961  000005                     	ds	1
   962  000006                     kpDebounce@old_D:
   963                           	callstack 0
   964  000006                     ___awdiv@sign:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x5
   968  000006                     	ds	1
   969  000007                     ??_ssdUpdate:
   970  000007                     lcdCommand@old_D:
   971                           	callstack 0
   972  000007                     lcdChar@valor:
   973                           	callstack 0
   974  000007                     ___lwdiv@counter:
   975                           	callstack 0
   976  000007                     kpDebounce@k:
   977                           	callstack 0
   978  000007                     ___awdiv@quotient:
   979                           	callstack 0
   980                           
   981                           ; 2 bytes @ 0x6
   982  000007                     	ds	1
   983  000008                     ?___lwmod:
   984                           	callstack 0
   985  000008                     lcdCommand@cmd:
   986                           	callstack 0
   987  000008                     lcdChar@old_D:
   988                           	callstack 0
   989  000008                     ___lwmod@dividend:
   990                           	callstack 0
   991                           
   992                           ; 2 bytes @ 0x7
   993  000008                     	ds	1
   994  000009                     kpDebounce@j:
   995                           	callstack 0
   996  000009                     lcdPosition@col:
   997                           	callstack 0
   998  000009                     lcdStr@str:
   999                           	callstack 0
  1000  000009                     lcdStrDelay@str:
  1001                           	callstack 0
  1002  000009                     ___lmul@product:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x8
  1006  000009                     	ds	1
  1007  00000A                     ??_lcdPosition:
  1008  00000A                     kpDebounce@i:
  1009                           	callstack 0
  1010  00000A                     ___lwmod@divisor:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x9
  1014  00000A                     	ds	1
  1015  00000B                     ??_lcdStr:
  1016  00000B                     ??_lcdStrDelay:
  1017                           
  1018                           ; 1 bytes @ 0xA
  1019  00000B                     	ds	1
  1020  00000C                     lcdPosition@line:
  1021                           	callstack 0
  1022  00000C                     ___lwmod@counter:
  1023                           	callstack 0
  1024                           
  1025                           ; 1 bytes @ 0xB
  1026  00000C                     	ds	1
  1027  00000D                     ?_rand:
  1028                           	callstack 0
  1029  00000D                     lcdStr@i:
  1030                           	callstack 0
  1031  00000D                     lcdPosition@command:
  1032                           	callstack 0
  1033  00000D                     ssdDigit@pos:
  1034                           	callstack 0
  1035  00000D                     lcdStrDelay@i_128:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0xC
  1039  00000D                     	ds	1
  1040  00000E                     ssdDigit@val:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0xD
  1044  00000E                     	ds	1
  1045  00000F                     ??_updateScreen:
  1046  00000F                     ??_rand:
  1047  00000F                     lcdStrDelay@i:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0xE
  1051  00000F                     	ds	1
  1052  000010                     titleScreen@key:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0xF
  1056  000010                     	ds	2
  1057  000012                     titleScreen@i:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x11
  1061  000012                     	ds	1
  1062  000013                     ?___awmod:
  1063                           	callstack 0
  1064  000013                     ___awmod@dividend:
  1065                           	callstack 0
  1066                           
  1067                           ; 2 bytes @ 0x12
  1068  000013                     	ds	1
  1069  000014                     titleScreen@i_262:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x13
  1073  000014                     	ds	1
  1074  000015                     _updateScreen$369:
  1075                           	callstack 0
  1076  000015                     ___awmod@divisor:
  1077                           	callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x14
  1080  000015                     	ds	1
  1081  000016                     titleScreen@i_267:
  1082                           	callstack 0
  1083                           
  1084                           ; 2 bytes @ 0x15
  1085  000016                     	ds	1
  1086  000017                     ___awmod@counter:
  1087                           	callstack 0
  1088  000017                     _updateScreen$370:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x16
  1092  000017                     	ds	1
  1093  000018                     ___awmod@sign:
  1094                           	callstack 0
  1095  000018                     titleScreen@i_272:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0x17
  1099  000018                     	ds	1
  1100  000019                     lcdNumber@valor:
  1101                           	callstack 0
  1102  000019                     _updateScreen$371:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x18
  1106  000019                     	ds	1
  1107  00001A                     titleScreen@i_277:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x19
  1111  00001A                     	ds	1
  1112  00001B                     lcdNumber@i:
  1113                           	callstack 0
  1114  00001B                     _updateScreen$372:
  1115                           	callstack 0
  1116                           
  1117                           ; 2 bytes @ 0x1A
  1118  00001B                     	ds	1
  1119  00001C                     titleScreen@i_282:
  1120                           	callstack 0
  1121                           
  1122                           ; 2 bytes @ 0x1B
  1123  00001C                     	ds	1
  1124  00001D                     ??_gameLogic:
  1125  00001D                     _updateScreen$373:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x1C
  1129  00001D                     	ds	1
  1130  00001E                     titleScreen@i_287:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x1D
  1134  00001E                     	ds	2
  1135  000020                     titleScreen@i_292:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1F
  1139  000020                     	ds	2
  1140  000022                     titleScreen@i_297:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x21
  1144  000022                     	ds	2
  1145  000024                     titleScreen@i_302:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x23
  1149  000024                     	ds	2
  1150  000026                     titleScreen@i_307:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x25
  1154  000026                     	ds	2
  1155  000028                     titleScreen@i_312:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x27
  1159  000028                     	ds	2
  1160  00002A                     titleScreen@i_313:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x29
  1164  00002A                     	ds	2
  1165  00002C                     titleScreen@i_314:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x2B
  1169  00002C                     	ds	2
  1170  00002E                     titleScreen@i_315:
  1171                           	callstack 0
  1172                           
  1173                           ; 2 bytes @ 0x2D
  1174  00002E                     	ds	2
  1175  000030                     titleScreen@i_316:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x2F
  1179  000030                     	ds	2
  1180  000032                     main@customChars:
  1181                           	callstack 0
  1182                           
  1183                           ; 64 bytes @ 0x31
  1184  000032                     	ds	64
  1185                           
  1186 ;;
  1187 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1188 ;;
  1189 ;; *************** function _main *****************
  1190 ;; Defined at:
  1191 ;;		line 57 in file "main.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  customChars    64   49[COMRAM] unsigned char [64]
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1205 ;;      Params:         0       0       0       0       0       0       0
  1206 ;;      Locals:        64       0       0       0       0       0       0
  1207 ;;      Temps:          0       0       0       0       0       0       0
  1208 ;;      Totals:        64       0       0       0       0       0       0
  1209 ;;Total ram usage:       64 bytes
  1210 ;; Hardware stack levels required when called:    6
  1211 ;; This function calls:
  1212 ;;		_gameLogic
  1213 ;;		_kpInit
  1214 ;;		_lcdChar
  1215 ;;		_lcdCommand
  1216 ;;		_lcdInit
  1217 ;;		_playerInput
  1218 ;;		_setupLevel
  1219 ;;		_ssdInit
  1220 ;;		_timerInit
  1221 ;;		_titleScreen
  1222 ;;		_updateScreen
  1223 ;; This function is called by:
  1224 ;;		Startup code after reset
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text0
  1229  005DD4                     __ptext0:
  1230                           	callstack 0
  1231  005DD4                     _main:
  1232                           	callstack 25
  1233  005DD4                     
  1234                           ;main.c: 58:     char customChars[64] = {
  1235  005DD4  EE21  F0B0         	lfsr	2,main@F2650
  1236  005DD8  EE10  F032         	lfsr	1,main@customChars
  1237  005DDC  0E3F               	movlw	63
  1238  005DDE                     u3311:
  1239  005DDE  CFDB FFE3          	movff	plusw2,plusw1
  1240  005DE2  06E8               	decf	wreg,f,c
  1241  005DE4  E2FC               	bc	u3311
  1242  005DE6                     
  1243                           ;main.c: 69:     lcdInit();
  1244  005DE6  ECB3  F02D         	call	_lcdInit	;wreg free
  1245  005DEA                     
  1246                           ;main.c: 70:     ssdInit();
  1247  005DEA  ECD8  F02B         	call	_ssdInit	;wreg free
  1248  005DEE                     
  1249                           ;main.c: 71:     kpInit();
  1250  005DEE  EC2F  F02B         	call	_kpInit	;wreg free
  1251  005DF2                     
  1252                           ;main.c: 72:     timerInit();
  1253  005DF2  EC2B  F02B         	call	_timerInit	;wreg free
  1254  005DF6                     
  1255                           ;main.c: 74:     lcdCommand(0x0F);
  1256  005DF6  0E0F               	movlw	15
  1257  005DF8  EC2B  F02E         	call	_lcdCommand
  1258  005DFC                     
  1259                           ;main.c: 75:     lcdCommand(0x0C);
  1260  005DFC  0E0C               	movlw	12
  1261  005DFE  EC2B  F02E         	call	_lcdCommand
  1262  005E02                     
  1263                           ;main.c: 77:     lcdCommand(0x40);
  1264  005E02  0E40               	movlw	64
  1265  005E04  EC2B  F02E         	call	_lcdCommand
  1266  005E08                     
  1267                           ;main.c: 78:     for (i = 0; i < 64; i++) {
  1268  005E08  0E00               	movlw	0
  1269  005E0A  6E7D               	movwf	_i^0,c
  1270  005E0C                     l3599:
  1271  005E0C  0E3F               	movlw	63
  1272  005E0E  647D               	cpfsgt	_i^0,c
  1273  005E10  EF0C  F02F         	goto	u3321
  1274  005E14  EF0E  F02F         	goto	u3320
  1275  005E18                     u3321:
  1276  005E18  EF10  F02F         	goto	l3603
  1277  005E1C                     u3320:
  1278  005E1C  EF1C  F02F         	goto	l3609
  1279  005E20                     l3603:
  1280                           
  1281                           ;main.c: 79:         lcdChar(customChars[i]);
  1282  005E20  0E32               	movlw	low main@customChars
  1283  005E22  247D               	addwf	_i^0,w,c
  1284  005E24  6ED9               	movwf	fsr2l,c
  1285  005E26  6ADA               	clrf	fsr2h,c
  1286  005E28  0E00               	movlw	high main@customChars
  1287  005E2A  22DA               	addwfc	fsr2h,f,c
  1288  005E2C  50DF               	movf	indf2,w,c
  1289  005E2E  ECAE  F02B         	call	_lcdChar
  1290  005E32                     
  1291                           ;main.c: 80:     }
  1292  005E32  2A7D               	incf	_i^0,f,c
  1293  005E34  EF06  F02F         	goto	l3599
  1294  005E38                     l3609:
  1295                           
  1296                           ;main.c: 82:     titleScreen();
  1297  005E38  EC65  F037         	call	_titleScreen	;wreg free
  1298  005E3C                     
  1299                           ;main.c: 84:     lcdCommand(0x01);
  1300  005E3C  0E01               	movlw	1
  1301  005E3E  EC2B  F02E         	call	_lcdCommand
  1302  005E42                     
  1303                           ;main.c: 86:     setupLevel(level);
  1304  005E42  C07E  F001         	movff	_level,setupLevel@lvl
  1305  005E46  C07F  F002         	movff	_level+1,setupLevel@lvl+1
  1306  005E4A  ECBF  F031         	call	_setupLevel	;wreg free
  1307  005E4E                     l3615:
  1308                           
  1309                           ;main.c: 89:         playerInput();
  1310  005E4E  ECEB  F02F         	call	_playerInput	;wreg free
  1311  005E52                     
  1312                           ;main.c: 90:         updateScreen();
  1313  005E52  EC29  F03B         	call	_updateScreen	;wreg free
  1314  005E56                     
  1315                           ;main.c: 91:         gameLogic();
  1316  005E56  EC18  F035         	call	_gameLogic	;wreg free
  1317                           
  1318                           ;main.c: 92:     }
  1319  005E5A  EF27  F02F         	goto	l3615
  1320  005E5E  EF00  F000         	goto	start
  1321  005E62                     __end_of_main:
  1322                           	callstack 0
  1323                           
  1324 ;; *************** function _updateScreen *****************
  1325 ;; Defined at:
  1326 ;;		line 124 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;		None
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;		None
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1340 ;;      Params:         0       0       0       0       0       0       0
  1341 ;;      Locals:        10       0       0       0       0       0       0
  1342 ;;      Temps:          6       0       0       0       0       0       0
  1343 ;;      Totals:        16       0       0       0       0       0       0
  1344 ;;Total ram usage:       16 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    4
  1347 ;; This function calls:
  1348 ;;		___awdiv
  1349 ;;		___lwdiv
  1350 ;;		___lwmod
  1351 ;;		_lcdChar
  1352 ;;		_lcdPosition
  1353 ;;		_ssdDigit
  1354 ;;		_ssdUpdate
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text1
  1361  007652                     __ptext1:
  1362                           	callstack 0
  1363  007652                     _updateScreen:
  1364                           	callstack 26
  1365  007652                     
  1366                           ;main.c: 125:     for (i = 0; i < 8 / 2; i++) {
  1367  007652  0E00               	movlw	0
  1368  007654  6E7D               	movwf	_i^0,c
  1369  007656                     l3325:
  1370  007656  0E03               	movlw	3
  1371  007658  647D               	cpfsgt	_i^0,c
  1372  00765A  EF31  F03B         	goto	u2821
  1373  00765E  EF33  F03B         	goto	u2820
  1374  007662                     u2821:
  1375  007662  EF35  F03B         	goto	l3329
  1376  007666                     u2820:
  1377  007666  EF55  F03B         	goto	l3345
  1378  00766A                     l3329:
  1379                           
  1380                           ;main.c: 126:         for (j = 0; j < 16; j++) {
  1381  00766A  0E00               	movlw	0
  1382  00766C  6E76               	movwf	_j^0,c
  1383  00766E                     l3335:
  1384                           
  1385                           ;main.c: 127:             screenBuffer[i][j] = ' ';
  1386  00766E  507D               	movf	_i^0,w,c
  1387  007670  0D10               	mullw	16
  1388  007672  0E80               	movlw	low _screenBuffer
  1389  007674  6E0F               	movwf	??_updateScreen^0,c
  1390  007676  0E00               	movlw	high _screenBuffer
  1391  007678  6E10               	movwf	(??_updateScreen+1)^0,c
  1392  00767A  50F3               	movf	243,w,c
  1393  00767C  260F               	addwf	??_updateScreen^0,f,c
  1394  00767E  50F4               	movf	244,w,c
  1395  007680  2210               	addwfc	(??_updateScreen+1)^0,f,c
  1396  007682  5076               	movf	_j^0,w,c
  1397  007684  240F               	addwf	??_updateScreen^0,w,c
  1398  007686  6ED9               	movwf	fsr2l,c
  1399  007688  0E00               	movlw	0
  1400  00768A  2010               	addwfc	(??_updateScreen+1)^0,w,c
  1401  00768C  6EDA               	movwf	fsr2h,c
  1402  00768E  0E20               	movlw	32
  1403  007690  6EDF               	movwf	indf2,c
  1404  007692                     
  1405                           ;main.c: 128:         }
  1406  007692  2A76               	incf	_j^0,f,c
  1407  007694  0E0F               	movlw	15
  1408  007696  6476               	cpfsgt	_j^0,c
  1409  007698  EF50  F03B         	goto	u2831
  1410  00769C  EF52  F03B         	goto	u2830
  1411  0076A0                     u2831:
  1412  0076A0  EF37  F03B         	goto	l3335
  1413  0076A4                     u2830:
  1414  0076A4                     
  1415                           ;main.c: 129:     }
  1416  0076A4  2A7D               	incf	_i^0,f,c
  1417  0076A6  EF2B  F03B         	goto	l3325
  1418  0076AA                     l3345:
  1419                           
  1420                           ;main.c: 131:     for (i = 0; i < 16; i++) {
  1421  0076AA  0E00               	movlw	0
  1422  0076AC  6E7D               	movwf	_i^0,c
  1423  0076AE                     l3347:
  1424  0076AE  0E0F               	movlw	15
  1425  0076B0  647D               	cpfsgt	_i^0,c
  1426  0076B2  EF5D  F03B         	goto	u2841
  1427  0076B6  EF5F  F03B         	goto	u2840
  1428  0076BA                     u2841:
  1429  0076BA  EF61  F03B         	goto	l3351
  1430  0076BE                     u2840:
  1431  0076BE  EFC5  F03B         	goto	l3365
  1432  0076C2                     l3351:
  1433                           
  1434                           ;main.c: 132:         if (aliens[i].isAlive) {
  1435  0076C2  507D               	movf	_i^0,w,c
  1436  0076C4  0D0B               	mullw	11
  1437  0076C6  0E00               	movlw	low _aliens
  1438  0076C8  24F3               	addwf	243,w,c
  1439  0076CA  6ED9               	movwf	fsr2l,c
  1440  0076CC  0E01               	movlw	high _aliens
  1441  0076CE  20F4               	addwfc	prodh,w,c
  1442  0076D0  6EDA               	movwf	fsr2h,c
  1443  0076D2  50DF               	movf	indf2,w,c
  1444  0076D4  B4D8               	btfsc	status,2,c
  1445  0076D6  EF6F  F03B         	goto	u2851
  1446  0076DA  EF71  F03B         	goto	u2850
  1447  0076DE                     u2851:
  1448  0076DE  EFC2  F03B         	goto	l3361
  1449  0076E2                     u2850:
  1450  0076E2                     
  1451                           ;main.c: 133:             screenBuffer[aliens[i].y / 2][aliens[i].x]
  1452  0076E2  507D               	movf	_i^0,w,c
  1453  0076E4  0D0B               	mullw	11
  1454  0076E6  0E02               	movlw	low (_aliens+2)
  1455  0076E8  24F3               	addwf	243,w,c
  1456  0076EA  6ED9               	movwf	fsr2l,c
  1457  0076EC  0E01               	movlw	high (_aliens+2)
  1458  0076EE  20F4               	addwfc	prodh,w,c
  1459  0076F0  6EDA               	movwf	fsr2h,c
  1460  0076F2  50DF               	movf	indf2,w,c
  1461  0076F4  A4D8               	btfss	status,2,c
  1462  0076F6  EF7F  F03B         	goto	u2861
  1463  0076FA  EF81  F03B         	goto	u2860
  1464  0076FE                     u2861:
  1465  0076FE  EF87  F03B         	goto	l3357
  1466  007702                     u2860:
  1467  007702  0E00               	movlw	0
  1468  007704  6E16               	movwf	(_updateScreen$369+1)^0,c
  1469  007706  0E05               	movlw	5
  1470  007708  6E15               	movwf	_updateScreen$369^0,c
  1471  00770A  EF8B  F03B         	goto	l3359
  1472  00770E                     l3357:
  1473  00770E  0E00               	movlw	0
  1474  007710  6E16               	movwf	(_updateScreen$369+1)^0,c
  1475  007712  0E04               	movlw	4
  1476  007714  6E15               	movwf	_updateScreen$369^0,c
  1477  007716                     l3359:
  1478  007716  507D               	movf	_i^0,w,c
  1479  007718  0D0B               	mullw	11
  1480  00771A  0E03               	movlw	low (_aliens+3)
  1481  00771C  24F3               	addwf	243,w,c
  1482  00771E  6ED9               	movwf	fsr2l,c
  1483  007720  0E01               	movlw	high (_aliens+3)
  1484  007722  20F4               	addwfc	prodh,w,c
  1485  007724  6EDA               	movwf	fsr2h,c
  1486  007726  CFDE F00F          	movff	postinc2,??_updateScreen
  1487  00772A  CFDD F010          	movff	postdec2,??_updateScreen+1
  1488  00772E  507D               	movf	_i^0,w,c
  1489  007730  0D0B               	mullw	11
  1490  007732  0E05               	movlw	low (_aliens+5)
  1491  007734  24F3               	addwf	243,w,c
  1492  007736  6ED9               	movwf	fsr2l,c
  1493  007738  0E01               	movlw	high (_aliens+5)
  1494  00773A  20F4               	addwfc	prodh,w,c
  1495  00773C  6EDA               	movwf	fsr2h,c
  1496  00773E  CFDE F001          	movff	postinc2,___awdiv@dividend
  1497  007742  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  1498  007746  0E00               	movlw	0
  1499  007748  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1500  00774A  0E02               	movlw	2
  1501  00774C  6E03               	movwf	___awdiv@divisor^0,c
  1502  00774E  EC89  F02F         	call	___awdiv	;wreg free
  1503  007752  3A01               	swapf	?___awdiv^0,f,c
  1504  007754  3A02               	swapf	(?___awdiv+1)^0,f,c
  1505  007756  0EF0               	movlw	240
  1506  007758  1602               	andwf	(?___awdiv+1)^0,f,c
  1507  00775A  5001               	movf	?___awdiv^0,w,c
  1508  00775C  0B0F               	andlw	15
  1509  00775E  1202               	iorwf	(?___awdiv+1)^0,f,c
  1510  007760  0EF0               	movlw	240
  1511  007762  1601               	andwf	?___awdiv^0,f,c
  1512  007764  0E80               	movlw	low _screenBuffer
  1513  007766  6E11               	movwf	(??_updateScreen+2)^0,c
  1514  007768  0E00               	movlw	high _screenBuffer
  1515  00776A  6E12               	movwf	(??_updateScreen+3)^0,c
  1516  00776C  5001               	movf	?___awdiv^0,w,c
  1517  00776E  2611               	addwf	(??_updateScreen+2)^0,f,c
  1518  007770  5002               	movf	(?___awdiv+1)^0,w,c
  1519  007772  2212               	addwfc	(??_updateScreen+3)^0,f,c
  1520  007774  500F               	movf	??_updateScreen^0,w,c
  1521  007776  2411               	addwf	(??_updateScreen+2)^0,w,c
  1522  007778  6ED9               	movwf	fsr2l,c
  1523  00777A  5010               	movf	(??_updateScreen+1)^0,w,c
  1524  00777C  2012               	addwfc	(??_updateScreen+3)^0,w,c
  1525  00777E  6EDA               	movwf	fsr2h,c
  1526  007780  C015  FFDF         	movff	_updateScreen$369,indf2
  1527  007784                     l3361:
  1528                           
  1529                           ;main.c: 136:     }
  1530  007784  2A7D               	incf	_i^0,f,c
  1531  007786  EF57  F03B         	goto	l3347
  1532  00778A                     l3365:
  1533                           
  1534                           ;main.c: 138:     for (i = 0; i < 16; i++) {
  1535  00778A  0E00               	movlw	0
  1536  00778C  6E7D               	movwf	_i^0,c
  1537  00778E                     l3367:
  1538  00778E  0E0F               	movlw	15
  1539  007790  647D               	cpfsgt	_i^0,c
  1540  007792  EFCD  F03B         	goto	u2871
  1541  007796  EFCF  F03B         	goto	u2870
  1542  00779A                     u2871:
  1543  00779A  EFD1  F03B         	goto	l3371
  1544  00779E                     u2870:
  1545  00779E  EFD1  F03D         	goto	l3421
  1546  0077A2                     l3371:
  1547                           
  1548                           ;main.c: 139:         if (aliens[i].projectileAlive) {
  1549  0077A2  507D               	movf	_i^0,w,c
  1550  0077A4  0D0B               	mullw	11
  1551  0077A6  0E01               	movlw	low (_aliens+1)
  1552  0077A8  24F3               	addwf	243,w,c
  1553  0077AA  6ED9               	movwf	fsr2l,c
  1554  0077AC  0E01               	movlw	high (_aliens+1)
  1555  0077AE  20F4               	addwfc	prodh,w,c
  1556  0077B0  6EDA               	movwf	fsr2h,c
  1557  0077B2  50DF               	movf	indf2,w,c
  1558  0077B4  B4D8               	btfsc	status,2,c
  1559  0077B6  EFDF  F03B         	goto	u2881
  1560  0077BA  EFE1  F03B         	goto	u2880
  1561  0077BE                     u2881:
  1562  0077BE  EFCE  F03D         	goto	l3417
  1563  0077C2                     u2880:
  1564  0077C2                     
  1565                           ;main.c: 140:             if ((aliens[i].x == aliens[i].projX) && (aliens[i].projY == 1)
      +                           && (aliens[i].isAlive) && i < 8) {
  1566  0077C2  507D               	movf	_i^0,w,c
  1567  0077C4  0D0B               	mullw	11
  1568  0077C6  0E07               	movlw	low (_aliens+7)
  1569  0077C8  24F3               	addwf	243,w,c
  1570  0077CA  6ED9               	movwf	fsr2l,c
  1571  0077CC  0E01               	movlw	high (_aliens+7)
  1572  0077CE  20F4               	addwfc	prodh,w,c
  1573  0077D0  6EDA               	movwf	fsr2h,c
  1574  0077D2  507D               	movf	_i^0,w,c
  1575  0077D4  0D0B               	mullw	11
  1576  0077D6  0E03               	movlw	low (_aliens+3)
  1577  0077D8  24F3               	addwf	243,w,c
  1578  0077DA  6EE1               	movwf	fsr1l,c
  1579  0077DC  0E01               	movlw	high (_aliens+3)
  1580  0077DE  20F4               	addwfc	prodh,w,c
  1581  0077E0  6EE2               	movwf	fsr1h,c
  1582  0077E2  50DE               	movf	postinc2,w,c
  1583  0077E4  18E6               	xorwf	postinc1,w,c
  1584  0077E6  E107               	bnz	u2891
  1585  0077E8  50DE               	movf	postinc2,w,c
  1586  0077EA  18E6               	xorwf	postinc1,w,c
  1587  0077EC  A4D8               	btfss	status,2,c
  1588  0077EE  EFFB  F03B         	goto	u2891
  1589  0077F2  EFFD  F03B         	goto	u2890
  1590  0077F6                     u2891:
  1591  0077F6  EF79  F03C         	goto	l3389
  1592  0077FA                     u2890:
  1593  0077FA  507D               	movf	_i^0,w,c
  1594  0077FC  0D0B               	mullw	11
  1595  0077FE  0E09               	movlw	low (_aliens+9)
  1596  007800  24F3               	addwf	243,w,c
  1597  007802  6ED9               	movwf	fsr2l,c
  1598  007804  0E01               	movlw	high (_aliens+9)
  1599  007806  20F4               	addwfc	prodh,w,c
  1600  007808  6EDA               	movwf	fsr2h,c
  1601  00780A  04DE               	decf	postinc2,w,c
  1602  00780C  10DE               	iorwf	postinc2,w,c
  1603  00780E  A4D8               	btfss	status,2,c
  1604  007810  EF0C  F03C         	goto	u2901
  1605  007814  EF0E  F03C         	goto	u2900
  1606  007818                     u2901:
  1607  007818  EF79  F03C         	goto	l3389
  1608  00781C                     u2900:
  1609  00781C  507D               	movf	_i^0,w,c
  1610  00781E  0D0B               	mullw	11
  1611  007820  0E00               	movlw	low _aliens
  1612  007822  24F3               	addwf	243,w,c
  1613  007824  6ED9               	movwf	fsr2l,c
  1614  007826  0E01               	movlw	high _aliens
  1615  007828  20F4               	addwfc	prodh,w,c
  1616  00782A  6EDA               	movwf	fsr2h,c
  1617  00782C  50DF               	movf	indf2,w,c
  1618  00782E  B4D8               	btfsc	status,2,c
  1619  007830  EF1C  F03C         	goto	u2911
  1620  007834  EF1E  F03C         	goto	u2910
  1621  007838                     u2911:
  1622  007838  EF79  F03C         	goto	l3389
  1623  00783C                     u2910:
  1624  00783C  0E08               	movlw	8
  1625  00783E  607D               	cpfslt	_i^0,c
  1626  007840  EF24  F03C         	goto	u2921
  1627  007844  EF26  F03C         	goto	u2920
  1628  007848                     u2921:
  1629  007848  EF79  F03C         	goto	l3389
  1630  00784C                     u2920:
  1631  00784C                     
  1632                           ;main.c: 141:                 screenBuffer[aliens[i].projY / 2][aliens[i].projX]
  1633  00784C  507D               	movf	_i^0,w,c
  1634  00784E  0D0B               	mullw	11
  1635  007850  0E02               	movlw	low (_aliens+2)
  1636  007852  24F3               	addwf	243,w,c
  1637  007854  6ED9               	movwf	fsr2l,c
  1638  007856  0E01               	movlw	high (_aliens+2)
  1639  007858  20F4               	addwfc	prodh,w,c
  1640  00785A  6EDA               	movwf	fsr2h,c
  1641  00785C  50DF               	movf	indf2,w,c
  1642  00785E  A4D8               	btfss	status,2,c
  1643  007860  EF34  F03C         	goto	u2931
  1644  007864  EF36  F03C         	goto	u2930
  1645  007868                     u2931:
  1646  007868  EF3C  F03C         	goto	l3385
  1647  00786C                     u2930:
  1648  00786C  0E00               	movlw	0
  1649  00786E  6E18               	movwf	(_updateScreen$370+1)^0,c
  1650  007870  0E07               	movlw	7
  1651  007872  6E17               	movwf	_updateScreen$370^0,c
  1652  007874  EF40  F03C         	goto	l3387
  1653  007878                     l3385:
  1654  007878  0E00               	movlw	0
  1655  00787A  6E18               	movwf	(_updateScreen$370+1)^0,c
  1656  00787C  0E06               	movlw	6
  1657  00787E  6E17               	movwf	_updateScreen$370^0,c
  1658  007880                     l3387:
  1659  007880  507D               	movf	_i^0,w,c
  1660  007882  0D0B               	mullw	11
  1661  007884  0E07               	movlw	low (_aliens+7)
  1662  007886  24F3               	addwf	243,w,c
  1663  007888  6ED9               	movwf	fsr2l,c
  1664  00788A  0E01               	movlw	high (_aliens+7)
  1665  00788C  20F4               	addwfc	prodh,w,c
  1666  00788E  6EDA               	movwf	fsr2h,c
  1667  007890  CFDE F00F          	movff	postinc2,??_updateScreen
  1668  007894  CFDD F010          	movff	postdec2,??_updateScreen+1
  1669  007898  507D               	movf	_i^0,w,c
  1670  00789A  0D0B               	mullw	11
  1671  00789C  0E09               	movlw	low (_aliens+9)
  1672  00789E  24F3               	addwf	243,w,c
  1673  0078A0  6ED9               	movwf	fsr2l,c
  1674  0078A2  0E01               	movlw	high (_aliens+9)
  1675  0078A4  20F4               	addwfc	prodh,w,c
  1676  0078A6  6EDA               	movwf	fsr2h,c
  1677  0078A8  CFDE F001          	movff	postinc2,___awdiv@dividend
  1678  0078AC  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  1679  0078B0  0E00               	movlw	0
  1680  0078B2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1681  0078B4  0E02               	movlw	2
  1682  0078B6  6E03               	movwf	___awdiv@divisor^0,c
  1683  0078B8  EC89  F02F         	call	___awdiv	;wreg free
  1684  0078BC  3A01               	swapf	?___awdiv^0,f,c
  1685  0078BE  3A02               	swapf	(?___awdiv+1)^0,f,c
  1686  0078C0  0EF0               	movlw	240
  1687  0078C2  1602               	andwf	(?___awdiv+1)^0,f,c
  1688  0078C4  5001               	movf	?___awdiv^0,w,c
  1689  0078C6  0B0F               	andlw	15
  1690  0078C8  1202               	iorwf	(?___awdiv+1)^0,f,c
  1691  0078CA  0EF0               	movlw	240
  1692  0078CC  1601               	andwf	?___awdiv^0,f,c
  1693  0078CE  0E80               	movlw	low _screenBuffer
  1694  0078D0  6E11               	movwf	(??_updateScreen+2)^0,c
  1695  0078D2  0E00               	movlw	high _screenBuffer
  1696  0078D4  6E12               	movwf	(??_updateScreen+3)^0,c
  1697  0078D6  5001               	movf	?___awdiv^0,w,c
  1698  0078D8  2611               	addwf	(??_updateScreen+2)^0,f,c
  1699  0078DA  5002               	movf	(?___awdiv+1)^0,w,c
  1700  0078DC  2212               	addwfc	(??_updateScreen+3)^0,f,c
  1701  0078DE  500F               	movf	??_updateScreen^0,w,c
  1702  0078E0  2411               	addwf	(??_updateScreen+2)^0,w,c
  1703  0078E2  6ED9               	movwf	fsr2l,c
  1704  0078E4  5010               	movf	(??_updateScreen+1)^0,w,c
  1705  0078E6  2012               	addwfc	(??_updateScreen+3)^0,w,c
  1706  0078E8  6EDA               	movwf	fsr2h,c
  1707  0078EA  C017  FFDF         	movff	_updateScreen$370,indf2
  1708                           
  1709                           ;main.c: 143:             } else if ((aliens[i].x == aliens[i].projX) && (aliens[i].proj
      +                          Y == 3) && (aliens[i].isAlive)) {
  1710  0078EE  EFCE  F03D         	goto	l3417
  1711  0078F2                     l3389:
  1712  0078F2  507D               	movf	_i^0,w,c
  1713  0078F4  0D0B               	mullw	11
  1714  0078F6  0E07               	movlw	low (_aliens+7)
  1715  0078F8  24F3               	addwf	243,w,c
  1716  0078FA  6ED9               	movwf	fsr2l,c
  1717  0078FC  0E01               	movlw	high (_aliens+7)
  1718  0078FE  20F4               	addwfc	prodh,w,c
  1719  007900  6EDA               	movwf	fsr2h,c
  1720  007902  507D               	movf	_i^0,w,c
  1721  007904  0D0B               	mullw	11
  1722  007906  0E03               	movlw	low (_aliens+3)
  1723  007908  24F3               	addwf	243,w,c
  1724  00790A  6EE1               	movwf	fsr1l,c
  1725  00790C  0E01               	movlw	high (_aliens+3)
  1726  00790E  20F4               	addwfc	prodh,w,c
  1727  007910  6EE2               	movwf	fsr1h,c
  1728  007912  50DE               	movf	postinc2,w,c
  1729  007914  18E6               	xorwf	postinc1,w,c
  1730  007916  E107               	bnz	u2941
  1731  007918  50DE               	movf	postinc2,w,c
  1732  00791A  18E6               	xorwf	postinc1,w,c
  1733  00791C  A4D8               	btfss	status,2,c
  1734  00791E  EF93  F03C         	goto	u2941
  1735  007922  EF95  F03C         	goto	u2940
  1736  007926                     u2941:
  1737  007926  EF0A  F03D         	goto	l3403
  1738  00792A                     u2940:
  1739  00792A  507D               	movf	_i^0,w,c
  1740  00792C  0D0B               	mullw	11
  1741  00792E  0E09               	movlw	low (_aliens+9)
  1742  007930  24F3               	addwf	243,w,c
  1743  007932  6ED9               	movwf	fsr2l,c
  1744  007934  0E01               	movlw	high (_aliens+9)
  1745  007936  20F4               	addwfc	prodh,w,c
  1746  007938  6EDA               	movwf	fsr2h,c
  1747  00793A  0E03               	movlw	3
  1748  00793C  18DE               	xorwf	postinc2,w,c
  1749  00793E  10DE               	iorwf	postinc2,w,c
  1750  007940  A4D8               	btfss	status,2,c
  1751  007942  EFA5  F03C         	goto	u2951
  1752  007946  EFA7  F03C         	goto	u2950
  1753  00794A                     u2951:
  1754  00794A  EF0A  F03D         	goto	l3403
  1755  00794E                     u2950:
  1756  00794E  507D               	movf	_i^0,w,c
  1757  007950  0D0B               	mullw	11
  1758  007952  0E00               	movlw	low _aliens
  1759  007954  24F3               	addwf	243,w,c
  1760  007956  6ED9               	movwf	fsr2l,c
  1761  007958  0E01               	movlw	high _aliens
  1762  00795A  20F4               	addwfc	prodh,w,c
  1763  00795C  6EDA               	movwf	fsr2h,c
  1764  00795E  50DF               	movf	indf2,w,c
  1765  007960  B4D8               	btfsc	status,2,c
  1766  007962  EFB5  F03C         	goto	u2961
  1767  007966  EFB7  F03C         	goto	u2960
  1768  00796A                     u2961:
  1769  00796A  EF0A  F03D         	goto	l3403
  1770  00796E                     u2960:
  1771  00796E                     
  1772                           ;main.c: 144:                 screenBuffer[aliens[i].projY / 2][aliens[i].projX]
  1773  00796E  507D               	movf	_i^0,w,c
  1774  007970  0D0B               	mullw	11
  1775  007972  0E02               	movlw	low (_aliens+2)
  1776  007974  24F3               	addwf	243,w,c
  1777  007976  6ED9               	movwf	fsr2l,c
  1778  007978  0E01               	movlw	high (_aliens+2)
  1779  00797A  20F4               	addwfc	prodh,w,c
  1780  00797C  6EDA               	movwf	fsr2h,c
  1781  00797E  50DF               	movf	indf2,w,c
  1782  007980  A4D8               	btfss	status,2,c
  1783  007982  EFC5  F03C         	goto	u2971
  1784  007986  EFC7  F03C         	goto	u2970
  1785  00798A                     u2971:
  1786  00798A  EFCD  F03C         	goto	l3399
  1787  00798E                     u2970:
  1788  00798E  0E00               	movlw	0
  1789  007990  6E1A               	movwf	(_updateScreen$371+1)^0,c
  1790  007992  0E07               	movlw	7
  1791  007994  6E19               	movwf	_updateScreen$371^0,c
  1792  007996  EFD1  F03C         	goto	l3401
  1793  00799A                     l3399:
  1794  00799A  0E00               	movlw	0
  1795  00799C  6E1A               	movwf	(_updateScreen$371+1)^0,c
  1796  00799E  0E06               	movlw	6
  1797  0079A0  6E19               	movwf	_updateScreen$371^0,c
  1798  0079A2                     l3401:
  1799  0079A2  507D               	movf	_i^0,w,c
  1800  0079A4  0D0B               	mullw	11
  1801  0079A6  0E07               	movlw	low (_aliens+7)
  1802  0079A8  24F3               	addwf	243,w,c
  1803  0079AA  6ED9               	movwf	fsr2l,c
  1804  0079AC  0E01               	movlw	high (_aliens+7)
  1805  0079AE  20F4               	addwfc	prodh,w,c
  1806  0079B0  6EDA               	movwf	fsr2h,c
  1807  0079B2  CFDE F00F          	movff	postinc2,??_updateScreen
  1808  0079B6  CFDD F010          	movff	postdec2,??_updateScreen+1
  1809  0079BA  507D               	movf	_i^0,w,c
  1810  0079BC  0D0B               	mullw	11
  1811  0079BE  0E09               	movlw	low (_aliens+9)
  1812  0079C0  24F3               	addwf	243,w,c
  1813  0079C2  6ED9               	movwf	fsr2l,c
  1814  0079C4  0E01               	movlw	high (_aliens+9)
  1815  0079C6  20F4               	addwfc	prodh,w,c
  1816  0079C8  6EDA               	movwf	fsr2h,c
  1817  0079CA  CFDE F001          	movff	postinc2,___awdiv@dividend
  1818  0079CE  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  1819  0079D2  0E00               	movlw	0
  1820  0079D4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1821  0079D6  0E02               	movlw	2
  1822  0079D8  6E03               	movwf	___awdiv@divisor^0,c
  1823  0079DA  EC89  F02F         	call	___awdiv	;wreg free
  1824  0079DE  3A01               	swapf	?___awdiv^0,f,c
  1825  0079E0  3A02               	swapf	(?___awdiv+1)^0,f,c
  1826  0079E2  0EF0               	movlw	240
  1827  0079E4  1602               	andwf	(?___awdiv+1)^0,f,c
  1828  0079E6  5001               	movf	?___awdiv^0,w,c
  1829  0079E8  0B0F               	andlw	15
  1830  0079EA  1202               	iorwf	(?___awdiv+1)^0,f,c
  1831  0079EC  0EF0               	movlw	240
  1832  0079EE  1601               	andwf	?___awdiv^0,f,c
  1833  0079F0  0E80               	movlw	low _screenBuffer
  1834  0079F2  6E11               	movwf	(??_updateScreen+2)^0,c
  1835  0079F4  0E00               	movlw	high _screenBuffer
  1836  0079F6  6E12               	movwf	(??_updateScreen+3)^0,c
  1837  0079F8  5001               	movf	?___awdiv^0,w,c
  1838  0079FA  2611               	addwf	(??_updateScreen+2)^0,f,c
  1839  0079FC  5002               	movf	(?___awdiv+1)^0,w,c
  1840  0079FE  2212               	addwfc	(??_updateScreen+3)^0,f,c
  1841  007A00  500F               	movf	??_updateScreen^0,w,c
  1842  007A02  2411               	addwf	(??_updateScreen+2)^0,w,c
  1843  007A04  6ED9               	movwf	fsr2l,c
  1844  007A06  5010               	movf	(??_updateScreen+1)^0,w,c
  1845  007A08  2012               	addwfc	(??_updateScreen+3)^0,w,c
  1846  007A0A  6EDA               	movwf	fsr2h,c
  1847  007A0C  C019  FFDF         	movff	_updateScreen$371,indf2
  1848                           
  1849                           ;main.c: 146:             } else if ((player.x == aliens[i].projX) && (aliens[i].projY =
      +                          = player.y - 1)) {
  1850  007A10  EFCE  F03D         	goto	l3417
  1851  007A14                     l3403:
  1852  007A14  507D               	movf	_i^0,w,c
  1853  007A16  0D0B               	mullw	11
  1854  007A18  0E07               	movlw	low (_aliens+7)
  1855  007A1A  24F3               	addwf	243,w,c
  1856  007A1C  6ED9               	movwf	fsr2l,c
  1857  007A1E  0E01               	movlw	high (_aliens+7)
  1858  007A20  20F4               	addwfc	prodh,w,c
  1859  007A22  6EDA               	movwf	fsr2h,c
  1860  007A24  50DE               	movf	postinc2,w,c
  1861  007A26  0100               	movlb	0	; () banked
  1862  007A28  19C3               	xorwf	(_player+3)& (0+255),w,b
  1863  007A2A  E107               	bnz	u2981
  1864  007A2C  50DE               	movf	postinc2,w,c
  1865  007A2E  19C4               	xorwf	(_player+4)& (0+255),w,b
  1866  007A30  A4D8               	btfss	status,2,c
  1867  007A32  EF1D  F03D         	goto	u2981
  1868  007A36  EF1F  F03D         	goto	u2980
  1869  007A3A                     u2981:
  1870  007A3A  EF7A  F03D         	goto	l3409
  1871  007A3E                     u2980:
  1872  007A3E                     
  1873                           ; BSR set to: 0
  1874  007A3E  507D               	movf	_i^0,w,c
  1875  007A40  0D0B               	mullw	11
  1876  007A42  0E09               	movlw	low (_aliens+9)
  1877  007A44  24F3               	addwf	243,w,c
  1878  007A46  6ED9               	movwf	fsr2l,c
  1879  007A48  0E01               	movlw	high (_aliens+9)
  1880  007A4A  20F4               	addwfc	prodh,w,c
  1881  007A4C  6EDA               	movwf	fsr2h,c
  1882  007A4E  0EFF               	movlw	255
  1883  007A50  6E11               	movwf	(??_updateScreen+2)^0,c
  1884  007A52  0EFF               	movlw	255
  1885  007A54  6E12               	movwf	(??_updateScreen+3)^0,c
  1886  007A56  EE10  F0C5         	lfsr	1,_player+5
  1887  007A5A  CFE6 F013          	movff	postinc1,??_updateScreen+4
  1888  007A5E  CFE5 F014          	movff	postdec1,??_updateScreen+5
  1889  007A62  5011               	movf	(??_updateScreen+2)^0,w,c
  1890  007A64  2613               	addwf	(??_updateScreen+4)^0,f,c
  1891  007A66  5012               	movf	(??_updateScreen+3)^0,w,c
  1892  007A68  2214               	addwfc	(??_updateScreen+5)^0,f,c
  1893  007A6A  50DE               	movf	postinc2,w,c
  1894  007A6C  1813               	xorwf	(??_updateScreen+4)^0,w,c
  1895  007A6E  E107               	bnz	u2991
  1896  007A70  50DE               	movf	postinc2,w,c
  1897  007A72  1814               	xorwf	(??_updateScreen+5)^0,w,c
  1898  007A74  A4D8               	btfss	status,2,c
  1899  007A76  EF3F  F03D         	goto	u2991
  1900  007A7A  EF41  F03D         	goto	u2990
  1901  007A7E                     u2991:
  1902  007A7E  EF7A  F03D         	goto	l3409
  1903  007A82                     u2990:
  1904  007A82                     
  1905                           ; BSR set to: 0
  1906                           ;main.c: 147:                 screenBuffer[aliens[i].projY / 2][aliens[i].projX] = 1;
  1907  007A82  507D               	movf	_i^0,w,c
  1908  007A84  0D0B               	mullw	11
  1909  007A86  0E07               	movlw	low (_aliens+7)
  1910  007A88  24F3               	addwf	243,w,c
  1911  007A8A  6ED9               	movwf	fsr2l,c
  1912  007A8C  0E01               	movlw	high (_aliens+7)
  1913  007A8E  20F4               	addwfc	prodh,w,c
  1914  007A90  6EDA               	movwf	fsr2h,c
  1915  007A92  CFDE F00F          	movff	postinc2,??_updateScreen
  1916  007A96  CFDD F010          	movff	postdec2,??_updateScreen+1
  1917  007A9A  507D               	movf	_i^0,w,c
  1918  007A9C  0D0B               	mullw	11
  1919  007A9E  0E09               	movlw	low (_aliens+9)
  1920  007AA0  24F3               	addwf	243,w,c
  1921  007AA2  6ED9               	movwf	fsr2l,c
  1922  007AA4  0E01               	movlw	high (_aliens+9)
  1923  007AA6  20F4               	addwfc	prodh,w,c
  1924  007AA8  6EDA               	movwf	fsr2h,c
  1925  007AAA  CFDE F001          	movff	postinc2,___awdiv@dividend
  1926  007AAE  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  1927  007AB2  0E00               	movlw	0
  1928  007AB4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1929  007AB6  0E02               	movlw	2
  1930  007AB8  6E03               	movwf	___awdiv@divisor^0,c
  1931  007ABA  EC89  F02F         	call	___awdiv	;wreg free
  1932  007ABE  3A01               	swapf	?___awdiv^0,f,c
  1933  007AC0  3A02               	swapf	(?___awdiv+1)^0,f,c
  1934  007AC2  0EF0               	movlw	240
  1935  007AC4  1602               	andwf	(?___awdiv+1)^0,f,c
  1936  007AC6  5001               	movf	?___awdiv^0,w,c
  1937  007AC8  0B0F               	andlw	15
  1938  007ACA  1202               	iorwf	(?___awdiv+1)^0,f,c
  1939  007ACC  0EF0               	movlw	240
  1940  007ACE  1601               	andwf	?___awdiv^0,f,c
  1941  007AD0  0E80               	movlw	low _screenBuffer
  1942  007AD2  6E11               	movwf	(??_updateScreen+2)^0,c
  1943  007AD4  0E00               	movlw	high _screenBuffer
  1944  007AD6  6E12               	movwf	(??_updateScreen+3)^0,c
  1945  007AD8  5001               	movf	?___awdiv^0,w,c
  1946  007ADA  2611               	addwf	(??_updateScreen+2)^0,f,c
  1947  007ADC  5002               	movf	(?___awdiv+1)^0,w,c
  1948  007ADE  2212               	addwfc	(??_updateScreen+3)^0,f,c
  1949  007AE0  500F               	movf	??_updateScreen^0,w,c
  1950  007AE2  2411               	addwf	(??_updateScreen+2)^0,w,c
  1951  007AE4  6ED9               	movwf	fsr2l,c
  1952  007AE6  5010               	movf	(??_updateScreen+1)^0,w,c
  1953  007AE8  2012               	addwfc	(??_updateScreen+3)^0,w,c
  1954  007AEA  6EDA               	movwf	fsr2h,c
  1955  007AEC  0E01               	movlw	1
  1956  007AEE  6EDF               	movwf	indf2,c
  1957                           
  1958                           ;main.c: 148:             } else {
  1959  007AF0  EFCE  F03D         	goto	l3417
  1960  007AF4                     l3409:
  1961                           
  1962                           ; BSR set to: 0
  1963                           ;main.c: 149:                 screenBuffer[aliens[i].projY / 2][aliens[i].projX]
  1964  007AF4  507D               	movf	_i^0,w,c
  1965  007AF6  0D0B               	mullw	11
  1966  007AF8  0E09               	movlw	low (_aliens+9)
  1967  007AFA  24F3               	addwf	243,w,c
  1968  007AFC  6ED9               	movwf	fsr2l,c
  1969  007AFE  0E01               	movlw	high (_aliens+9)
  1970  007B00  20F4               	addwfc	prodh,w,c
  1971  007B02  6EDA               	movwf	fsr2h,c
  1972  007B04  CFDE F00F          	movff	postinc2,??_updateScreen
  1973  007B08  CFDD F010          	movff	postdec2,??_updateScreen+1
  1974  007B0C  B00F               	btfsc	??_updateScreen^0,0,c
  1975  007B0E  EF8B  F03D         	goto	u3001
  1976  007B12  EF8D  F03D         	goto	u3000
  1977  007B16                     u3001:
  1978  007B16  EF93  F03D         	goto	l3413
  1979  007B1A                     u3000:
  1980  007B1A                     
  1981                           ; BSR set to: 0
  1982  007B1A  0E00               	movlw	0
  1983  007B1C  6E1C               	movwf	(_updateScreen$372+1)^0,c
  1984  007B1E  0E03               	movlw	3
  1985  007B20  6E1B               	movwf	_updateScreen$372^0,c
  1986  007B22  EF97  F03D         	goto	l3415
  1987  007B26                     l3413:
  1988                           
  1989                           ; BSR set to: 0
  1990  007B26  0E00               	movlw	0
  1991  007B28  6E1C               	movwf	(_updateScreen$372+1)^0,c
  1992  007B2A  0E02               	movlw	2
  1993  007B2C  6E1B               	movwf	_updateScreen$372^0,c
  1994  007B2E                     l3415:
  1995                           
  1996                           ; BSR set to: 0
  1997  007B2E  507D               	movf	_i^0,w,c
  1998  007B30  0D0B               	mullw	11
  1999  007B32  0E07               	movlw	low (_aliens+7)
  2000  007B34  24F3               	addwf	243,w,c
  2001  007B36  6ED9               	movwf	fsr2l,c
  2002  007B38  0E01               	movlw	high (_aliens+7)
  2003  007B3A  20F4               	addwfc	prodh,w,c
  2004  007B3C  6EDA               	movwf	fsr2h,c
  2005  007B3E  CFDE F00F          	movff	postinc2,??_updateScreen
  2006  007B42  CFDD F010          	movff	postdec2,??_updateScreen+1
  2007  007B46  507D               	movf	_i^0,w,c
  2008  007B48  0D0B               	mullw	11
  2009  007B4A  0E09               	movlw	low (_aliens+9)
  2010  007B4C  24F3               	addwf	243,w,c
  2011  007B4E  6ED9               	movwf	fsr2l,c
  2012  007B50  0E01               	movlw	high (_aliens+9)
  2013  007B52  20F4               	addwfc	prodh,w,c
  2014  007B54  6EDA               	movwf	fsr2h,c
  2015  007B56  CFDE F001          	movff	postinc2,___awdiv@dividend
  2016  007B5A  CFDD F002          	movff	postdec2,___awdiv@dividend+1
  2017  007B5E  0E00               	movlw	0
  2018  007B60  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2019  007B62  0E02               	movlw	2
  2020  007B64  6E03               	movwf	___awdiv@divisor^0,c
  2021  007B66  EC89  F02F         	call	___awdiv	;wreg free
  2022  007B6A  3A01               	swapf	?___awdiv^0,f,c
  2023  007B6C  3A02               	swapf	(?___awdiv+1)^0,f,c
  2024  007B6E  0EF0               	movlw	240
  2025  007B70  1602               	andwf	(?___awdiv+1)^0,f,c
  2026  007B72  5001               	movf	?___awdiv^0,w,c
  2027  007B74  0B0F               	andlw	15
  2028  007B76  1202               	iorwf	(?___awdiv+1)^0,f,c
  2029  007B78  0EF0               	movlw	240
  2030  007B7A  1601               	andwf	?___awdiv^0,f,c
  2031  007B7C  0E80               	movlw	low _screenBuffer
  2032  007B7E  6E11               	movwf	(??_updateScreen+2)^0,c
  2033  007B80  0E00               	movlw	high _screenBuffer
  2034  007B82  6E12               	movwf	(??_updateScreen+3)^0,c
  2035  007B84  5001               	movf	?___awdiv^0,w,c
  2036  007B86  2611               	addwf	(??_updateScreen+2)^0,f,c
  2037  007B88  5002               	movf	(?___awdiv+1)^0,w,c
  2038  007B8A  2212               	addwfc	(??_updateScreen+3)^0,f,c
  2039  007B8C  500F               	movf	??_updateScreen^0,w,c
  2040  007B8E  2411               	addwf	(??_updateScreen+2)^0,w,c
  2041  007B90  6ED9               	movwf	fsr2l,c
  2042  007B92  5010               	movf	(??_updateScreen+1)^0,w,c
  2043  007B94  2012               	addwfc	(??_updateScreen+3)^0,w,c
  2044  007B96  6EDA               	movwf	fsr2h,c
  2045  007B98  C01B  FFDF         	movff	_updateScreen$372,indf2
  2046  007B9C                     l3417:
  2047                           
  2048                           ;main.c: 153:     }
  2049  007B9C  2A7D               	incf	_i^0,f,c
  2050  007B9E  EFC7  F03B         	goto	l3367
  2051  007BA2                     l3421:
  2052                           
  2053                           ;main.c: 155:     if (player.isAlive) {
  2054  007BA2  0100               	movlb	0	; () banked
  2055  007BA4  51C0               	movf	_player& (0+255),w,b
  2056  007BA6  B4D8               	btfsc	status,2,c
  2057  007BA8  EFD8  F03D         	goto	u3011
  2058  007BAC  EFDA  F03D         	goto	u3010
  2059  007BB0                     u3011:
  2060  007BB0  EFFE  F03D         	goto	l3425
  2061  007BB4                     u3010:
  2062  007BB4                     
  2063                           ; BSR set to: 0
  2064                           ;main.c: 156:         screenBuffer[player.y / 2][player.x] = 0;
  2065  007BB4  C0C5  F001         	movff	_player+5,___awdiv@dividend
  2066  007BB8  C0C6  F002         	movff	_player+6,___awdiv@dividend+1
  2067  007BBC  0E00               	movlw	0
  2068  007BBE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2069  007BC0  0E02               	movlw	2
  2070  007BC2  6E03               	movwf	___awdiv@divisor^0,c
  2071  007BC4  EC89  F02F         	call	___awdiv	;wreg free
  2072  007BC8  3A01               	swapf	?___awdiv^0,f,c
  2073  007BCA  3A02               	swapf	(?___awdiv+1)^0,f,c
  2074  007BCC  0EF0               	movlw	240
  2075  007BCE  1602               	andwf	(?___awdiv+1)^0,f,c
  2076  007BD0  5001               	movf	?___awdiv^0,w,c
  2077  007BD2  0B0F               	andlw	15
  2078  007BD4  1202               	iorwf	(?___awdiv+1)^0,f,c
  2079  007BD6  0EF0               	movlw	240
  2080  007BD8  1601               	andwf	?___awdiv^0,f,c
  2081  007BDA  0E80               	movlw	low _screenBuffer
  2082  007BDC  6E0F               	movwf	??_updateScreen^0,c
  2083  007BDE  0E00               	movlw	high _screenBuffer
  2084  007BE0  6E10               	movwf	(??_updateScreen+1)^0,c
  2085  007BE2  5001               	movf	?___awdiv^0,w,c
  2086  007BE4  260F               	addwf	??_updateScreen^0,f,c
  2087  007BE6  5002               	movf	(?___awdiv+1)^0,w,c
  2088  007BE8  2210               	addwfc	(??_updateScreen+1)^0,f,c
  2089  007BEA  0100               	movlb	0	; () banked
  2090  007BEC  51C3               	movf	(_player+3)& (0+255),w,b
  2091  007BEE  240F               	addwf	??_updateScreen^0,w,c
  2092  007BF0  6ED9               	movwf	fsr2l,c
  2093  007BF2  51C4               	movf	(_player+4)& (0+255),w,b
  2094  007BF4  2010               	addwfc	(??_updateScreen+1)^0,w,c
  2095  007BF6  6EDA               	movwf	fsr2h,c
  2096  007BF8  0E00               	movlw	0
  2097  007BFA  6EDF               	movwf	indf2,c
  2098  007BFC                     l3425:
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;main.c: 159:     if (player.projectileAlive) {
  2102  007BFC  51C1               	movf	(_player+1)& (0+255),w,b
  2103  007BFE  B4D8               	btfsc	status,2,c
  2104  007C00  EF04  F03E         	goto	u3021
  2105  007C04  EF06  F03E         	goto	u3020
  2106  007C08                     u3021:
  2107  007C08  EF7B  F03E         	goto	l3437
  2108  007C0C                     u3020:
  2109  007C0C                     
  2110                           ; BSR set to: 0
  2111                           ;main.c: 160:         if (player.projY == (player.y - 1)) {
  2112  007C0C  0EFF               	movlw	255
  2113  007C0E  6E0F               	movwf	??_updateScreen^0,c
  2114  007C10  0EFF               	movlw	255
  2115  007C12  6E10               	movwf	(??_updateScreen+1)^0,c
  2116  007C14  EE20  F0C5         	lfsr	2,_player+5
  2117  007C18  CFDE F011          	movff	postinc2,??_updateScreen+2
  2118  007C1C  CFDD F012          	movff	postdec2,??_updateScreen+3
  2119  007C20  500F               	movf	??_updateScreen^0,w,c
  2120  007C22  2611               	addwf	(??_updateScreen+2)^0,f,c
  2121  007C24  5010               	movf	(??_updateScreen+1)^0,w,c
  2122  007C26  2212               	addwfc	(??_updateScreen+3)^0,f,c
  2123  007C28  51C9               	movf	(_player+9)& (0+255),w,b
  2124  007C2A  1811               	xorwf	(??_updateScreen+2)^0,w,c
  2125  007C2C  E107               	bnz	u3031
  2126  007C2E  51CA               	movf	(_player+10)& (0+255),w,b
  2127  007C30  1812               	xorwf	(??_updateScreen+3)^0,w,c
  2128  007C32  A4D8               	btfss	status,2,c
  2129  007C34  EF1E  F03E         	goto	u3031
  2130  007C38  EF20  F03E         	goto	u3030
  2131  007C3C                     u3031:
  2132  007C3C  EF46  F03E         	goto	l401
  2133  007C40                     u3030:
  2134  007C40                     
  2135                           ; BSR set to: 0
  2136                           ;main.c: 161:             screenBuffer[player.projY / 2][player.projX] = 1;
  2137  007C40  C0C9  F001         	movff	_player+9,___awdiv@dividend
  2138  007C44  C0CA  F002         	movff	_player+10,___awdiv@dividend+1
  2139  007C48  0E00               	movlw	0
  2140  007C4A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2141  007C4C  0E02               	movlw	2
  2142  007C4E  6E03               	movwf	___awdiv@divisor^0,c
  2143  007C50  EC89  F02F         	call	___awdiv	;wreg free
  2144  007C54  3A01               	swapf	?___awdiv^0,f,c
  2145  007C56  3A02               	swapf	(?___awdiv+1)^0,f,c
  2146  007C58  0EF0               	movlw	240
  2147  007C5A  1602               	andwf	(?___awdiv+1)^0,f,c
  2148  007C5C  5001               	movf	?___awdiv^0,w,c
  2149  007C5E  0B0F               	andlw	15
  2150  007C60  1202               	iorwf	(?___awdiv+1)^0,f,c
  2151  007C62  0EF0               	movlw	240
  2152  007C64  1601               	andwf	?___awdiv^0,f,c
  2153  007C66  0E80               	movlw	low _screenBuffer
  2154  007C68  6E0F               	movwf	??_updateScreen^0,c
  2155  007C6A  0E00               	movlw	high _screenBuffer
  2156  007C6C  6E10               	movwf	(??_updateScreen+1)^0,c
  2157  007C6E  5001               	movf	?___awdiv^0,w,c
  2158  007C70  260F               	addwf	??_updateScreen^0,f,c
  2159  007C72  5002               	movf	(?___awdiv+1)^0,w,c
  2160  007C74  2210               	addwfc	(??_updateScreen+1)^0,f,c
  2161  007C76  0100               	movlb	0	; () banked
  2162  007C78  51C7               	movf	(_player+7)& (0+255),w,b
  2163  007C7A  240F               	addwf	??_updateScreen^0,w,c
  2164  007C7C  6ED9               	movwf	fsr2l,c
  2165  007C7E  51C8               	movf	(_player+8)& (0+255),w,b
  2166  007C80  2010               	addwfc	(??_updateScreen+1)^0,w,c
  2167  007C82  6EDA               	movwf	fsr2h,c
  2168  007C84  0E01               	movlw	1
  2169  007C86  6EDF               	movwf	indf2,c
  2170                           
  2171                           ;main.c: 162:         } else {
  2172  007C88  EF7B  F03E         	goto	l3437
  2173  007C8C                     l401:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;main.c: 163:             screenBuffer[player.projY / 2][player.projX]
  2177  007C8C  B1C9               	btfsc	(_player+9)& (0+255),0,b
  2178  007C8E  EF4B  F03E         	goto	u3041
  2179  007C92  EF4D  F03E         	goto	u3040
  2180  007C96                     u3041:
  2181  007C96  EF53  F03E         	goto	l3433
  2182  007C9A                     u3040:
  2183  007C9A                     
  2184                           ; BSR set to: 0
  2185  007C9A  0E00               	movlw	0
  2186  007C9C  6E1E               	movwf	(_updateScreen$373+1)^0,c
  2187  007C9E  0E03               	movlw	3
  2188  007CA0  6E1D               	movwf	_updateScreen$373^0,c
  2189  007CA2  EF57  F03E         	goto	l3435
  2190  007CA6                     l3433:
  2191                           
  2192                           ; BSR set to: 0
  2193  007CA6  0E00               	movlw	0
  2194  007CA8  6E1E               	movwf	(_updateScreen$373+1)^0,c
  2195  007CAA  0E02               	movlw	2
  2196  007CAC  6E1D               	movwf	_updateScreen$373^0,c
  2197  007CAE                     l3435:
  2198                           
  2199                           ; BSR set to: 0
  2200  007CAE  C0C9  F001         	movff	_player+9,___awdiv@dividend
  2201  007CB2  C0CA  F002         	movff	_player+10,___awdiv@dividend+1
  2202  007CB6  0E00               	movlw	0
  2203  007CB8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2204  007CBA  0E02               	movlw	2
  2205  007CBC  6E03               	movwf	___awdiv@divisor^0,c
  2206  007CBE  EC89  F02F         	call	___awdiv	;wreg free
  2207  007CC2  3A01               	swapf	?___awdiv^0,f,c
  2208  007CC4  3A02               	swapf	(?___awdiv+1)^0,f,c
  2209  007CC6  0EF0               	movlw	240
  2210  007CC8  1602               	andwf	(?___awdiv+1)^0,f,c
  2211  007CCA  5001               	movf	?___awdiv^0,w,c
  2212  007CCC  0B0F               	andlw	15
  2213  007CCE  1202               	iorwf	(?___awdiv+1)^0,f,c
  2214  007CD0  0EF0               	movlw	240
  2215  007CD2  1601               	andwf	?___awdiv^0,f,c
  2216  007CD4  0E80               	movlw	low _screenBuffer
  2217  007CD6  6E0F               	movwf	??_updateScreen^0,c
  2218  007CD8  0E00               	movlw	high _screenBuffer
  2219  007CDA  6E10               	movwf	(??_updateScreen+1)^0,c
  2220  007CDC  5001               	movf	?___awdiv^0,w,c
  2221  007CDE  260F               	addwf	??_updateScreen^0,f,c
  2222  007CE0  5002               	movf	(?___awdiv+1)^0,w,c
  2223  007CE2  2210               	addwfc	(??_updateScreen+1)^0,f,c
  2224  007CE4  0100               	movlb	0	; () banked
  2225  007CE6  51C7               	movf	(_player+7)& (0+255),w,b
  2226  007CE8  240F               	addwf	??_updateScreen^0,w,c
  2227  007CEA  6ED9               	movwf	fsr2l,c
  2228  007CEC  51C8               	movf	(_player+8)& (0+255),w,b
  2229  007CEE  2010               	addwfc	(??_updateScreen+1)^0,w,c
  2230  007CF0  6EDA               	movwf	fsr2h,c
  2231  007CF2  C01D  FFDF         	movff	_updateScreen$373,indf2
  2232  007CF6                     l3437:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 168:     for (i = 0; i < 8 / 2; i++) {
  2236  007CF6  0E00               	movlw	0
  2237  007CF8  6E7D               	movwf	_i^0,c
  2238  007CFA                     l3439:
  2239  007CFA  0E03               	movlw	3
  2240  007CFC  647D               	cpfsgt	_i^0,c
  2241  007CFE  EF83  F03E         	goto	u3051
  2242  007D02  EF85  F03E         	goto	u3050
  2243  007D06                     u3051:
  2244  007D06  EF87  F03E         	goto	l3443
  2245  007D0A                     u3050:
  2246  007D0A  EFAD  F03E         	goto	l3461
  2247  007D0E                     l3443:
  2248                           
  2249                           ;main.c: 169:         lcdPosition(i, 0);
  2250  007D0E  0E00               	movlw	0
  2251  007D10  6E09               	movwf	lcdPosition@col^0,c
  2252  007D12  507D               	movf	_i^0,w,c
  2253  007D14  ECA9  F02E         	call	_lcdPosition
  2254  007D18                     
  2255                           ;main.c: 171:         for (j = 0; j < 16; j++) {
  2256  007D18  0E00               	movlw	0
  2257  007D1A  6E76               	movwf	_j^0,c
  2258  007D1C                     l3451:
  2259                           
  2260                           ;main.c: 172:             lcdChar(screenBuffer[i][j]);
  2261  007D1C  507D               	movf	_i^0,w,c
  2262  007D1E  0D10               	mullw	16
  2263  007D20  0E80               	movlw	low _screenBuffer
  2264  007D22  6E0F               	movwf	??_updateScreen^0,c
  2265  007D24  0E00               	movlw	high _screenBuffer
  2266  007D26  6E10               	movwf	(??_updateScreen+1)^0,c
  2267  007D28  50F3               	movf	243,w,c
  2268  007D2A  260F               	addwf	??_updateScreen^0,f,c
  2269  007D2C  50F4               	movf	244,w,c
  2270  007D2E  2210               	addwfc	(??_updateScreen+1)^0,f,c
  2271  007D30  5076               	movf	_j^0,w,c
  2272  007D32  240F               	addwf	??_updateScreen^0,w,c
  2273  007D34  6ED9               	movwf	fsr2l,c
  2274  007D36  0E00               	movlw	0
  2275  007D38  2010               	addwfc	(??_updateScreen+1)^0,w,c
  2276  007D3A  6EDA               	movwf	fsr2h,c
  2277  007D3C  50DF               	movf	indf2,w,c
  2278  007D3E  ECAE  F02B         	call	_lcdChar
  2279  007D42                     
  2280                           ;main.c: 173:         }
  2281  007D42  2A76               	incf	_j^0,f,c
  2282  007D44  0E0F               	movlw	15
  2283  007D46  6476               	cpfsgt	_j^0,c
  2284  007D48  EFA8  F03E         	goto	u3061
  2285  007D4C  EFAA  F03E         	goto	u3060
  2286  007D50                     u3061:
  2287  007D50  EF8E  F03E         	goto	l3451
  2288  007D54                     u3060:
  2289  007D54                     
  2290                           ;main.c: 174:     }
  2291  007D54  2A7D               	incf	_i^0,f,c
  2292  007D56  EF7D  F03E         	goto	l3439
  2293  007D5A                     l3461:
  2294                           
  2295                           ;main.c: 176:     ssdDigit((score / 1) % 10, 3);
  2296  007D5A  0E03               	movlw	3
  2297  007D5C  6E0D               	movwf	ssdDigit@pos^0,c
  2298  007D5E  C072  F008         	movff	_score,___lwmod@dividend
  2299  007D62  C073  F009         	movff	_score+1,___lwmod@dividend+1
  2300  007D66  0E00               	movlw	0
  2301  007D68  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2302  007D6A  0E0A               	movlw	10
  2303  007D6C  6E0A               	movwf	___lwmod@divisor^0,c
  2304  007D6E  EC2F  F02C         	call	___lwmod	;wreg free
  2305  007D72  5008               	movf	?___lwmod^0,w,c
  2306  007D74  EC03  F02C         	call	_ssdDigit
  2307                           
  2308                           ;main.c: 177:     ssdDigit((score / 10) % 10, 2);
  2309  007D78  0E02               	movlw	2
  2310  007D7A  6E0D               	movwf	ssdDigit@pos^0,c
  2311  007D7C  0E00               	movlw	0
  2312  007D7E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2313  007D80  0E0A               	movlw	10
  2314  007D82  6E03               	movwf	___lwdiv@divisor^0,c
  2315  007D84  C072  F001         	movff	_score,___lwdiv@dividend
  2316  007D88  C073  F002         	movff	_score+1,___lwdiv@dividend+1
  2317  007D8C  EC79  F02D         	call	___lwdiv	;wreg free
  2318  007D90  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2319  007D94  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2320  007D98  0E00               	movlw	0
  2321  007D9A  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2322  007D9C  0E0A               	movlw	10
  2323  007D9E  6E0A               	movwf	___lwmod@divisor^0,c
  2324  007DA0  EC2F  F02C         	call	___lwmod	;wreg free
  2325  007DA4  5008               	movf	?___lwmod^0,w,c
  2326  007DA6  EC03  F02C         	call	_ssdDigit
  2327                           
  2328                           ;main.c: 178:     ssdDigit((score / 100) % 10, 1);
  2329  007DAA  0E01               	movlw	1
  2330  007DAC  6E0D               	movwf	ssdDigit@pos^0,c
  2331  007DAE  0E00               	movlw	0
  2332  007DB0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2333  007DB2  0E64               	movlw	100
  2334  007DB4  6E03               	movwf	___lwdiv@divisor^0,c
  2335  007DB6  C072  F001         	movff	_score,___lwdiv@dividend
  2336  007DBA  C073  F002         	movff	_score+1,___lwdiv@dividend+1
  2337  007DBE  EC79  F02D         	call	___lwdiv	;wreg free
  2338  007DC2  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2339  007DC6  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2340  007DCA  0E00               	movlw	0
  2341  007DCC  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2342  007DCE  0E0A               	movlw	10
  2343  007DD0  6E0A               	movwf	___lwmod@divisor^0,c
  2344  007DD2  EC2F  F02C         	call	___lwmod	;wreg free
  2345  007DD6  5008               	movf	?___lwmod^0,w,c
  2346  007DD8  EC03  F02C         	call	_ssdDigit
  2347                           
  2348                           ;main.c: 179:     ssdDigit((score / 1000) % 10, 0);
  2349  007DDC  0E00               	movlw	0
  2350  007DDE  6E0D               	movwf	ssdDigit@pos^0,c
  2351  007DE0  0E03               	movlw	3
  2352  007DE2  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2353  007DE4  0EE8               	movlw	232
  2354  007DE6  6E03               	movwf	___lwdiv@divisor^0,c
  2355  007DE8  C072  F001         	movff	_score,___lwdiv@dividend
  2356  007DEC  C073  F002         	movff	_score+1,___lwdiv@dividend+1
  2357  007DF0  EC79  F02D         	call	___lwdiv	;wreg free
  2358  007DF4  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  2359  007DF8  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  2360  007DFC  0E00               	movlw	0
  2361  007DFE  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  2362  007E00  0E0A               	movlw	10
  2363  007E02  6E0A               	movwf	___lwmod@divisor^0,c
  2364  007E04  EC2F  F02C         	call	___lwmod	;wreg free
  2365  007E08  5008               	movf	?___lwmod^0,w,c
  2366  007E0A  EC03  F02C         	call	_ssdDigit
  2367  007E0E                     
  2368                           ;main.c: 181:     ssdUpdate();
  2369  007E0E  EC58  F030         	call	_ssdUpdate	;wreg free
  2370  007E12  0012               	return		;funcret
  2371  007E14                     __end_of_updateScreen:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _ssdUpdate *****************
  2375 ;; Defined at:
  2376 ;;		line 54 in file "ssd.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;		None
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;		None
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  1    wreg      void 
  2383 ;; Registers used:
  2384 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2390 ;;      Params:         0       0       0       0       0       0       0
  2391 ;;      Locals:         0       0       0       0       0       0       0
  2392 ;;      Temps:          2       0       0       0       0       0       0
  2393 ;;      Totals:         2       0       0       0       0       0       0
  2394 ;;Total ram usage:        2 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    1
  2397 ;; This function calls:
  2398 ;;		_digitalWrite
  2399 ;; This function is called by:
  2400 ;;		_updateScreen
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text2
  2405  0060B0                     __ptext2:
  2406                           	callstack 0
  2407  0060B0                     _ssdUpdate:
  2408                           	callstack 28
  2409  0060B0                     
  2410                           ;ssd.c: 58:     TRISD= 0x00;
  2411  0060B0  0E00               	movlw	0
  2412  0060B2  6E95               	movwf	149,c	;volatile
  2413  0060B4                     
  2414                           ;ssd.c: 60:     digitalWrite(PIN_A2,0);
  2415  0060B4  0E00               	movlw	0
  2416  0060B6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2417  0060B8  0E02               	movlw	2
  2418  0060BA  6E01               	movwf	digitalWrite@pin^0,c
  2419  0060BC  0E00               	movlw	0
  2420  0060BE  6E04               	movwf	(digitalWrite@value+1)^0,c
  2421  0060C0  0E00               	movlw	0
  2422  0060C2  6E03               	movwf	digitalWrite@value^0,c
  2423  0060C4  ECCA  F032         	call	_digitalWrite	;wreg free
  2424  0060C8                     
  2425                           ;ssd.c: 61:     digitalWrite(PIN_A3,0);
  2426  0060C8  0E00               	movlw	0
  2427  0060CA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2428  0060CC  0E03               	movlw	3
  2429  0060CE  6E01               	movwf	digitalWrite@pin^0,c
  2430  0060D0  0E00               	movlw	0
  2431  0060D2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2432  0060D4  0E00               	movlw	0
  2433  0060D6  6E03               	movwf	digitalWrite@value^0,c
  2434  0060D8  ECCA  F032         	call	_digitalWrite	;wreg free
  2435  0060DC                     
  2436                           ;ssd.c: 62:     digitalWrite(PIN_A4,0);
  2437  0060DC  0E00               	movlw	0
  2438  0060DE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2439  0060E0  0E04               	movlw	4
  2440  0060E2  6E01               	movwf	digitalWrite@pin^0,c
  2441  0060E4  0E00               	movlw	0
  2442  0060E6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2443  0060E8  0E00               	movlw	0
  2444  0060EA  6E03               	movwf	digitalWrite@value^0,c
  2445  0060EC  ECCA  F032         	call	_digitalWrite	;wreg free
  2446  0060F0                     
  2447                           ;ssd.c: 63:     digitalWrite(PIN_A5,0);
  2448  0060F0  0E00               	movlw	0
  2449  0060F2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2450  0060F4  0E05               	movlw	5
  2451  0060F6  6E01               	movwf	digitalWrite@pin^0,c
  2452  0060F8  0E00               	movlw	0
  2453  0060FA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2454  0060FC  0E00               	movlw	0
  2455  0060FE  6E03               	movwf	digitalWrite@value^0,c
  2456  006100  ECCA  F032         	call	_digitalWrite	;wreg free
  2457                           
  2458                           ;ssd.c: 66:     PORTD = 0x00;
  2459  006104  0E00               	movlw	0
  2460  006106  6E83               	movwf	131,c	;volatile
  2461                           
  2462                           ;ssd.c: 69:     switch (display)
  2463  006108  EFE2  F030         	goto	l2813
  2464  00610C                     l2785:
  2465                           
  2466                           ;ssd.c: 72:             PORTD = valor[v0];
  2467  00610C  0E15               	movlw	low _valor@ssd$F178
  2468  00610E  247A               	addwf	_v0^0,w,c
  2469  006110  6EF6               	movwf	tblptrl,c
  2470  006112  6AF7               	clrf	tblptrh,c
  2471  006114  0E7E               	movlw	high _valor@ssd$F178
  2472  006116  22F7               	addwfc	tblptrh,f,c
  2473  006118                     	if	0	;There are less than 3 active tblptr bytes
  2474  006118                     	endif
  2475  006118  0008               	tblrd		*
  2476  00611A  CFF5 FF83          	movff	tablat,3971	;volatile
  2477  00611E                     
  2478                           ;ssd.c: 73:             digitalWrite(PIN_A2,1);
  2479  00611E  0E00               	movlw	0
  2480  006120  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2481  006122  0E02               	movlw	2
  2482  006124  6E01               	movwf	digitalWrite@pin^0,c
  2483  006126  0E00               	movlw	0
  2484  006128  6E04               	movwf	(digitalWrite@value+1)^0,c
  2485  00612A  0E01               	movlw	1
  2486  00612C  6E03               	movwf	digitalWrite@value^0,c
  2487  00612E  ECCA  F032         	call	_digitalWrite	;wreg free
  2488  006132                     
  2489                           ;ssd.c: 74:             display = 1;
  2490  006132  0E01               	movlw	1
  2491  006134  6E7B               	movwf	_display^0,c
  2492                           
  2493                           ;ssd.c: 75:             break;
  2494  006136  EFFF  F030         	goto	l209
  2495  00613A                     l2791:
  2496                           
  2497                           ;ssd.c: 78:             PORTD = valor[v1];
  2498  00613A  0E15               	movlw	low _valor@ssd$F178
  2499  00613C  2479               	addwf	_v1^0,w,c
  2500  00613E  6EF6               	movwf	tblptrl,c
  2501  006140  6AF7               	clrf	tblptrh,c
  2502  006142  0E7E               	movlw	high _valor@ssd$F178
  2503  006144  22F7               	addwfc	tblptrh,f,c
  2504  006146                     	if	0	;There are less than 3 active tblptr bytes
  2505  006146                     	endif
  2506  006146  0008               	tblrd		*
  2507  006148  CFF5 FF83          	movff	tablat,3971	;volatile
  2508  00614C                     
  2509                           ;ssd.c: 79:             digitalWrite(PIN_A3,1);
  2510  00614C  0E00               	movlw	0
  2511  00614E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2512  006150  0E03               	movlw	3
  2513  006152  6E01               	movwf	digitalWrite@pin^0,c
  2514  006154  0E00               	movlw	0
  2515  006156  6E04               	movwf	(digitalWrite@value+1)^0,c
  2516  006158  0E01               	movlw	1
  2517  00615A  6E03               	movwf	digitalWrite@value^0,c
  2518  00615C  ECCA  F032         	call	_digitalWrite	;wreg free
  2519  006160                     
  2520                           ;ssd.c: 80:             display = 2;
  2521  006160  0E02               	movlw	2
  2522  006162  6E7B               	movwf	_display^0,c
  2523                           
  2524                           ;ssd.c: 81:             break;
  2525  006164  EFFF  F030         	goto	l209
  2526  006168                     l2797:
  2527                           
  2528                           ;ssd.c: 84:             PORTD = valor[v2];
  2529  006168  0E15               	movlw	low _valor@ssd$F178
  2530  00616A  2478               	addwf	_v2^0,w,c
  2531  00616C  6EF6               	movwf	tblptrl,c
  2532  00616E  6AF7               	clrf	tblptrh,c
  2533  006170  0E7E               	movlw	high _valor@ssd$F178
  2534  006172  22F7               	addwfc	tblptrh,f,c
  2535  006174                     	if	0	;There are less than 3 active tblptr bytes
  2536  006174                     	endif
  2537  006174  0008               	tblrd		*
  2538  006176  CFF5 FF83          	movff	tablat,3971	;volatile
  2539  00617A                     
  2540                           ;ssd.c: 85:             digitalWrite(PIN_A4,1);
  2541  00617A  0E00               	movlw	0
  2542  00617C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2543  00617E  0E04               	movlw	4
  2544  006180  6E01               	movwf	digitalWrite@pin^0,c
  2545  006182  0E00               	movlw	0
  2546  006184  6E04               	movwf	(digitalWrite@value+1)^0,c
  2547  006186  0E01               	movlw	1
  2548  006188  6E03               	movwf	digitalWrite@value^0,c
  2549  00618A  ECCA  F032         	call	_digitalWrite	;wreg free
  2550  00618E                     
  2551                           ;ssd.c: 86:             display = 3;
  2552  00618E  0E03               	movlw	3
  2553  006190  6E7B               	movwf	_display^0,c
  2554                           
  2555                           ;ssd.c: 87:             break;
  2556  006192  EFFF  F030         	goto	l209
  2557  006196                     l2803:
  2558                           
  2559                           ;ssd.c: 90:             PORTD = valor[v3];
  2560  006196  0E15               	movlw	low _valor@ssd$F178
  2561  006198  2477               	addwf	_v3^0,w,c
  2562  00619A  6EF6               	movwf	tblptrl,c
  2563  00619C  6AF7               	clrf	tblptrh,c
  2564  00619E  0E7E               	movlw	high _valor@ssd$F178
  2565  0061A0  22F7               	addwfc	tblptrh,f,c
  2566  0061A2                     	if	0	;There are less than 3 active tblptr bytes
  2567  0061A2                     	endif
  2568  0061A2  0008               	tblrd		*
  2569  0061A4  CFF5 FF83          	movff	tablat,3971	;volatile
  2570  0061A8                     
  2571                           ;ssd.c: 91:             digitalWrite(PIN_A5,1);
  2572  0061A8  0E00               	movlw	0
  2573  0061AA  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2574  0061AC  0E05               	movlw	5
  2575  0061AE  6E01               	movwf	digitalWrite@pin^0,c
  2576  0061B0  0E00               	movlw	0
  2577  0061B2  6E04               	movwf	(digitalWrite@value+1)^0,c
  2578  0061B4  0E01               	movlw	1
  2579  0061B6  6E03               	movwf	digitalWrite@value^0,c
  2580  0061B8  ECCA  F032         	call	_digitalWrite	;wreg free
  2581  0061BC                     l2807:
  2582                           
  2583                           ;ssd.c: 92:             display = 0;
  2584  0061BC  0E00               	movlw	0
  2585  0061BE  6E7B               	movwf	_display^0,c
  2586                           
  2587                           ;ssd.c: 93:             break;
  2588  0061C0  EFFF  F030         	goto	l209
  2589  0061C4                     l2813:
  2590  0061C4  507B               	movf	_display^0,w,c
  2591  0061C6  6E07               	movwf	??_ssdUpdate^0,c
  2592  0061C8  6A08               	clrf	(??_ssdUpdate+1)^0,c
  2593                           
  2594                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2595                           ; Switch size 1, requested type "simple"
  2596                           ; Number of cases is 1, Range of values is 0 to 0
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte            4     3 (average)
  2600                           ;	Chosen strategy is simple_byte
  2601  0061CA  5008               	movf	(??_ssdUpdate+1)^0,w,c
  2602  0061CC  0A00               	xorlw	0	; case 0
  2603  0061CE  B4D8               	btfsc	status,2,c
  2604  0061D0  EFEC  F030         	goto	l3661
  2605  0061D4  EFDE  F030         	goto	l2807
  2606  0061D8                     l3661:
  2607                           
  2608                           ; Switch size 1, requested type "simple"
  2609                           ; Number of cases is 4, Range of values is 0 to 3
  2610                           ; switch strategies available:
  2611                           ; Name         Instructions Cycles
  2612                           ; simple_byte           13     7 (average)
  2613                           ;	Chosen strategy is simple_byte
  2614  0061D8  5007               	movf	??_ssdUpdate^0,w,c
  2615  0061DA  0A00               	xorlw	0	; case 0
  2616  0061DC  B4D8               	btfsc	status,2,c
  2617  0061DE  EF86  F030         	goto	l2785
  2618  0061E2  0A01               	xorlw	1	; case 1
  2619  0061E4  B4D8               	btfsc	status,2,c
  2620  0061E6  EF9D  F030         	goto	l2791
  2621  0061EA  0A03               	xorlw	3	; case 2
  2622  0061EC  B4D8               	btfsc	status,2,c
  2623  0061EE  EFB4  F030         	goto	l2797
  2624  0061F2  0A01               	xorlw	1	; case 3
  2625  0061F4  B4D8               	btfsc	status,2,c
  2626  0061F6  EFCB  F030         	goto	l2803
  2627  0061FA  EFDE  F030         	goto	l2807
  2628  0061FE                     l209:
  2629  0061FE  0012               	return		;funcret
  2630  006200                     __end_of_ssdUpdate:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function _ssdDigit *****************
  2634 ;; Defined at:
  2635 ;;		line 38 in file "ssd.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  val             1    wreg     unsigned char 
  2638 ;;  pos             1   12[COMRAM] unsigned char 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  val             1   13[COMRAM] unsigned char 
  2641 ;; Return value:  Size  Location     Type
  2642 ;;                  1    wreg      void 
  2643 ;; Registers used:
  2644 ;;		wreg, status,2, status,0
  2645 ;; Tracked objects:
  2646 ;;		On entry : 0/0
  2647 ;;		On exit  : 0/0
  2648 ;;		Unchanged: 0/0
  2649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2650 ;;      Params:         1       0       0       0       0       0       0
  2651 ;;      Locals:         1       0       0       0       0       0       0
  2652 ;;      Temps:          0       0       0       0       0       0       0
  2653 ;;      Totals:         2       0       0       0       0       0       0
  2654 ;;Total ram usage:        2 bytes
  2655 ;; Hardware stack levels used:    1
  2656 ;; This function calls:
  2657 ;;		Nothing
  2658 ;; This function is called by:
  2659 ;;		_updateScreen
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           	psect	text3
  2664  005806                     __ptext3:
  2665                           	callstack 0
  2666  005806                     _ssdDigit:
  2667                           	callstack 29
  2668                           
  2669                           ;incstack = 0
  2670                           ;ssdDigit@val stored from wreg
  2671  005806  6E0E               	movwf	ssdDigit@val^0,c
  2672  005808                     
  2673                           ;ssd.c: 39:     if (pos == 0) {
  2674  005808  500D               	movf	ssdDigit@pos^0,w,c
  2675  00580A  A4D8               	btfss	status,2,c
  2676  00580C  EF0A  F02C         	goto	u2451
  2677  005810  EF0C  F02C         	goto	u2450
  2678  005814                     u2451:
  2679  005814  EF0E  F02C         	goto	l2763
  2680  005818                     u2450:
  2681  005818                     
  2682                           ;ssd.c: 40:         v0 = val;
  2683  005818  C00E  F07A         	movff	ssdDigit@val,_v0
  2684  00581C                     l2763:
  2685                           
  2686                           ;ssd.c: 42:     if (pos == 1) {
  2687  00581C  040D               	decf	ssdDigit@pos^0,w,c
  2688  00581E  A4D8               	btfss	status,2,c
  2689  005820  EF14  F02C         	goto	u2461
  2690  005824  EF16  F02C         	goto	u2460
  2691  005828                     u2461:
  2692  005828  EF18  F02C         	goto	l2767
  2693  00582C                     u2460:
  2694  00582C                     
  2695                           ;ssd.c: 43:         v1 = val;
  2696  00582C  C00E  F079         	movff	ssdDigit@val,_v1
  2697  005830                     l2767:
  2698                           
  2699                           ;ssd.c: 45:     if (pos == 2) {
  2700  005830  0E02               	movlw	2
  2701  005832  180D               	xorwf	ssdDigit@pos^0,w,c
  2702  005834  A4D8               	btfss	status,2,c
  2703  005836  EF1F  F02C         	goto	u2471
  2704  00583A  EF21  F02C         	goto	u2470
  2705  00583E                     u2471:
  2706  00583E  EF23  F02C         	goto	l2771
  2707  005842                     u2470:
  2708  005842                     
  2709                           ;ssd.c: 46:         v2 = val;
  2710  005842  C00E  F078         	movff	ssdDigit@val,_v2
  2711  005846                     l2771:
  2712                           
  2713                           ;ssd.c: 48:     if (pos == 3) {
  2714  005846  0E03               	movlw	3
  2715  005848  180D               	xorwf	ssdDigit@pos^0,w,c
  2716  00584A  A4D8               	btfss	status,2,c
  2717  00584C  EF2A  F02C         	goto	u2481
  2718  005850  EF2C  F02C         	goto	u2480
  2719  005854                     u2481:
  2720  005854  EF2E  F02C         	goto	l199
  2721  005858                     u2480:
  2722  005858                     
  2723                           ;ssd.c: 49:         v3 = val;
  2724  005858  C00E  F077         	movff	ssdDigit@val,_v3
  2725  00585C                     l199:
  2726  00585C  0012               	return		;funcret
  2727  00585E                     __end_of_ssdDigit:
  2728                           	callstack 0
  2729                           
  2730 ;; *************** function ___lwmod *****************
  2731 ;; Defined at:
  2732 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  2733 ;; Parameters:    Size  Location     Type
  2734 ;;  dividend        2    7[COMRAM] unsigned int 
  2735 ;;  divisor         2    9[COMRAM] unsigned int 
  2736 ;; Auto vars:     Size  Location     Type
  2737 ;;  counter         1   11[COMRAM] unsigned char 
  2738 ;; Return value:  Size  Location     Type
  2739 ;;                  2    7[COMRAM] unsigned int 
  2740 ;; Registers used:
  2741 ;;		wreg, status,2, status,0
  2742 ;; Tracked objects:
  2743 ;;		On entry : 0/0
  2744 ;;		On exit  : 0/0
  2745 ;;		Unchanged: 0/0
  2746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2747 ;;      Params:         4       0       0       0       0       0       0
  2748 ;;      Locals:         1       0       0       0       0       0       0
  2749 ;;      Temps:          0       0       0       0       0       0       0
  2750 ;;      Totals:         5       0       0       0       0       0       0
  2751 ;;Total ram usage:        5 bytes
  2752 ;; Hardware stack levels used:    1
  2753 ;; This function calls:
  2754 ;;		Nothing
  2755 ;; This function is called by:
  2756 ;;		_updateScreen
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           	psect	text4
  2761  00585E                     __ptext4:
  2762                           	callstack 0
  2763  00585E                     ___lwmod:
  2764                           	callstack 29
  2765  00585E  500A               	movf	___lwmod@divisor^0,w,c
  2766  005860  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  2767  005862  B4D8               	btfsc	status,2,c
  2768  005864  EF36  F02C         	goto	u2551
  2769  005868  EF38  F02C         	goto	u2550
  2770  00586C                     u2551:
  2771  00586C  EF5C  F02C         	goto	l965
  2772  005870                     u2550:
  2773  005870  0E01               	movlw	1
  2774  005872  6E0C               	movwf	___lwmod@counter^0,c
  2775  005874  EF40  F02C         	goto	l2909
  2776  005878                     l2907:
  2777  005878  90D8               	bcf	status,0,c
  2778  00587A  360A               	rlcf	___lwmod@divisor^0,f,c
  2779  00587C  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  2780  00587E  2A0C               	incf	___lwmod@counter^0,f,c
  2781  005880                     l2909:
  2782  005880  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  2783  005882  EF45  F02C         	goto	u2561
  2784  005886  EF47  F02C         	goto	u2560
  2785  00588A                     u2561:
  2786  00588A  EF3C  F02C         	goto	l2907
  2787  00588E                     u2560:
  2788  00588E                     l2911:
  2789  00588E  500A               	movf	___lwmod@divisor^0,w,c
  2790  005890  5C08               	subwf	___lwmod@dividend^0,w,c
  2791  005892  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2792  005894  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  2793  005896  A0D8               	btfss	status,0,c
  2794  005898  EF50  F02C         	goto	u2571
  2795  00589C  EF52  F02C         	goto	u2570
  2796  0058A0                     u2571:
  2797  0058A0  EF56  F02C         	goto	l2915
  2798  0058A4                     u2570:
  2799  0058A4  500A               	movf	___lwmod@divisor^0,w,c
  2800  0058A6  5E08               	subwf	___lwmod@dividend^0,f,c
  2801  0058A8  500B               	movf	(___lwmod@divisor+1)^0,w,c
  2802  0058AA  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  2803  0058AC                     l2915:
  2804  0058AC  90D8               	bcf	status,0,c
  2805  0058AE  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  2806  0058B0  320A               	rrcf	___lwmod@divisor^0,f,c
  2807  0058B2  2E0C               	decfsz	___lwmod@counter^0,f,c
  2808  0058B4  EF47  F02C         	goto	l2911
  2809  0058B8                     l965:
  2810  0058B8  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2811  0058BC  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2812  0058C0  0012               	return		;funcret
  2813  0058C2                     __end_of___lwmod:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function ___lwdiv *****************
  2817 ;; Defined at:
  2818 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  dividend        2    0[COMRAM] unsigned int 
  2821 ;;  divisor         2    2[COMRAM] unsigned int 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  quotient        2    4[COMRAM] unsigned int 
  2824 ;;  counter         1    6[COMRAM] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2    0[COMRAM] unsigned int 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2834 ;;      Params:         4       0       0       0       0       0       0
  2835 ;;      Locals:         3       0       0       0       0       0       0
  2836 ;;      Temps:          0       0       0       0       0       0       0
  2837 ;;      Totals:         7       0       0       0       0       0       0
  2838 ;;Total ram usage:        7 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_updateScreen
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           
  2847                           	psect	text5
  2848  005AF2                     __ptext5:
  2849                           	callstack 0
  2850  005AF2                     ___lwdiv:
  2851                           	callstack 29
  2852  005AF2  0E00               	movlw	0
  2853  005AF4  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2854  005AF6  0E00               	movlw	0
  2855  005AF8  6E05               	movwf	___lwdiv@quotient^0,c
  2856  005AFA  5003               	movf	___lwdiv@divisor^0,w,c
  2857  005AFC  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2858  005AFE  B4D8               	btfsc	status,2,c
  2859  005B00  EF84  F02D         	goto	u2521
  2860  005B04  EF86  F02D         	goto	u2520
  2861  005B08                     u2521:
  2862  005B08  EFAE  F02D         	goto	l955
  2863  005B0C                     u2520:
  2864  005B0C  0E01               	movlw	1
  2865  005B0E  6E07               	movwf	___lwdiv@counter^0,c
  2866  005B10  EF8E  F02D         	goto	l2889
  2867  005B14                     l2887:
  2868  005B14  90D8               	bcf	status,0,c
  2869  005B16  3603               	rlcf	___lwdiv@divisor^0,f,c
  2870  005B18  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2871  005B1A  2A07               	incf	___lwdiv@counter^0,f,c
  2872  005B1C                     l2889:
  2873  005B1C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2874  005B1E  EF93  F02D         	goto	u2531
  2875  005B22  EF95  F02D         	goto	u2530
  2876  005B26                     u2531:
  2877  005B26  EF8A  F02D         	goto	l2887
  2878  005B2A                     u2530:
  2879  005B2A                     l2891:
  2880  005B2A  90D8               	bcf	status,0,c
  2881  005B2C  3605               	rlcf	___lwdiv@quotient^0,f,c
  2882  005B2E  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2883  005B30  5003               	movf	___lwdiv@divisor^0,w,c
  2884  005B32  5C01               	subwf	___lwdiv@dividend^0,w,c
  2885  005B34  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2886  005B36  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2887  005B38  A0D8               	btfss	status,0,c
  2888  005B3A  EFA1  F02D         	goto	u2541
  2889  005B3E  EFA3  F02D         	goto	u2540
  2890  005B42                     u2541:
  2891  005B42  EFA8  F02D         	goto	l2899
  2892  005B46                     u2540:
  2893  005B46  5003               	movf	___lwdiv@divisor^0,w,c
  2894  005B48  5E01               	subwf	___lwdiv@dividend^0,f,c
  2895  005B4A  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2896  005B4C  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2897  005B4E  8005               	bsf	___lwdiv@quotient^0,0,c
  2898  005B50                     l2899:
  2899  005B50  90D8               	bcf	status,0,c
  2900  005B52  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2901  005B54  3203               	rrcf	___lwdiv@divisor^0,f,c
  2902  005B56  2E07               	decfsz	___lwdiv@counter^0,f,c
  2903  005B58  EF95  F02D         	goto	l2891
  2904  005B5C                     l955:
  2905  005B5C  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2906  005B60  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2907  005B64  0012               	return		;funcret
  2908  005B66                     __end_of___lwdiv:
  2909                           	callstack 0
  2910                           
  2911 ;; *************** function _titleScreen *****************
  2912 ;; Defined at:
  2913 ;;		line 4 in file "./title.h"
  2914 ;; Parameters:    Size  Location     Type
  2915 ;;		None
  2916 ;; Auto vars:     Size  Location     Type
  2917 ;;  i               2   47[COMRAM] int 
  2918 ;;  i               2   45[COMRAM] int 
  2919 ;;  i               2   43[COMRAM] int 
  2920 ;;  i               2   41[COMRAM] int 
  2921 ;;  i               2   39[COMRAM] int 
  2922 ;;  i               2   37[COMRAM] int 
  2923 ;;  i               2   35[COMRAM] int 
  2924 ;;  i               2   33[COMRAM] int 
  2925 ;;  i               2   31[COMRAM] int 
  2926 ;;  i               2   29[COMRAM] int 
  2927 ;;  i               2   27[COMRAM] int 
  2928 ;;  i               2   25[COMRAM] int 
  2929 ;;  i               2   23[COMRAM] int 
  2930 ;;  i               2   21[COMRAM] int 
  2931 ;;  i               2   19[COMRAM] int 
  2932 ;;  i               2   17[COMRAM] int 
  2933 ;;  key             2   15[COMRAM] unsigned int 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      void 
  2936 ;; Registers used:
  2937 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2943 ;;      Params:         0       0       0       0       0       0       0
  2944 ;;      Locals:        34       0       0       0       0       0       0
  2945 ;;      Temps:          0       0       0       0       0       0       0
  2946 ;;      Totals:        34       0       0       0       0       0       0
  2947 ;;Total ram usage:       34 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    4
  2950 ;; This function calls:
  2951 ;;		_kpDebounce
  2952 ;;		_kpRead
  2953 ;;		_lcdPosition
  2954 ;;		_lcdStr
  2955 ;;		_lcdStrDelay
  2956 ;; This function is called by:
  2957 ;;		_main
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text6
  2962  006ECA                     __ptext6:
  2963                           	callstack 0
  2964  006ECA                     _titleScreen:
  2965                           	callstack 26
  2966  006ECA                     
  2967                           ;./title.h: 5:     lcdPosition(0, 0);
  2968  006ECA  0E00               	movlw	0
  2969  006ECC  6E09               	movwf	lcdPosition@col^0,c
  2970  006ECE  0E00               	movlw	0
  2971  006ED0  ECA9  F02E         	call	_lcdPosition
  2972  006ED4                     
  2973                           ;./title.h: 6:     lcdStr("|--------------|");
  2974  006ED4  0EF1               	movlw	low STR_1
  2975  006ED6  6E09               	movwf	lcdStr@str^0,c
  2976  006ED8  0E7E               	movlw	high STR_1
  2977  006EDA  6E0A               	movwf	(lcdStr@str+1)^0,c
  2978  006EDC  EC86  F02B         	call	_lcdStr	;wreg free
  2979  006EE0                     
  2980                           ;./title.h: 8:     lcdPosition(1, 0);
  2981  006EE0  0E00               	movlw	0
  2982  006EE2  6E09               	movwf	lcdPosition@col^0,c
  2983  006EE4  0E01               	movlw	1
  2984  006EE6  ECA9  F02E         	call	_lcdPosition
  2985                           
  2986                           ;./title.h: 9:     lcdStr("|              |");
  2987  006EEA  0E25               	movlw	low STR_2
  2988  006EEC  6E09               	movwf	lcdStr@str^0,c
  2989  006EEE  0E7E               	movlw	high STR_2
  2990  006EF0  6E0A               	movwf	(lcdStr@str+1)^0,c
  2991  006EF2  EC86  F02B         	call	_lcdStr	;wreg free
  2992  006EF6                     
  2993                           ;./title.h: 11:     lcdPosition(2, 0);
  2994  006EF6  0E00               	movlw	0
  2995  006EF8  6E09               	movwf	lcdPosition@col^0,c
  2996  006EFA  0E02               	movlw	2
  2997  006EFC  ECA9  F02E         	call	_lcdPosition
  2998  006F00                     
  2999                           ;./title.h: 12:     lcdStr("|              |");
  3000  006F00  0E25               	movlw	low STR_2
  3001  006F02  6E09               	movwf	lcdStr@str^0,c
  3002  006F04  0E7E               	movlw	high STR_2
  3003  006F06  6E0A               	movwf	(lcdStr@str+1)^0,c
  3004  006F08  EC86  F02B         	call	_lcdStr	;wreg free
  3005                           
  3006                           ;./title.h: 14:     lcdPosition(3, 0);
  3007  006F0C  0E00               	movlw	0
  3008  006F0E  6E09               	movwf	lcdPosition@col^0,c
  3009  006F10  0E03               	movlw	3
  3010  006F12  ECA9  F02E         	call	_lcdPosition
  3011  006F16                     
  3012                           ;./title.h: 15:     lcdStr("|--------------|");
  3013  006F16  0EF1               	movlw	low STR_1
  3014  006F18  6E09               	movwf	lcdStr@str^0,c
  3015  006F1A  0E7E               	movlw	high STR_1
  3016  006F1C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3017  006F1E  EC86  F02B         	call	_lcdStr	;wreg free
  3018  006F22                     
  3019                           ;./title.h: 17:     for(int i = 0; i < 18000; i++);
  3020  006F22  0E00               	movlw	0
  3021  006F24  6E13               	movwf	(titleScreen@i+1)^0,c
  3022  006F26  0E00               	movlw	0
  3023  006F28  6E12               	movwf	titleScreen@i^0,c
  3024  006F2A                     l2981:
  3025  006F2A  4A12               	infsnz	titleScreen@i^0,f,c
  3026  006F2C  2A13               	incf	(titleScreen@i+1)^0,f,c
  3027  006F2E  BE13               	btfsc	(titleScreen@i+1)^0,7,c
  3028  006F30  EFA3  F037         	goto	u2581
  3029  006F34  0E50               	movlw	80
  3030  006F36  5C12               	subwf	titleScreen@i^0,w,c
  3031  006F38  0E46               	movlw	70
  3032  006F3A  5813               	subwfb	(titleScreen@i+1)^0,w,c
  3033  006F3C  A0D8               	btfss	status,0,c
  3034  006F3E  EFA3  F037         	goto	u2581
  3035  006F42  EFA5  F037         	goto	u2580
  3036  006F46                     u2581:
  3037  006F46  EF95  F037         	goto	l2981
  3038  006F4A                     u2580:
  3039  006F4A                     
  3040                           ;./title.h: 19:     lcdPosition(0, 0);
  3041  006F4A  0E00               	movlw	0
  3042  006F4C  6E09               	movwf	lcdPosition@col^0,c
  3043  006F4E  0E00               	movlw	0
  3044  006F50  ECA9  F02E         	call	_lcdPosition
  3045  006F54                     
  3046                           ;./title.h: 21:     lcdStr("|--------------|");
  3047  006F54  0EF1               	movlw	low STR_1
  3048  006F56  6E09               	movwf	lcdStr@str^0,c
  3049  006F58  0E7E               	movlw	high STR_1
  3050  006F5A  6E0A               	movwf	(lcdStr@str+1)^0,c
  3051  006F5C  EC86  F02B         	call	_lcdStr	;wreg free
  3052  006F60                     
  3053                           ;./title.h: 23:     lcdPosition(1, 0);
  3054  006F60  0E00               	movlw	0
  3055  006F62  6E09               	movwf	lcdPosition@col^0,c
  3056  006F64  0E01               	movlw	1
  3057  006F66  ECA9  F02E         	call	_lcdPosition
  3058                           
  3059                           ;./title.h: 24:     lcdStr("|             C|");
  3060  006F6A  0E13               	movlw	low STR_6
  3061  006F6C  6E09               	movwf	lcdStr@str^0,c
  3062  006F6E  0E7F               	movlw	high STR_6
  3063  006F70  6E0A               	movwf	(lcdStr@str+1)^0,c
  3064  006F72  EC86  F02B         	call	_lcdStr	;wreg free
  3065  006F76                     
  3066                           ;./title.h: 26:     lcdPosition(2, 0);
  3067  006F76  0E00               	movlw	0
  3068  006F78  6E09               	movwf	lcdPosition@col^0,c
  3069  006F7A  0E02               	movlw	2
  3070  006F7C  ECA9  F02E         	call	_lcdPosition
  3071  006F80                     
  3072                           ;./title.h: 27:     lcdStr("|             I|");
  3073  006F80  0E57               	movlw	low STR_7
  3074  006F82  6E09               	movwf	lcdStr@str^0,c
  3075  006F84  0E7F               	movlw	high STR_7
  3076  006F86  6E0A               	movwf	(lcdStr@str+1)^0,c
  3077  006F88  EC86  F02B         	call	_lcdStr	;wreg free
  3078                           
  3079                           ;./title.h: 29:     lcdPosition(3, 0);
  3080  006F8C  0E00               	movlw	0
  3081  006F8E  6E09               	movwf	lcdPosition@col^0,c
  3082  006F90  0E03               	movlw	3
  3083  006F92  ECA9  F02E         	call	_lcdPosition
  3084  006F96                     
  3085                           ;./title.h: 30:     lcdStr("|--------------|");
  3086  006F96  0EF1               	movlw	low STR_1
  3087  006F98  6E09               	movwf	lcdStr@str^0,c
  3088  006F9A  0E7E               	movlw	high STR_1
  3089  006F9C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3090  006F9E  EC86  F02B         	call	_lcdStr	;wreg free
  3091  006FA2                     
  3092                           ;./title.h: 32:     for(int i = 0; i < 18000; i++);
  3093  006FA2  0E00               	movlw	0
  3094  006FA4  6E15               	movwf	(titleScreen@i_262+1)^0,c
  3095  006FA6  0E00               	movlw	0
  3096  006FA8  6E14               	movwf	titleScreen@i_262^0,c
  3097  006FAA                     l3003:
  3098  006FAA  4A14               	infsnz	titleScreen@i_262^0,f,c
  3099  006FAC  2A15               	incf	(titleScreen@i_262+1)^0,f,c
  3100  006FAE  BE15               	btfsc	(titleScreen@i_262+1)^0,7,c
  3101  006FB0  EFE3  F037         	goto	u2591
  3102  006FB4  0E50               	movlw	80
  3103  006FB6  5C14               	subwf	titleScreen@i_262^0,w,c
  3104  006FB8  0E46               	movlw	70
  3105  006FBA  5815               	subwfb	(titleScreen@i_262+1)^0,w,c
  3106  006FBC  A0D8               	btfss	status,0,c
  3107  006FBE  EFE3  F037         	goto	u2591
  3108  006FC2  EFE5  F037         	goto	u2590
  3109  006FC6                     u2591:
  3110  006FC6  EFD5  F037         	goto	l3003
  3111  006FCA                     u2590:
  3112  006FCA                     
  3113                           ;./title.h: 34:     lcdPosition(0, 0);
  3114  006FCA  0E00               	movlw	0
  3115  006FCC  6E09               	movwf	lcdPosition@col^0,c
  3116  006FCE  0E00               	movlw	0
  3117  006FD0  ECA9  F02E         	call	_lcdPosition
  3118  006FD4                     
  3119                           ;./title.h: 36:     lcdStr("|--------------|");
  3120  006FD4  0EF1               	movlw	low STR_1
  3121  006FD6  6E09               	movwf	lcdStr@str^0,c
  3122  006FD8  0E7E               	movlw	high STR_1
  3123  006FDA  6E0A               	movwf	(lcdStr@str+1)^0,c
  3124  006FDC  EC86  F02B         	call	_lcdStr	;wreg free
  3125  006FE0                     
  3126                           ;./title.h: 38:     lcdPosition(1, 0);
  3127  006FE0  0E00               	movlw	0
  3128  006FE2  6E09               	movwf	lcdPosition@col^0,c
  3129  006FE4  0E01               	movlw	1
  3130  006FE6  ECA9  F02E         	call	_lcdPosition
  3131                           
  3132                           ;./title.h: 39:     lcdStr("|            CL|");
  3133  006FEA  0E68               	movlw	low STR_10
  3134  006FEC  6E09               	movwf	lcdStr@str^0,c
  3135  006FEE  0E7F               	movlw	high STR_10
  3136  006FF0  6E0A               	movwf	(lcdStr@str+1)^0,c
  3137  006FF2  EC86  F02B         	call	_lcdStr	;wreg free
  3138  006FF6                     
  3139                           ;./title.h: 41:     lcdPosition(2, 0);
  3140  006FF6  0E00               	movlw	0
  3141  006FF8  6E09               	movwf	lcdPosition@col^0,c
  3142  006FFA  0E02               	movlw	2
  3143  006FFC  ECA9  F02E         	call	_lcdPosition
  3144  007000                     
  3145                           ;./title.h: 42:     lcdStr("|            IN|");
  3146  007000  0E79               	movlw	low STR_11
  3147  007002  6E09               	movwf	lcdStr@str^0,c
  3148  007004  0E7F               	movlw	high STR_11
  3149  007006  6E0A               	movwf	(lcdStr@str+1)^0,c
  3150  007008  EC86  F02B         	call	_lcdStr	;wreg free
  3151                           
  3152                           ;./title.h: 44:     lcdPosition(3, 0);
  3153  00700C  0E00               	movlw	0
  3154  00700E  6E09               	movwf	lcdPosition@col^0,c
  3155  007010  0E03               	movlw	3
  3156  007012  ECA9  F02E         	call	_lcdPosition
  3157  007016                     
  3158                           ;./title.h: 45:     lcdStr("|--------------|");
  3159  007016  0EF1               	movlw	low STR_1
  3160  007018  6E09               	movwf	lcdStr@str^0,c
  3161  00701A  0E7E               	movlw	high STR_1
  3162  00701C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3163  00701E  EC86  F02B         	call	_lcdStr	;wreg free
  3164  007022                     
  3165                           ;./title.h: 47:     for(int i = 0; i < 18000; i++);
  3166  007022  0E00               	movlw	0
  3167  007024  6E17               	movwf	(titleScreen@i_267+1)^0,c
  3168  007026  0E00               	movlw	0
  3169  007028  6E16               	movwf	titleScreen@i_267^0,c
  3170  00702A                     l3025:
  3171  00702A  4A16               	infsnz	titleScreen@i_267^0,f,c
  3172  00702C  2A17               	incf	(titleScreen@i_267+1)^0,f,c
  3173  00702E  BE17               	btfsc	(titleScreen@i_267+1)^0,7,c
  3174  007030  EF23  F038         	goto	u2601
  3175  007034  0E50               	movlw	80
  3176  007036  5C16               	subwf	titleScreen@i_267^0,w,c
  3177  007038  0E46               	movlw	70
  3178  00703A  5817               	subwfb	(titleScreen@i_267+1)^0,w,c
  3179  00703C  A0D8               	btfss	status,0,c
  3180  00703E  EF23  F038         	goto	u2601
  3181  007042  EF25  F038         	goto	u2600
  3182  007046                     u2601:
  3183  007046  EF15  F038         	goto	l3025
  3184  00704A                     u2600:
  3185  00704A                     
  3186                           ;./title.h: 49:     lcdPosition(0, 0);
  3187  00704A  0E00               	movlw	0
  3188  00704C  6E09               	movwf	lcdPosition@col^0,c
  3189  00704E  0E00               	movlw	0
  3190  007050  ECA9  F02E         	call	_lcdPosition
  3191  007054                     
  3192                           ;./title.h: 51:     lcdStr("|--------------|");
  3193  007054  0EF1               	movlw	low STR_1
  3194  007056  6E09               	movwf	lcdStr@str^0,c
  3195  007058  0E7E               	movlw	high STR_1
  3196  00705A  6E0A               	movwf	(lcdStr@str+1)^0,c
  3197  00705C  EC86  F02B         	call	_lcdStr	;wreg free
  3198  007060                     
  3199                           ;./title.h: 53:     lcdPosition(1, 0);
  3200  007060  0E00               	movlw	0
  3201  007062  6E09               	movwf	lcdPosition@col^0,c
  3202  007064  0E01               	movlw	1
  3203  007066  ECA9  F02E         	call	_lcdPosition
  3204                           
  3205                           ;./title.h: 54:     lcdStr("|           CLO|");
  3206  00706A  0E9B               	movlw	low STR_14
  3207  00706C  6E09               	movwf	lcdStr@str^0,c
  3208  00706E  0E7F               	movlw	high STR_14
  3209  007070  6E0A               	movwf	(lcdStr@str+1)^0,c
  3210  007072  EC86  F02B         	call	_lcdStr	;wreg free
  3211  007076                     
  3212                           ;./title.h: 56:     lcdPosition(2, 0);
  3213  007076  0E00               	movlw	0
  3214  007078  6E09               	movwf	lcdPosition@col^0,c
  3215  00707A  0E02               	movlw	2
  3216  00707C  ECA9  F02E         	call	_lcdPosition
  3217  007080                     
  3218                           ;./title.h: 57:     lcdStr("|           INV|");
  3219  007080  0ECE               	movlw	low STR_15
  3220  007082  6E09               	movwf	lcdStr@str^0,c
  3221  007084  0E7F               	movlw	high STR_15
  3222  007086  6E0A               	movwf	(lcdStr@str+1)^0,c
  3223  007088  EC86  F02B         	call	_lcdStr	;wreg free
  3224                           
  3225                           ;./title.h: 59:     lcdPosition(3, 0);
  3226  00708C  0E00               	movlw	0
  3227  00708E  6E09               	movwf	lcdPosition@col^0,c
  3228  007090  0E03               	movlw	3
  3229  007092  ECA9  F02E         	call	_lcdPosition
  3230  007096                     
  3231                           ;./title.h: 60:     lcdStr("|--------------|");
  3232  007096  0EF1               	movlw	low STR_1
  3233  007098  6E09               	movwf	lcdStr@str^0,c
  3234  00709A  0E7E               	movlw	high STR_1
  3235  00709C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3236  00709E  EC86  F02B         	call	_lcdStr	;wreg free
  3237  0070A2                     
  3238                           ;./title.h: 62:     for(int i = 0; i < 18000; i++);
  3239  0070A2  0E00               	movlw	0
  3240  0070A4  6E19               	movwf	(titleScreen@i_272+1)^0,c
  3241  0070A6  0E00               	movlw	0
  3242  0070A8  6E18               	movwf	titleScreen@i_272^0,c
  3243  0070AA                     l3047:
  3244  0070AA  4A18               	infsnz	titleScreen@i_272^0,f,c
  3245  0070AC  2A19               	incf	(titleScreen@i_272+1)^0,f,c
  3246  0070AE  BE19               	btfsc	(titleScreen@i_272+1)^0,7,c
  3247  0070B0  EF63  F038         	goto	u2611
  3248  0070B4  0E50               	movlw	80
  3249  0070B6  5C18               	subwf	titleScreen@i_272^0,w,c
  3250  0070B8  0E46               	movlw	70
  3251  0070BA  5819               	subwfb	(titleScreen@i_272+1)^0,w,c
  3252  0070BC  A0D8               	btfss	status,0,c
  3253  0070BE  EF63  F038         	goto	u2611
  3254  0070C2  EF65  F038         	goto	u2610
  3255  0070C6                     u2611:
  3256  0070C6  EF55  F038         	goto	l3047
  3257  0070CA                     u2610:
  3258  0070CA                     
  3259                           ;./title.h: 64:     lcdPosition(0, 0);
  3260  0070CA  0E00               	movlw	0
  3261  0070CC  6E09               	movwf	lcdPosition@col^0,c
  3262  0070CE  0E00               	movlw	0
  3263  0070D0  ECA9  F02E         	call	_lcdPosition
  3264  0070D4                     
  3265                           ;./title.h: 66:     lcdStr("|--------------|");
  3266  0070D4  0EF1               	movlw	low STR_1
  3267  0070D6  6E09               	movwf	lcdStr@str^0,c
  3268  0070D8  0E7E               	movlw	high STR_1
  3269  0070DA  6E0A               	movwf	(lcdStr@str+1)^0,c
  3270  0070DC  EC86  F02B         	call	_lcdStr	;wreg free
  3271  0070E0                     
  3272                           ;./title.h: 68:     lcdPosition(1, 0);
  3273  0070E0  0E00               	movlw	0
  3274  0070E2  6E09               	movwf	lcdPosition@col^0,c
  3275  0070E4  0E01               	movlw	1
  3276  0070E6  ECA9  F02E         	call	_lcdPosition
  3277                           
  3278                           ;./title.h: 69:     lcdStr("|          CLON|");
  3279  0070EA  0E8A               	movlw	low STR_18
  3280  0070EC  6E09               	movwf	lcdStr@str^0,c
  3281  0070EE  0E7F               	movlw	high STR_18
  3282  0070F0  6E0A               	movwf	(lcdStr@str+1)^0,c
  3283  0070F2  EC86  F02B         	call	_lcdStr	;wreg free
  3284  0070F6                     
  3285                           ;./title.h: 71:     lcdPosition(2, 0);
  3286  0070F6  0E00               	movlw	0
  3287  0070F8  6E09               	movwf	lcdPosition@col^0,c
  3288  0070FA  0E02               	movlw	2
  3289  0070FC  ECA9  F02E         	call	_lcdPosition
  3290  007100                     
  3291                           ;./title.h: 72:     lcdStr("|          INVA|");
  3292  007100  0E02               	movlw	low STR_19
  3293  007102  6E09               	movwf	lcdStr@str^0,c
  3294  007104  0E7F               	movlw	high STR_19
  3295  007106  6E0A               	movwf	(lcdStr@str+1)^0,c
  3296  007108  EC86  F02B         	call	_lcdStr	;wreg free
  3297                           
  3298                           ;./title.h: 74:     lcdPosition(3, 0);
  3299  00710C  0E00               	movlw	0
  3300  00710E  6E09               	movwf	lcdPosition@col^0,c
  3301  007110  0E03               	movlw	3
  3302  007112  ECA9  F02E         	call	_lcdPosition
  3303  007116                     
  3304                           ;./title.h: 75:     lcdStr("|--------------|");
  3305  007116  0EF1               	movlw	low STR_1
  3306  007118  6E09               	movwf	lcdStr@str^0,c
  3307  00711A  0E7E               	movlw	high STR_1
  3308  00711C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3309  00711E  EC86  F02B         	call	_lcdStr	;wreg free
  3310  007122                     
  3311                           ;./title.h: 77:     for(int i = 0; i < 18000; i++);
  3312  007122  0E00               	movlw	0
  3313  007124  6E1B               	movwf	(titleScreen@i_277+1)^0,c
  3314  007126  0E00               	movlw	0
  3315  007128  6E1A               	movwf	titleScreen@i_277^0,c
  3316  00712A                     l3069:
  3317  00712A  4A1A               	infsnz	titleScreen@i_277^0,f,c
  3318  00712C  2A1B               	incf	(titleScreen@i_277+1)^0,f,c
  3319  00712E  BE1B               	btfsc	(titleScreen@i_277+1)^0,7,c
  3320  007130  EFA3  F038         	goto	u2621
  3321  007134  0E50               	movlw	80
  3322  007136  5C1A               	subwf	titleScreen@i_277^0,w,c
  3323  007138  0E46               	movlw	70
  3324  00713A  581B               	subwfb	(titleScreen@i_277+1)^0,w,c
  3325  00713C  A0D8               	btfss	status,0,c
  3326  00713E  EFA3  F038         	goto	u2621
  3327  007142  EFA5  F038         	goto	u2620
  3328  007146                     u2621:
  3329  007146  EF95  F038         	goto	l3069
  3330  00714A                     u2620:
  3331  00714A                     
  3332                           ;./title.h: 79:     lcdPosition(0, 0);
  3333  00714A  0E00               	movlw	0
  3334  00714C  6E09               	movwf	lcdPosition@col^0,c
  3335  00714E  0E00               	movlw	0
  3336  007150  ECA9  F02E         	call	_lcdPosition
  3337  007154                     
  3338                           ;./title.h: 81:     lcdStr("|--------------|");
  3339  007154  0EF1               	movlw	low STR_1
  3340  007156  6E09               	movwf	lcdStr@str^0,c
  3341  007158  0E7E               	movlw	high STR_1
  3342  00715A  6E0A               	movwf	(lcdStr@str+1)^0,c
  3343  00715C  EC86  F02B         	call	_lcdStr	;wreg free
  3344  007160                     
  3345                           ;./title.h: 83:     lcdPosition(1, 0);
  3346  007160  0E00               	movlw	0
  3347  007162  6E09               	movwf	lcdPosition@col^0,c
  3348  007164  0E01               	movlw	1
  3349  007166  ECA9  F02E         	call	_lcdPosition
  3350                           
  3351                           ;./title.h: 84:     lcdStr("|         CLONE|");
  3352  00716A  0E46               	movlw	low STR_22
  3353  00716C  6E09               	movwf	lcdStr@str^0,c
  3354  00716E  0E7F               	movlw	high STR_22
  3355  007170  6E0A               	movwf	(lcdStr@str+1)^0,c
  3356  007172  EC86  F02B         	call	_lcdStr	;wreg free
  3357  007176                     
  3358                           ;./title.h: 86:     lcdPosition(2, 0);
  3359  007176  0E00               	movlw	0
  3360  007178  6E09               	movwf	lcdPosition@col^0,c
  3361  00717A  0E02               	movlw	2
  3362  00717C  ECA9  F02E         	call	_lcdPosition
  3363  007180                     
  3364                           ;./title.h: 87:     lcdStr("|         INVAD|");
  3365  007180  0E24               	movlw	low STR_23
  3366  007182  6E09               	movwf	lcdStr@str^0,c
  3367  007184  0E7F               	movlw	high STR_23
  3368  007186  6E0A               	movwf	(lcdStr@str+1)^0,c
  3369  007188  EC86  F02B         	call	_lcdStr	;wreg free
  3370                           
  3371                           ;./title.h: 89:     lcdPosition(3, 0);
  3372  00718C  0E00               	movlw	0
  3373  00718E  6E09               	movwf	lcdPosition@col^0,c
  3374  007190  0E03               	movlw	3
  3375  007192  ECA9  F02E         	call	_lcdPosition
  3376  007196                     
  3377                           ;./title.h: 90:     lcdStr("|--------------|");
  3378  007196  0EF1               	movlw	low STR_1
  3379  007198  6E09               	movwf	lcdStr@str^0,c
  3380  00719A  0E7E               	movlw	high STR_1
  3381  00719C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3382  00719E  EC86  F02B         	call	_lcdStr	;wreg free
  3383  0071A2                     
  3384                           ;./title.h: 92:     for(int i = 0; i < 18000; i++);
  3385  0071A2  0E00               	movlw	0
  3386  0071A4  6E1D               	movwf	(titleScreen@i_282+1)^0,c
  3387  0071A6  0E00               	movlw	0
  3388  0071A8  6E1C               	movwf	titleScreen@i_282^0,c
  3389  0071AA                     l3091:
  3390  0071AA  4A1C               	infsnz	titleScreen@i_282^0,f,c
  3391  0071AC  2A1D               	incf	(titleScreen@i_282+1)^0,f,c
  3392  0071AE  BE1D               	btfsc	(titleScreen@i_282+1)^0,7,c
  3393  0071B0  EFE3  F038         	goto	u2631
  3394  0071B4  0E50               	movlw	80
  3395  0071B6  5C1C               	subwf	titleScreen@i_282^0,w,c
  3396  0071B8  0E46               	movlw	70
  3397  0071BA  581D               	subwfb	(titleScreen@i_282+1)^0,w,c
  3398  0071BC  A0D8               	btfss	status,0,c
  3399  0071BE  EFE3  F038         	goto	u2631
  3400  0071C2  EFE5  F038         	goto	u2630
  3401  0071C6                     u2631:
  3402  0071C6  EFD5  F038         	goto	l3091
  3403  0071CA                     u2630:
  3404  0071CA                     
  3405                           ;./title.h: 94:     lcdPosition(0, 0);
  3406  0071CA  0E00               	movlw	0
  3407  0071CC  6E09               	movwf	lcdPosition@col^0,c
  3408  0071CE  0E00               	movlw	0
  3409  0071D0  ECA9  F02E         	call	_lcdPosition
  3410  0071D4                     
  3411                           ;./title.h: 96:     lcdStr("|--------------|");
  3412  0071D4  0EF1               	movlw	low STR_1
  3413  0071D6  6E09               	movwf	lcdStr@str^0,c
  3414  0071D8  0E7E               	movlw	high STR_1
  3415  0071DA  6E0A               	movwf	(lcdStr@str+1)^0,c
  3416  0071DC  EC86  F02B         	call	_lcdStr	;wreg free
  3417  0071E0                     
  3418                           ;./title.h: 98:     lcdPosition(1, 0);
  3419  0071E0  0E00               	movlw	0
  3420  0071E2  6E09               	movwf	lcdPosition@col^0,c
  3421  0071E4  0E01               	movlw	1
  3422  0071E6  ECA9  F02E         	call	_lcdPosition
  3423                           
  3424                           ;./title.h: 99:     lcdStr("|        CLONE |");
  3425  0071EA  0ECF               	movlw	low STR_26
  3426  0071EC  6E09               	movwf	lcdStr@str^0,c
  3427  0071EE  0E7E               	movlw	high STR_26
  3428  0071F0  6E0A               	movwf	(lcdStr@str+1)^0,c
  3429  0071F2  EC86  F02B         	call	_lcdStr	;wreg free
  3430  0071F6                     
  3431                           ;./title.h: 101:     lcdPosition(2, 0);
  3432  0071F6  0E00               	movlw	0
  3433  0071F8  6E09               	movwf	lcdPosition@col^0,c
  3434  0071FA  0E02               	movlw	2
  3435  0071FC  ECA9  F02E         	call	_lcdPosition
  3436  007200                     
  3437                           ;./title.h: 102:     lcdStr("|        INVADE|");
  3438  007200  0E35               	movlw	low STR_27
  3439  007202  6E09               	movwf	lcdStr@str^0,c
  3440  007204  0E7F               	movlw	high STR_27
  3441  007206  6E0A               	movwf	(lcdStr@str+1)^0,c
  3442  007208  EC86  F02B         	call	_lcdStr	;wreg free
  3443                           
  3444                           ;./title.h: 104:     lcdPosition(3, 0);
  3445  00720C  0E00               	movlw	0
  3446  00720E  6E09               	movwf	lcdPosition@col^0,c
  3447  007210  0E03               	movlw	3
  3448  007212  ECA9  F02E         	call	_lcdPosition
  3449  007216                     
  3450                           ;./title.h: 105:     lcdStr("|--------------|");
  3451  007216  0EF1               	movlw	low STR_1
  3452  007218  6E09               	movwf	lcdStr@str^0,c
  3453  00721A  0E7E               	movlw	high STR_1
  3454  00721C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3455  00721E  EC86  F02B         	call	_lcdStr	;wreg free
  3456  007222                     
  3457                           ;./title.h: 107:     for(int i = 0; i < 18000; i++);
  3458  007222  0E00               	movlw	0
  3459  007224  6E1F               	movwf	(titleScreen@i_287+1)^0,c
  3460  007226  0E00               	movlw	0
  3461  007228  6E1E               	movwf	titleScreen@i_287^0,c
  3462  00722A                     l3113:
  3463  00722A  4A1E               	infsnz	titleScreen@i_287^0,f,c
  3464  00722C  2A1F               	incf	(titleScreen@i_287+1)^0,f,c
  3465  00722E  BE1F               	btfsc	(titleScreen@i_287+1)^0,7,c
  3466  007230  EF23  F039         	goto	u2641
  3467  007234  0E50               	movlw	80
  3468  007236  5C1E               	subwf	titleScreen@i_287^0,w,c
  3469  007238  0E46               	movlw	70
  3470  00723A  581F               	subwfb	(titleScreen@i_287+1)^0,w,c
  3471  00723C  A0D8               	btfss	status,0,c
  3472  00723E  EF23  F039         	goto	u2641
  3473  007242  EF25  F039         	goto	u2640
  3474  007246                     u2641:
  3475  007246  EF15  F039         	goto	l3113
  3476  00724A                     u2640:
  3477  00724A                     
  3478                           ;./title.h: 109:     lcdPosition(0, 0);
  3479  00724A  0E00               	movlw	0
  3480  00724C  6E09               	movwf	lcdPosition@col^0,c
  3481  00724E  0E00               	movlw	0
  3482  007250  ECA9  F02E         	call	_lcdPosition
  3483  007254                     
  3484                           ;./title.h: 111:     lcdStr("|--------------|");
  3485  007254  0EF1               	movlw	low STR_1
  3486  007256  6E09               	movwf	lcdStr@str^0,c
  3487  007258  0E7E               	movlw	high STR_1
  3488  00725A  6E0A               	movwf	(lcdStr@str+1)^0,c
  3489  00725C  EC86  F02B         	call	_lcdStr	;wreg free
  3490  007260                     
  3491                           ;./title.h: 113:     lcdPosition(1, 0);
  3492  007260  0E00               	movlw	0
  3493  007262  6E09               	movwf	lcdPosition@col^0,c
  3494  007264  0E01               	movlw	1
  3495  007266  ECA9  F02E         	call	_lcdPosition
  3496                           
  3497                           ;./title.h: 114:     lcdStr("|       CLONE  |");
  3498  00726A  0E8B               	movlw	low STR_30
  3499  00726C  6E09               	movwf	lcdStr@str^0,c
  3500  00726E  0E7E               	movlw	high STR_30
  3501  007270  6E0A               	movwf	(lcdStr@str+1)^0,c
  3502  007272  EC86  F02B         	call	_lcdStr	;wreg free
  3503  007276                     
  3504                           ;./title.h: 116:     lcdPosition(2, 0);
  3505  007276  0E00               	movlw	0
  3506  007278  6E09               	movwf	lcdPosition@col^0,c
  3507  00727A  0E02               	movlw	2
  3508  00727C  ECA9  F02E         	call	_lcdPosition
  3509  007280                     
  3510                           ;./title.h: 117:     lcdStr("|       INVADER|");
  3511  007280  0EAC               	movlw	low STR_31
  3512  007282  6E09               	movwf	lcdStr@str^0,c
  3513  007284  0E7F               	movlw	high STR_31
  3514  007286  6E0A               	movwf	(lcdStr@str+1)^0,c
  3515  007288  EC86  F02B         	call	_lcdStr	;wreg free
  3516                           
  3517                           ;./title.h: 119:     lcdPosition(3, 0);
  3518  00728C  0E00               	movlw	0
  3519  00728E  6E09               	movwf	lcdPosition@col^0,c
  3520  007290  0E03               	movlw	3
  3521  007292  ECA9  F02E         	call	_lcdPosition
  3522  007296                     
  3523                           ;./title.h: 120:     lcdStr("|--------------|");
  3524  007296  0EF1               	movlw	low STR_1
  3525  007298  6E09               	movwf	lcdStr@str^0,c
  3526  00729A  0E7E               	movlw	high STR_1
  3527  00729C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3528  00729E  EC86  F02B         	call	_lcdStr	;wreg free
  3529  0072A2                     
  3530                           ;./title.h: 122:     for(int i = 0; i < 18000; i++);
  3531  0072A2  0E00               	movlw	0
  3532  0072A4  6E21               	movwf	(titleScreen@i_292+1)^0,c
  3533  0072A6  0E00               	movlw	0
  3534  0072A8  6E20               	movwf	titleScreen@i_292^0,c
  3535  0072AA                     l3135:
  3536  0072AA  4A20               	infsnz	titleScreen@i_292^0,f,c
  3537  0072AC  2A21               	incf	(titleScreen@i_292+1)^0,f,c
  3538  0072AE  BE21               	btfsc	(titleScreen@i_292+1)^0,7,c
  3539  0072B0  EF63  F039         	goto	u2651
  3540  0072B4  0E50               	movlw	80
  3541  0072B6  5C20               	subwf	titleScreen@i_292^0,w,c
  3542  0072B8  0E46               	movlw	70
  3543  0072BA  5821               	subwfb	(titleScreen@i_292+1)^0,w,c
  3544  0072BC  A0D8               	btfss	status,0,c
  3545  0072BE  EF63  F039         	goto	u2651
  3546  0072C2  EF65  F039         	goto	u2650
  3547  0072C6                     u2651:
  3548  0072C6  EF55  F039         	goto	l3135
  3549  0072CA                     u2650:
  3550  0072CA                     
  3551                           ;./title.h: 124:     lcdPosition(0, 0);
  3552  0072CA  0E00               	movlw	0
  3553  0072CC  6E09               	movwf	lcdPosition@col^0,c
  3554  0072CE  0E00               	movlw	0
  3555  0072D0  ECA9  F02E         	call	_lcdPosition
  3556  0072D4                     
  3557                           ;./title.h: 126:     lcdStr("|--------------|");
  3558  0072D4  0EF1               	movlw	low STR_1
  3559  0072D6  6E09               	movwf	lcdStr@str^0,c
  3560  0072D8  0E7E               	movlw	high STR_1
  3561  0072DA  6E0A               	movwf	(lcdStr@str+1)^0,c
  3562  0072DC  EC86  F02B         	call	_lcdStr	;wreg free
  3563  0072E0                     
  3564                           ;./title.h: 128:     lcdPosition(1, 0);
  3565  0072E0  0E00               	movlw	0
  3566  0072E2  6E09               	movwf	lcdPosition@col^0,c
  3567  0072E4  0E01               	movlw	1
  3568  0072E6  ECA9  F02E         	call	_lcdPosition
  3569                           
  3570                           ;./title.h: 129:     lcdStr("|      CLONE   |");
  3571  0072EA  0E69               	movlw	low STR_34
  3572  0072EC  6E09               	movwf	lcdStr@str^0,c
  3573  0072EE  0E7E               	movlw	high STR_34
  3574  0072F0  6E0A               	movwf	(lcdStr@str+1)^0,c
  3575  0072F2  EC86  F02B         	call	_lcdStr	;wreg free
  3576  0072F6                     
  3577                           ;./title.h: 131:     lcdPosition(2, 0);
  3578  0072F6  0E00               	movlw	0
  3579  0072F8  6E09               	movwf	lcdPosition@col^0,c
  3580  0072FA  0E02               	movlw	2
  3581  0072FC  ECA9  F02E         	call	_lcdPosition
  3582  007300                     
  3583                           ;./title.h: 132:     lcdStr("|      INVADERS|");
  3584  007300  0EBD               	movlw	low STR_35
  3585  007302  6E09               	movwf	lcdStr@str^0,c
  3586  007304  0E7F               	movlw	high STR_35
  3587  007306  6E0A               	movwf	(lcdStr@str+1)^0,c
  3588  007308  EC86  F02B         	call	_lcdStr	;wreg free
  3589                           
  3590                           ;./title.h: 134:     lcdPosition(3, 0);
  3591  00730C  0E00               	movlw	0
  3592  00730E  6E09               	movwf	lcdPosition@col^0,c
  3593  007310  0E03               	movlw	3
  3594  007312  ECA9  F02E         	call	_lcdPosition
  3595  007316                     
  3596                           ;./title.h: 135:     lcdStr("|--------------|");
  3597  007316  0EF1               	movlw	low STR_1
  3598  007318  6E09               	movwf	lcdStr@str^0,c
  3599  00731A  0E7E               	movlw	high STR_1
  3600  00731C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3601  00731E  EC86  F02B         	call	_lcdStr	;wreg free
  3602  007322                     
  3603                           ;./title.h: 137:     for(int i = 0; i < 18000; i++);
  3604  007322  0E00               	movlw	0
  3605  007324  6E23               	movwf	(titleScreen@i_297+1)^0,c
  3606  007326  0E00               	movlw	0
  3607  007328  6E22               	movwf	titleScreen@i_297^0,c
  3608  00732A                     l3153:
  3609  00732A  BE23               	btfsc	(titleScreen@i_297+1)^0,7,c
  3610  00732C  EFA1  F039         	goto	u2661
  3611  007330  0E50               	movlw	80
  3612  007332  5C22               	subwf	titleScreen@i_297^0,w,c
  3613  007334  0E46               	movlw	70
  3614  007336  5823               	subwfb	(titleScreen@i_297+1)^0,w,c
  3615  007338  A0D8               	btfss	status,0,c
  3616  00733A  EFA1  F039         	goto	u2661
  3617  00733E  EFA3  F039         	goto	u2660
  3618  007342                     u2661:
  3619  007342  EFA5  F039         	goto	l3157
  3620  007346                     u2660:
  3621  007346  EFA9  F039         	goto	l3161
  3622  00734A                     l3157:
  3623  00734A  4A22               	infsnz	titleScreen@i_297^0,f,c
  3624  00734C  2A23               	incf	(titleScreen@i_297+1)^0,f,c
  3625  00734E  EF95  F039         	goto	l3153
  3626  007352                     l3161:
  3627                           
  3628                           ;./title.h: 139:     lcdPosition(0, 0);
  3629  007352  0E00               	movlw	0
  3630  007354  6E09               	movwf	lcdPosition@col^0,c
  3631  007356  0E00               	movlw	0
  3632  007358  ECA9  F02E         	call	_lcdPosition
  3633  00735C                     
  3634                           ;./title.h: 141:     lcdStr("|--------------|");
  3635  00735C  0EF1               	movlw	low STR_1
  3636  00735E  6E09               	movwf	lcdStr@str^0,c
  3637  007360  0E7E               	movlw	high STR_1
  3638  007362  6E0A               	movwf	(lcdStr@str+1)^0,c
  3639  007364  EC86  F02B         	call	_lcdStr	;wreg free
  3640  007368                     
  3641                           ;./title.h: 143:     lcdPosition(1, 0);
  3642  007368  0E00               	movlw	0
  3643  00736A  6E09               	movwf	lcdPosition@col^0,c
  3644  00736C  0E01               	movlw	1
  3645  00736E  ECA9  F02E         	call	_lcdPosition
  3646                           
  3647                           ;./title.h: 144:     lcdStr("|     CLONE    |");
  3648  007372  0E58               	movlw	low STR_38
  3649  007374  6E09               	movwf	lcdStr@str^0,c
  3650  007376  0E7E               	movlw	high STR_38
  3651  007378  6E0A               	movwf	(lcdStr@str+1)^0,c
  3652  00737A  EC86  F02B         	call	_lcdStr	;wreg free
  3653  00737E                     
  3654                           ;./title.h: 146:     lcdPosition(2, 0);
  3655  00737E  0E00               	movlw	0
  3656  007380  6E09               	movwf	lcdPosition@col^0,c
  3657  007382  0E02               	movlw	2
  3658  007384  ECA9  F02E         	call	_lcdPosition
  3659  007388                     
  3660                           ;./title.h: 147:     lcdStr("|     INVADERS |");
  3661  007388  0EE0               	movlw	low STR_39
  3662  00738A  6E09               	movwf	lcdStr@str^0,c
  3663  00738C  0E7E               	movlw	high STR_39
  3664  00738E  6E0A               	movwf	(lcdStr@str+1)^0,c
  3665  007390  EC86  F02B         	call	_lcdStr	;wreg free
  3666                           
  3667                           ;./title.h: 149:     lcdPosition(3, 0);
  3668  007394  0E00               	movlw	0
  3669  007396  6E09               	movwf	lcdPosition@col^0,c
  3670  007398  0E03               	movlw	3
  3671  00739A  ECA9  F02E         	call	_lcdPosition
  3672  00739E                     
  3673                           ;./title.h: 150:     lcdStr("|--------------|");
  3674  00739E  0EF1               	movlw	low STR_1
  3675  0073A0  6E09               	movwf	lcdStr@str^0,c
  3676  0073A2  0E7E               	movlw	high STR_1
  3677  0073A4  6E0A               	movwf	(lcdStr@str+1)^0,c
  3678  0073A6  EC86  F02B         	call	_lcdStr	;wreg free
  3679  0073AA                     
  3680                           ;./title.h: 152:     for(int i = 0; i < 18000; i++);
  3681  0073AA  0E00               	movlw	0
  3682  0073AC  6E25               	movwf	(titleScreen@i_302+1)^0,c
  3683  0073AE  0E00               	movlw	0
  3684  0073B0  6E24               	movwf	titleScreen@i_302^0,c
  3685  0073B2                     l3175:
  3686  0073B2  BE25               	btfsc	(titleScreen@i_302+1)^0,7,c
  3687  0073B4  EFE5  F039         	goto	u2671
  3688  0073B8  0E50               	movlw	80
  3689  0073BA  5C24               	subwf	titleScreen@i_302^0,w,c
  3690  0073BC  0E46               	movlw	70
  3691  0073BE  5825               	subwfb	(titleScreen@i_302+1)^0,w,c
  3692  0073C0  A0D8               	btfss	status,0,c
  3693  0073C2  EFE5  F039         	goto	u2671
  3694  0073C6  EFE7  F039         	goto	u2670
  3695  0073CA                     u2671:
  3696  0073CA  EFE9  F039         	goto	l3179
  3697  0073CE                     u2670:
  3698  0073CE  EFED  F039         	goto	l3183
  3699  0073D2                     l3179:
  3700  0073D2  4A24               	infsnz	titleScreen@i_302^0,f,c
  3701  0073D4  2A25               	incf	(titleScreen@i_302+1)^0,f,c
  3702  0073D6  EFD9  F039         	goto	l3175
  3703  0073DA                     l3183:
  3704                           
  3705                           ;./title.h: 154:     lcdPosition(0, 0);
  3706  0073DA  0E00               	movlw	0
  3707  0073DC  6E09               	movwf	lcdPosition@col^0,c
  3708  0073DE  0E00               	movlw	0
  3709  0073E0  ECA9  F02E         	call	_lcdPosition
  3710  0073E4                     
  3711                           ;./title.h: 156:     lcdStr("|--------------|");
  3712  0073E4  0EF1               	movlw	low STR_1
  3713  0073E6  6E09               	movwf	lcdStr@str^0,c
  3714  0073E8  0E7E               	movlw	high STR_1
  3715  0073EA  6E0A               	movwf	(lcdStr@str+1)^0,c
  3716  0073EC  EC86  F02B         	call	_lcdStr	;wreg free
  3717  0073F0                     
  3718                           ;./title.h: 158:     lcdPosition(1, 0);
  3719  0073F0  0E00               	movlw	0
  3720  0073F2  6E09               	movwf	lcdPosition@col^0,c
  3721  0073F4  0E01               	movlw	1
  3722  0073F6  ECA9  F02E         	call	_lcdPosition
  3723                           
  3724                           ;./title.h: 159:     lcdStr("|    CLONE     |");
  3725  0073FA  0E47               	movlw	low STR_42
  3726  0073FC  6E09               	movwf	lcdStr@str^0,c
  3727  0073FE  0E7E               	movlw	high STR_42
  3728  007400  6E0A               	movwf	(lcdStr@str+1)^0,c
  3729  007402  EC86  F02B         	call	_lcdStr	;wreg free
  3730  007406                     
  3731                           ;./title.h: 161:     lcdPosition(2, 0);
  3732  007406  0E00               	movlw	0
  3733  007408  6E09               	movwf	lcdPosition@col^0,c
  3734  00740A  0E02               	movlw	2
  3735  00740C  ECA9  F02E         	call	_lcdPosition
  3736  007410                     
  3737                           ;./title.h: 162:     lcdStr("|    INVADERS  |");
  3738  007410  0E9C               	movlw	low STR_43
  3739  007412  6E09               	movwf	lcdStr@str^0,c
  3740  007414  0E7E               	movlw	high STR_43
  3741  007416  6E0A               	movwf	(lcdStr@str+1)^0,c
  3742  007418  EC86  F02B         	call	_lcdStr	;wreg free
  3743                           
  3744                           ;./title.h: 164:     lcdPosition(3, 0);
  3745  00741C  0E00               	movlw	0
  3746  00741E  6E09               	movwf	lcdPosition@col^0,c
  3747  007420  0E03               	movlw	3
  3748  007422  ECA9  F02E         	call	_lcdPosition
  3749  007426                     
  3750                           ;./title.h: 165:     lcdStr("|--------------|");
  3751  007426  0EF1               	movlw	low STR_1
  3752  007428  6E09               	movwf	lcdStr@str^0,c
  3753  00742A  0E7E               	movlw	high STR_1
  3754  00742C  6E0A               	movwf	(lcdStr@str+1)^0,c
  3755  00742E  EC86  F02B         	call	_lcdStr	;wreg free
  3756  007432                     
  3757                           ;./title.h: 167:     for(int i = 0; i < 18000; i++);
  3758  007432  0E00               	movlw	0
  3759  007434  6E27               	movwf	(titleScreen@i_307+1)^0,c
  3760  007436  0E00               	movlw	0
  3761  007438  6E26               	movwf	titleScreen@i_307^0,c
  3762  00743A                     l3197:
  3763  00743A  BE27               	btfsc	(titleScreen@i_307+1)^0,7,c
  3764  00743C  EF29  F03A         	goto	u2681
  3765  007440  0E50               	movlw	80
  3766  007442  5C26               	subwf	titleScreen@i_307^0,w,c
  3767  007444  0E46               	movlw	70
  3768  007446  5827               	subwfb	(titleScreen@i_307+1)^0,w,c
  3769  007448  A0D8               	btfss	status,0,c
  3770  00744A  EF29  F03A         	goto	u2681
  3771  00744E  EF2B  F03A         	goto	u2680
  3772  007452                     u2681:
  3773  007452  EF2D  F03A         	goto	l3201
  3774  007456                     u2680:
  3775  007456  EF31  F03A         	goto	l3205
  3776  00745A                     l3201:
  3777  00745A  4A26               	infsnz	titleScreen@i_307^0,f,c
  3778  00745C  2A27               	incf	(titleScreen@i_307+1)^0,f,c
  3779  00745E  EF1D  F03A         	goto	l3197
  3780  007462                     l3205:
  3781                           
  3782                           ;./title.h: 169:     lcdPosition(0, 0);
  3783  007462  0E00               	movlw	0
  3784  007464  6E09               	movwf	lcdPosition@col^0,c
  3785  007466  0E00               	movlw	0
  3786  007468  ECA9  F02E         	call	_lcdPosition
  3787  00746C                     
  3788                           ;./title.h: 171:     lcdStr("|--------------|");
  3789  00746C  0EF1               	movlw	low STR_1
  3790  00746E  6E09               	movwf	lcdStr@str^0,c
  3791  007470  0E7E               	movlw	high STR_1
  3792  007472  6E0A               	movwf	(lcdStr@str+1)^0,c
  3793  007474  EC86  F02B         	call	_lcdStr	;wreg free
  3794  007478                     
  3795                           ;./title.h: 173:     lcdPosition(1, 0);
  3796  007478  0E00               	movlw	0
  3797  00747A  6E09               	movwf	lcdPosition@col^0,c
  3798  00747C  0E01               	movlw	1
  3799  00747E  ECA9  F02E         	call	_lcdPosition
  3800                           
  3801                           ;./title.h: 174:     lcdStr("|   CLONE      |");
  3802  007482  0E36               	movlw	low STR_46
  3803  007484  6E09               	movwf	lcdStr@str^0,c
  3804  007486  0E7E               	movlw	high STR_46
  3805  007488  6E0A               	movwf	(lcdStr@str+1)^0,c
  3806  00748A  EC86  F02B         	call	_lcdStr	;wreg free
  3807  00748E                     
  3808                           ;./title.h: 176:     lcdPosition(2, 0);
  3809  00748E  0E00               	movlw	0
  3810  007490  6E09               	movwf	lcdPosition@col^0,c
  3811  007492  0E02               	movlw	2
  3812  007494  ECA9  F02E         	call	_lcdPosition
  3813  007498                     
  3814                           ;./title.h: 177:     lcdStr("|   INVADERS   |");
  3815  007498  0E7A               	movlw	low STR_47
  3816  00749A  6E09               	movwf	lcdStr@str^0,c
  3817  00749C  0E7E               	movlw	high STR_47
  3818  00749E  6E0A               	movwf	(lcdStr@str+1)^0,c
  3819  0074A0  EC86  F02B         	call	_lcdStr	;wreg free
  3820                           
  3821                           ;./title.h: 179:     lcdPosition(3, 0);
  3822  0074A4  0E00               	movlw	0
  3823  0074A6  6E09               	movwf	lcdPosition@col^0,c
  3824  0074A8  0E03               	movlw	3
  3825  0074AA  ECA9  F02E         	call	_lcdPosition
  3826  0074AE                     
  3827                           ;./title.h: 180:     lcdStr("|--------------|");
  3828  0074AE  0EF1               	movlw	low STR_1
  3829  0074B0  6E09               	movwf	lcdStr@str^0,c
  3830  0074B2  0E7E               	movlw	high STR_1
  3831  0074B4  6E0A               	movwf	(lcdStr@str+1)^0,c
  3832  0074B6  EC86  F02B         	call	_lcdStr	;wreg free
  3833  0074BA                     
  3834                           ;./title.h: 182:     for(int i = 0; i < 18000; i++);
  3835  0074BA  0E00               	movlw	0
  3836  0074BC  6E29               	movwf	(titleScreen@i_312+1)^0,c
  3837  0074BE  0E00               	movlw	0
  3838  0074C0  6E28               	movwf	titleScreen@i_312^0,c
  3839  0074C2                     l3219:
  3840  0074C2  BE29               	btfsc	(titleScreen@i_312+1)^0,7,c
  3841  0074C4  EF6D  F03A         	goto	u2691
  3842  0074C8  0E50               	movlw	80
  3843  0074CA  5C28               	subwf	titleScreen@i_312^0,w,c
  3844  0074CC  0E46               	movlw	70
  3845  0074CE  5829               	subwfb	(titleScreen@i_312+1)^0,w,c
  3846  0074D0  A0D8               	btfss	status,0,c
  3847  0074D2  EF6D  F03A         	goto	u2691
  3848  0074D6  EF6F  F03A         	goto	u2690
  3849  0074DA                     u2691:
  3850  0074DA  EF71  F03A         	goto	l3223
  3851  0074DE                     u2690:
  3852  0074DE  EF75  F03A         	goto	l3227
  3853  0074E2                     l3223:
  3854  0074E2  4A28               	infsnz	titleScreen@i_312^0,f,c
  3855  0074E4  2A29               	incf	(titleScreen@i_312+1)^0,f,c
  3856  0074E6  EF61  F03A         	goto	l3219
  3857  0074EA                     l3227:
  3858                           
  3859                           ;./title.h: 183:     for(int i = 0; i < 18000; i++);
  3860  0074EA  0E00               	movlw	0
  3861  0074EC  6E2B               	movwf	(titleScreen@i_313+1)^0,c
  3862  0074EE  0E00               	movlw	0
  3863  0074F0  6E2A               	movwf	titleScreen@i_313^0,c
  3864  0074F2                     l3229:
  3865  0074F2  BE2B               	btfsc	(titleScreen@i_313+1)^0,7,c
  3866  0074F4  EF85  F03A         	goto	u2701
  3867  0074F8  0E50               	movlw	80
  3868  0074FA  5C2A               	subwf	titleScreen@i_313^0,w,c
  3869  0074FC  0E46               	movlw	70
  3870  0074FE  582B               	subwfb	(titleScreen@i_313+1)^0,w,c
  3871  007500  A0D8               	btfss	status,0,c
  3872  007502  EF85  F03A         	goto	u2701
  3873  007506  EF87  F03A         	goto	u2700
  3874  00750A                     u2701:
  3875  00750A  EF89  F03A         	goto	l3233
  3876  00750E                     u2700:
  3877  00750E  EF8D  F03A         	goto	l3237
  3878  007512                     l3233:
  3879  007512  4A2A               	infsnz	titleScreen@i_313^0,f,c
  3880  007514  2A2B               	incf	(titleScreen@i_313+1)^0,f,c
  3881  007516  EF79  F03A         	goto	l3229
  3882  00751A                     l3237:
  3883                           
  3884                           ;./title.h: 184:     for(int i = 0; i < 18000; i++);
  3885  00751A  0E00               	movlw	0
  3886  00751C  6E2D               	movwf	(titleScreen@i_314+1)^0,c
  3887  00751E  0E00               	movlw	0
  3888  007520  6E2C               	movwf	titleScreen@i_314^0,c
  3889  007522                     l3239:
  3890  007522  BE2D               	btfsc	(titleScreen@i_314+1)^0,7,c
  3891  007524  EF9D  F03A         	goto	u2711
  3892  007528  0E50               	movlw	80
  3893  00752A  5C2C               	subwf	titleScreen@i_314^0,w,c
  3894  00752C  0E46               	movlw	70
  3895  00752E  582D               	subwfb	(titleScreen@i_314+1)^0,w,c
  3896  007530  A0D8               	btfss	status,0,c
  3897  007532  EF9D  F03A         	goto	u2711
  3898  007536  EF9F  F03A         	goto	u2710
  3899  00753A                     u2711:
  3900  00753A  EFA1  F03A         	goto	l3243
  3901  00753E                     u2710:
  3902  00753E  EFA5  F03A         	goto	l3247
  3903  007542                     l3243:
  3904  007542  4A2C               	infsnz	titleScreen@i_314^0,f,c
  3905  007544  2A2D               	incf	(titleScreen@i_314+1)^0,f,c
  3906  007546  EF91  F03A         	goto	l3239
  3907  00754A                     l3247:
  3908                           
  3909                           ;./title.h: 185:     for(int i = 0; i < 18000; i++);
  3910  00754A  0E00               	movlw	0
  3911  00754C  6E2F               	movwf	(titleScreen@i_315+1)^0,c
  3912  00754E  0E00               	movlw	0
  3913  007550  6E2E               	movwf	titleScreen@i_315^0,c
  3914  007552                     l3249:
  3915  007552  BE2F               	btfsc	(titleScreen@i_315+1)^0,7,c
  3916  007554  EFB5  F03A         	goto	u2721
  3917  007558  0E50               	movlw	80
  3918  00755A  5C2E               	subwf	titleScreen@i_315^0,w,c
  3919  00755C  0E46               	movlw	70
  3920  00755E  582F               	subwfb	(titleScreen@i_315+1)^0,w,c
  3921  007560  A0D8               	btfss	status,0,c
  3922  007562  EFB5  F03A         	goto	u2721
  3923  007566  EFB7  F03A         	goto	u2720
  3924  00756A                     u2721:
  3925  00756A  EFB9  F03A         	goto	l3253
  3926  00756E                     u2720:
  3927  00756E  EFBD  F03A         	goto	l3257
  3928  007572                     l3253:
  3929  007572  4A2E               	infsnz	titleScreen@i_315^0,f,c
  3930  007574  2A2F               	incf	(titleScreen@i_315+1)^0,f,c
  3931  007576  EFA9  F03A         	goto	l3249
  3932  00757A                     l3257:
  3933                           
  3934                           ;./title.h: 186:     for(int i = 0; i < 18000; i++);
  3935  00757A  0E00               	movlw	0
  3936  00757C  6E31               	movwf	(titleScreen@i_316+1)^0,c
  3937  00757E  0E00               	movlw	0
  3938  007580  6E30               	movwf	titleScreen@i_316^0,c
  3939  007582                     l3259:
  3940  007582  BE31               	btfsc	(titleScreen@i_316+1)^0,7,c
  3941  007584  EFCD  F03A         	goto	u2731
  3942  007588  0E50               	movlw	80
  3943  00758A  5C30               	subwf	titleScreen@i_316^0,w,c
  3944  00758C  0E46               	movlw	70
  3945  00758E  5831               	subwfb	(titleScreen@i_316+1)^0,w,c
  3946  007590  A0D8               	btfss	status,0,c
  3947  007592  EFCD  F03A         	goto	u2731
  3948  007596  EFCF  F03A         	goto	u2730
  3949  00759A                     u2731:
  3950  00759A  EFD1  F03A         	goto	l3263
  3951  00759E                     u2730:
  3952  00759E  EFD5  F03A         	goto	l3267
  3953  0075A2                     l3263:
  3954  0075A2  4A30               	infsnz	titleScreen@i_316^0,f,c
  3955  0075A4  2A31               	incf	(titleScreen@i_316+1)^0,f,c
  3956  0075A6  EFC1  F03A         	goto	l3259
  3957  0075AA                     l3267:
  3958                           
  3959                           ;./title.h: 188:     lcdPosition(0, 0);
  3960  0075AA  0E00               	movlw	0
  3961  0075AC  6E09               	movwf	lcdPosition@col^0,c
  3962  0075AE  0E00               	movlw	0
  3963  0075B0  ECA9  F02E         	call	_lcdPosition
  3964  0075B4                     
  3965                           ;./title.h: 190:     lcdStr("|--------------|");
  3966  0075B4  0EF1               	movlw	low STR_1
  3967  0075B6  6E09               	movwf	lcdStr@str^0,c
  3968  0075B8  0E7E               	movlw	high STR_1
  3969  0075BA  6E0A               	movwf	(lcdStr@str+1)^0,c
  3970  0075BC  EC86  F02B         	call	_lcdStr	;wreg free
  3971  0075C0                     
  3972                           ;./title.h: 192:     lcdPosition(1, 0);
  3973  0075C0  0E00               	movlw	0
  3974  0075C2  6E09               	movwf	lcdPosition@col^0,c
  3975  0075C4  0E01               	movlw	1
  3976  0075C6  ECA9  F02E         	call	_lcdPosition
  3977                           
  3978                           ;./title.h: 193:     lcdStr("|              |");
  3979  0075CA  0E25               	movlw	low STR_2
  3980  0075CC  6E09               	movwf	lcdStr@str^0,c
  3981  0075CE  0E7E               	movlw	high STR_2
  3982  0075D0  6E0A               	movwf	(lcdStr@str+1)^0,c
  3983  0075D2  EC86  F02B         	call	_lcdStr	;wreg free
  3984  0075D6                     
  3985                           ;./title.h: 195:     lcdPosition(2, 0);
  3986  0075D6  0E00               	movlw	0
  3987  0075D8  6E09               	movwf	lcdPosition@col^0,c
  3988  0075DA  0E02               	movlw	2
  3989  0075DC  ECA9  F02E         	call	_lcdPosition
  3990  0075E0                     
  3991                           ;./title.h: 196:     lcdStr("|              |");
  3992  0075E0  0E25               	movlw	low STR_2
  3993  0075E2  6E09               	movwf	lcdStr@str^0,c
  3994  0075E4  0E7E               	movlw	high STR_2
  3995  0075E6  6E0A               	movwf	(lcdStr@str+1)^0,c
  3996  0075E8  EC86  F02B         	call	_lcdStr	;wreg free
  3997                           
  3998                           ;./title.h: 198:     lcdPosition(3, 0);
  3999  0075EC  0E00               	movlw	0
  4000  0075EE  6E09               	movwf	lcdPosition@col^0,c
  4001  0075F0  0E03               	movlw	3
  4002  0075F2  ECA9  F02E         	call	_lcdPosition
  4003  0075F6                     
  4004                           ;./title.h: 199:     lcdStr("|--------------|");
  4005  0075F6  0EF1               	movlw	low STR_1
  4006  0075F8  6E09               	movwf	lcdStr@str^0,c
  4007  0075FA  0E7E               	movlw	high STR_1
  4008  0075FC  6E0A               	movwf	(lcdStr@str+1)^0,c
  4009  0075FE  EC86  F02B         	call	_lcdStr	;wreg free
  4010  007602                     
  4011                           ;./title.h: 201:     lcdPosition(1, 2);
  4012  007602  0E02               	movlw	2
  4013  007604  6E09               	movwf	lcdPosition@col^0,c
  4014  007606  0E01               	movlw	1
  4015  007608  ECA9  F02E         	call	_lcdPosition
  4016                           
  4017                           ;./title.h: 202:     lcdStrDelay("PRESS 5");
  4018  00760C  0EF6               	movlw	low STR_53
  4019  00760E  6E09               	movwf	lcdStrDelay@str^0,c
  4020  007610  0E7F               	movlw	high STR_53
  4021  007612  6E0A               	movwf	(lcdStrDelay@str+1)^0,c
  4022  007614  ECEF  F02D         	call	_lcdStrDelay	;wreg free
  4023  007618                     
  4024                           ;./title.h: 204:     lcdPosition(2, 2);
  4025  007618  0E02               	movlw	2
  4026  00761A  6E09               	movwf	lcdPosition@col^0,c
  4027  00761C  0E02               	movlw	2
  4028  00761E  ECA9  F02E         	call	_lcdPosition
  4029  007622                     
  4030                           ;./title.h: 205:     lcdStrDelay("TO START...");
  4031  007622  0EDF               	movlw	low STR_54
  4032  007624  6E09               	movwf	lcdStrDelay@str^0,c
  4033  007626  0E7F               	movlw	high STR_54
  4034  007628  6E0A               	movwf	(lcdStrDelay@str+1)^0,c
  4035  00762A  ECEF  F02D         	call	_lcdStrDelay	;wreg free
  4036                           
  4037                           ;./title.h: 207:     unsigned int key;;./title.h: 209:     while(! ((key) & (1<<(6)))) {
  4038  00762E  EF21  F03B         	goto	l3289
  4039  007632                     l3285:
  4040                           
  4041                           ;./title.h: 210:         kpDebounce();
  4042  007632  EC00  F031         	call	_kpDebounce	;wreg free
  4043  007636                     
  4044                           ;./title.h: 212:         key = kpRead();
  4045  007636  EC34  F02B         	call	_kpRead	;wreg free
  4046  00763A  C001  F010         	movff	?_kpRead,titleScreen@key
  4047  00763E  C002  F011         	movff	?_kpRead+1,titleScreen@key+1
  4048  007642                     l3289:
  4049                           
  4050                           ;./title.h: 209:     while(! ((key) & (1<<(6)))) {
  4051  007642  AC10               	btfss	titleScreen@key^0,6,c
  4052  007644  EF26  F03B         	goto	u2741
  4053  007648  EF28  F03B         	goto	u2740
  4054  00764C                     u2741:
  4055  00764C  EF19  F03B         	goto	l3285
  4056  007650                     u2740:
  4057  007650  0012               	return		;funcret
  4058  007652                     __end_of_titleScreen:
  4059                           	callstack 0
  4060                           
  4061 ;; *************** function _lcdStrDelay *****************
  4062 ;; Defined at:
  4063 ;;		line 133 in file "lcd.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  str             2    8[COMRAM] PTR const unsigned char 
  4066 ;;		 -> STR_54(12), STR_53(8), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  i               2   12[COMRAM] int 
  4069 ;;  i               1   14[COMRAM] unsigned char 
  4070 ;; Return value:  Size  Location     Type
  4071 ;;                  1    wreg      void 
  4072 ;; Registers used:
  4073 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4074 ;; Tracked objects:
  4075 ;;		On entry : 0/0
  4076 ;;		On exit  : 0/0
  4077 ;;		Unchanged: 0/0
  4078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4079 ;;      Params:         2       0       0       0       0       0       0
  4080 ;;      Locals:         3       0       0       0       0       0       0
  4081 ;;      Temps:          2       0       0       0       0       0       0
  4082 ;;      Totals:         7       0       0       0       0       0       0
  4083 ;;Total ram usage:        7 bytes
  4084 ;; Hardware stack levels used:    1
  4085 ;; Hardware stack levels required when called:    2
  4086 ;; This function calls:
  4087 ;;		_lcdChar
  4088 ;; This function is called by:
  4089 ;;		_titleScreen
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text7
  4094  005BDE                     __ptext7:
  4095                           	callstack 0
  4096  005BDE                     _lcdStrDelay:
  4097                           	callstack 27
  4098  005BDE                     
  4099                           ;lcd.c: 134:     unsigned char i = 0;
  4100  005BDE  0E00               	movlw	0
  4101  005BE0  6E0F               	movwf	lcdStrDelay@i^0,c
  4102                           
  4103                           ;lcd.c: 136:     while (str[i] != 0) {
  4104  005BE2  EF16  F02E         	goto	l2757
  4105  005BE6                     l2743:
  4106                           
  4107                           ;lcd.c: 137:         lcdChar(str[i]);
  4108  005BE6  500F               	movf	lcdStrDelay@i^0,w,c
  4109  005BE8  2409               	addwf	lcdStrDelay@str^0,w,c
  4110  005BEA  6E0B               	movwf	??_lcdStrDelay^0,c
  4111  005BEC  0E00               	movlw	0
  4112  005BEE  200A               	addwfc	(lcdStrDelay@str+1)^0,w,c
  4113  005BF0  6E0C               	movwf	(??_lcdStrDelay+1)^0,c
  4114  005BF2  C00B  FFF6         	movff	??_lcdStrDelay,tblptrl
  4115  005BF6  C00C  FFF7         	movff	??_lcdStrDelay+1,tblptrh
  4116  005BFA                     	if	0	;tblptru may be non-zero
  4117  005BFA                     	endif
  4118  005BFA                     	if	0	;tblptru may be non-zero
  4119  005BFA                     	endif
  4120  005BFA  0008               	tblrd		*
  4121  005BFC  50F5               	movf	tablat,w,c
  4122  005BFE  ECAE  F02B         	call	_lcdChar
  4123  005C02                     
  4124                           ;lcd.c: 139:         for (int i = 0; i < 20000; i++);
  4125  005C02  0E00               	movlw	0
  4126  005C04  6E0E               	movwf	(lcdStrDelay@i_128+1)^0,c
  4127  005C06  0E00               	movlw	0
  4128  005C08  6E0D               	movwf	lcdStrDelay@i_128^0,c
  4129  005C0A                     l2751:
  4130  005C0A  4A0D               	infsnz	lcdStrDelay@i_128^0,f,c
  4131  005C0C  2A0E               	incf	(lcdStrDelay@i_128+1)^0,f,c
  4132  005C0E  BE0E               	btfsc	(lcdStrDelay@i_128+1)^0,7,c
  4133  005C10  EF13  F02E         	goto	u2431
  4134  005C14  0E20               	movlw	32
  4135  005C16  5C0D               	subwf	lcdStrDelay@i_128^0,w,c
  4136  005C18  0E4E               	movlw	78
  4137  005C1A  580E               	subwfb	(lcdStrDelay@i_128+1)^0,w,c
  4138  005C1C  A0D8               	btfss	status,0,c
  4139  005C1E  EF13  F02E         	goto	u2431
  4140  005C22  EF15  F02E         	goto	u2430
  4141  005C26                     u2431:
  4142  005C26  EF05  F02E         	goto	l2751
  4143  005C2A                     u2430:
  4144  005C2A                     
  4145                           ;lcd.c: 141:         i++;
  4146  005C2A  2A0F               	incf	lcdStrDelay@i^0,f,c
  4147  005C2C                     l2757:
  4148                           
  4149                           ;lcd.c: 136:     while (str[i] != 0) {
  4150  005C2C  500F               	movf	lcdStrDelay@i^0,w,c
  4151  005C2E  2409               	addwf	lcdStrDelay@str^0,w,c
  4152  005C30  6E0B               	movwf	??_lcdStrDelay^0,c
  4153  005C32  0E00               	movlw	0
  4154  005C34  200A               	addwfc	(lcdStrDelay@str+1)^0,w,c
  4155  005C36  6E0C               	movwf	(??_lcdStrDelay+1)^0,c
  4156  005C38  C00B  FFF6         	movff	??_lcdStrDelay,tblptrl
  4157  005C3C  C00C  FFF7         	movff	??_lcdStrDelay+1,tblptrh
  4158  005C40                     	if	0	;tblptru may be non-zero
  4159  005C40                     	endif
  4160  005C40                     	if	0	;tblptru may be non-zero
  4161  005C40                     	endif
  4162  005C40  0008               	tblrd		*
  4163  005C42  50F5               	movf	tablat,w,c
  4164  005C44  0900               	iorlw	0
  4165  005C46  A4D8               	btfss	status,2,c
  4166  005C48  EF28  F02E         	goto	u2441
  4167  005C4C  EF2A  F02E         	goto	u2440
  4168  005C50                     u2441:
  4169  005C50  EFF3  F02D         	goto	l2743
  4170  005C54                     u2440:
  4171  005C54  0012               	return		;funcret
  4172  005C56                     __end_of_lcdStrDelay:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function _timerInit *****************
  4176 ;; Defined at:
  4177 ;;		line 51 in file "timer.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;		None
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  1    wreg      void 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4191 ;;      Params:         0       0       0       0       0       0       0
  4192 ;;      Locals:         0       0       0       0       0       0       0
  4193 ;;      Temps:          0       0       0       0       0       0       0
  4194 ;;      Totals:         0       0       0       0       0       0       0
  4195 ;;Total ram usage:        0 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_main
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text8
  4205  005656                     __ptext8:
  4206                           	callstack 0
  4207  005656                     _timerInit:
  4208                           	callstack 30
  4209  005656                     
  4210                           ;timer.c: 53:  T0CON = 0b00001000;
  4211  005656  0E08               	movlw	8
  4212  005658  6ED5               	movwf	213,c	;volatile
  4213  00565A                     
  4214                           ;timer.c: 54:  ((T0CON) |= (1<<(7)));
  4215  00565A  8ED5               	bsf	213,7,c	;volatile
  4216  00565C  0012               	return		;funcret
  4217  00565E                     __end_of_timerInit:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function _ssdInit *****************
  4221 ;; Defined at:
  4222 ;;		line 101 in file "ssd.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;		None
  4225 ;; Auto vars:     Size  Location     Type
  4226 ;;		None
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  1    wreg      void 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0, cstack
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4236 ;;      Params:         0       0       0       0       0       0       0
  4237 ;;      Locals:         0       0       0       0       0       0       0
  4238 ;;      Temps:          0       0       0       0       0       0       0
  4239 ;;      Totals:         0       0       0       0       0       0       0
  4240 ;;Total ram usage:        0 bytes
  4241 ;; Hardware stack levels used:    1
  4242 ;; Hardware stack levels required when called:    1
  4243 ;; This function calls:
  4244 ;;		_pinMode
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250                           	psect	text9
  4251  0057B0                     __ptext9:
  4252                           	callstack 0
  4253  0057B0                     _ssdInit:
  4254                           	callstack 29
  4255  0057B0                     
  4256                           ;ssd.c: 103:     pinMode(PIN_A2, 0);
  4257  0057B0  0E00               	movlw	0
  4258  0057B2  6E02               	movwf	(pinMode@pin+1)^0,c
  4259  0057B4  0E02               	movlw	2
  4260  0057B6  6E01               	movwf	pinMode@pin^0,c
  4261  0057B8  0E00               	movlw	0
  4262  0057BA  6E04               	movwf	(pinMode@type+1)^0,c
  4263  0057BC  0E00               	movlw	0
  4264  0057BE  6E03               	movwf	pinMode@type^0,c
  4265  0057C0  ECF1  F033         	call	_pinMode	;wreg free
  4266                           
  4267                           ;ssd.c: 104:     pinMode(PIN_A3, 0);
  4268  0057C4  0E00               	movlw	0
  4269  0057C6  6E02               	movwf	(pinMode@pin+1)^0,c
  4270  0057C8  0E03               	movlw	3
  4271  0057CA  6E01               	movwf	pinMode@pin^0,c
  4272  0057CC  0E00               	movlw	0
  4273  0057CE  6E04               	movwf	(pinMode@type+1)^0,c
  4274  0057D0  0E00               	movlw	0
  4275  0057D2  6E03               	movwf	pinMode@type^0,c
  4276  0057D4  ECF1  F033         	call	_pinMode	;wreg free
  4277                           
  4278                           ;ssd.c: 105:     pinMode(PIN_A4, 0);
  4279  0057D8  0E00               	movlw	0
  4280  0057DA  6E02               	movwf	(pinMode@pin+1)^0,c
  4281  0057DC  0E04               	movlw	4
  4282  0057DE  6E01               	movwf	pinMode@pin^0,c
  4283  0057E0  0E00               	movlw	0
  4284  0057E2  6E04               	movwf	(pinMode@type+1)^0,c
  4285  0057E4  0E00               	movlw	0
  4286  0057E6  6E03               	movwf	pinMode@type^0,c
  4287  0057E8  ECF1  F033         	call	_pinMode	;wreg free
  4288                           
  4289                           ;ssd.c: 106:     pinMode(PIN_A5, 0);
  4290  0057EC  0E00               	movlw	0
  4291  0057EE  6E02               	movwf	(pinMode@pin+1)^0,c
  4292  0057F0  0E05               	movlw	5
  4293  0057F2  6E01               	movwf	pinMode@pin^0,c
  4294  0057F4  0E00               	movlw	0
  4295  0057F6  6E04               	movwf	(pinMode@type+1)^0,c
  4296  0057F8  0E00               	movlw	0
  4297  0057FA  6E03               	movwf	pinMode@type^0,c
  4298  0057FC  ECF1  F033         	call	_pinMode	;wreg free
  4299  005800                     
  4300                           ;ssd.c: 109:     TRISD = 0x00;
  4301  005800  0E00               	movlw	0
  4302  005802  6E95               	movwf	149,c	;volatile
  4303  005804  0012               	return		;funcret
  4304  005806                     __end_of_ssdInit:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _playerInput *****************
  4308 ;; Defined at:
  4309 ;;		line 95 in file "main.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0
  4326 ;;      Totals:         0       0       0       0       0       0       0
  4327 ;;Total ram usage:        0 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    1
  4330 ;; This function calls:
  4331 ;;		_kpDebounce
  4332 ;;		_kpRead
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           	psect	text10
  4339  005FD6                     __ptext10:
  4340                           	callstack 0
  4341  005FD6                     _playerInput:
  4342                           	callstack 29
  4343  005FD6                     
  4344                           ;main.c: 96:     kpDebounce();
  4345  005FD6  EC00  F031         	call	_kpDebounce	;wreg free
  4346  005FDA                     
  4347                           ;main.c: 98:     if (kpRead() != key || keyCount > 8) {
  4348  005FDA  EC34  F02B         	call	_kpRead	;wreg free
  4349  005FDE  5074               	movf	_key^0,w,c
  4350  005FE0  1801               	xorwf	?_kpRead^0,w,c
  4351  005FE2  E107               	bnz	u2751
  4352  005FE4  5075               	movf	(_key+1)^0,w,c
  4353  005FE6  1802               	xorwf	(?_kpRead+1)^0,w,c
  4354  005FE8  A4D8               	btfss	status,2,c
  4355  005FEA  EFF9  F02F         	goto	u2751
  4356  005FEE  EFFB  F02F         	goto	u2750
  4357  005FF2                     u2751:
  4358  005FF2  EF07  F030         	goto	l3297
  4359  005FF6                     u2750:
  4360  005FF6  0100               	movlb	0	; () banked
  4361  005FF8  51D0               	movf	(_keyCount+1)& (0+255),w,b
  4362  005FFA  E109               	bnz	u2760
  4363  005FFC  0E09               	movlw	9
  4364  005FFE  5DCF               	subwf	_keyCount& (0+255),w,b
  4365  006000  A0D8               	btfss	status,0,c
  4366  006002  EF05  F030         	goto	u2761
  4367  006006  EF07  F030         	goto	u2760
  4368  00600A                     u2761:
  4369  00600A  EF55  F030         	goto	l3321
  4370  00600E                     u2760:
  4371  00600E                     l3297:
  4372                           
  4373                           ;main.c: 99:         key = kpRead();
  4374  00600E  EC34  F02B         	call	_kpRead	;wreg free
  4375  006012  C001  F074         	movff	?_kpRead,_key
  4376  006016  C002  F075         	movff	?_kpRead+1,_key+1
  4377  00601A                     
  4378                           ;main.c: 100:         keyCount = 0;
  4379  00601A  0E00               	movlw	0
  4380  00601C  0100               	movlb	0	; () banked
  4381  00601E  6FD0               	movwf	(_keyCount+1)& (0+255),b
  4382  006020  0E00               	movlw	0
  4383  006022  6FCF               	movwf	_keyCount& (0+255),b
  4384  006024                     
  4385                           ; BSR set to: 0
  4386                           ;main.c: 102:         if (((key) & (1<<(3)))) {
  4387  006024  A674               	btfss	_key^0,3,c
  4388  006026  EF17  F030         	goto	u2771
  4389  00602A  EF19  F030         	goto	u2770
  4390  00602E                     u2771:
  4391  00602E  EF29  F030         	goto	l3307
  4392  006032                     u2770:
  4393  006032                     
  4394                           ; BSR set to: 0
  4395                           ;main.c: 103:             if (player.x > 0) {
  4396  006032  BFC4               	btfsc	(_player+4)& (0+255),7,b
  4397  006034  EF24  F030         	goto	u2781
  4398  006038  51C4               	movf	(_player+4)& (0+255),w,b
  4399  00603A  E108               	bnz	u2780
  4400  00603C  05C3               	decf	(_player+3)& (0+255),w,b
  4401  00603E  A0D8               	btfss	status,0,c
  4402  006040  EF24  F030         	goto	u2781
  4403  006044  EF26  F030         	goto	u2780
  4404  006048                     u2781:
  4405  006048  EF29  F030         	goto	l3307
  4406  00604C                     u2780:
  4407  00604C                     
  4408                           ; BSR set to: 0
  4409                           ;main.c: 104:                 player.x--;
  4410  00604C  07C3               	decf	(_player+3)& (0+255),f,b
  4411  00604E  A0D8               	btfss	status,0,c
  4412  006050  07C4               	decf	(_player+4)& (0+255),f,b
  4413  006052                     l3307:
  4414                           
  4415                           ; BSR set to: 0
  4416                           ;main.c: 108:         if (((key) & (1<<(7)))) {
  4417  006052  AE74               	btfss	_key^0,7,c
  4418  006054  EF2E  F030         	goto	u2791
  4419  006058  EF30  F030         	goto	u2790
  4420  00605C                     u2791:
  4421  00605C  EF40  F030         	goto	l3313
  4422  006060                     u2790:
  4423  006060                     
  4424                           ; BSR set to: 0
  4425                           ;main.c: 109:             if (player.x < 16 - 1) {
  4426  006060  BFC4               	btfsc	(_player+4)& (0+255),7,b
  4427  006062  EF3E  F030         	goto	u2800
  4428  006066  51C4               	movf	(_player+4)& (0+255),w,b
  4429  006068  E107               	bnz	u2801
  4430  00606A  0E0F               	movlw	15
  4431  00606C  5DC3               	subwf	(_player+3)& (0+255),w,b
  4432  00606E  B0D8               	btfsc	status,0,c
  4433  006070  EF3C  F030         	goto	u2801
  4434  006074  EF3E  F030         	goto	u2800
  4435  006078                     u2801:
  4436  006078  EF40  F030         	goto	l3313
  4437  00607C                     u2800:
  4438  00607C                     
  4439                           ; BSR set to: 0
  4440                           ;main.c: 110:                 player.x++;
  4441  00607C  4BC3               	infsnz	(_player+3)& (0+255),f,b
  4442  00607E  2BC4               	incf	(_player+4)& (0+255),f,b
  4443  006080                     l3313:
  4444                           
  4445                           ; BSR set to: 0
  4446                           ;main.c: 114:         if (((key) & (1<<(2)))) {
  4447  006080  A474               	btfss	_key^0,2,c
  4448  006082  EF45  F030         	goto	u2811
  4449  006086  EF47  F030         	goto	u2810
  4450  00608A                     u2811:
  4451  00608A  EF57  F030         	goto	l364
  4452  00608E                     u2810:
  4453  00608E                     
  4454                           ; BSR set to: 0
  4455                           ;main.c: 115:             player.projectileAlive = 1;
  4456  00608E  0E01               	movlw	1
  4457  006090  6FC1               	movwf	(_player+1)& (0+255),b
  4458  006092                     
  4459                           ; BSR set to: 0
  4460                           ;main.c: 116:             player.projX = player.x;
  4461  006092  C0C3  F0C7         	movff	_player+3,_player+7
  4462  006096  C0C4  F0C8         	movff	_player+4,_player+8
  4463  00609A                     
  4464                           ; BSR set to: 0
  4465                           ;main.c: 117:             player.projY = player.y - 1;
  4466  00609A  0EFF               	movlw	255
  4467  00609C  25C5               	addwf	(_player+5)& (0+255),w,b
  4468  00609E  6FC9               	movwf	(_player+9)& (0+255),b
  4469  0060A0  0EFF               	movlw	255
  4470  0060A2  21C6               	addwfc	(_player+6)& (0+255),w,b
  4471  0060A4  6FCA               	movwf	(_player+10)& (0+255),b
  4472  0060A6  EF57  F030         	goto	l364
  4473  0060AA                     l3321:
  4474                           
  4475                           ; BSR set to: 0
  4476  0060AA  4BCF               	infsnz	_keyCount& (0+255),f,b
  4477  0060AC  2BD0               	incf	(_keyCount+1)& (0+255),f,b
  4478  0060AE                     l364:
  4479                           
  4480                           ; BSR set to: 0
  4481  0060AE  0012               	return		;funcret
  4482  0060B0                     __end_of_playerInput:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _kpRead *****************
  4486 ;; Defined at:
  4487 ;;		line 35 in file "keypad.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;		None
  4490 ;; Auto vars:     Size  Location     Type
  4491 ;;		None
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  2    0[COMRAM] unsigned int 
  4494 ;; Registers used:
  4495 ;;		None
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4501 ;;      Params:         2       0       0       0       0       0       0
  4502 ;;      Locals:         0       0       0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0
  4504 ;;      Totals:         2       0       0       0       0       0       0
  4505 ;;Total ram usage:        2 bytes
  4506 ;; Hardware stack levels used:    1
  4507 ;; This function calls:
  4508 ;;		Nothing
  4509 ;; This function is called by:
  4510 ;;		_titleScreen
  4511 ;;		_playerInput
  4512 ;; This function uses a non-reentrant model
  4513 ;;
  4514                           
  4515                           	psect	text11
  4516  005668                     __ptext11:
  4517                           	callstack 0
  4518  005668                     _kpRead:
  4519                           	callstack 29
  4520  005668                     
  4521                           ;keypad.c: 36:     return valor;
  4522  005668  C0D5  F001         	movff	_valor,?_kpRead
  4523  00566C  C0D6  F002         	movff	_valor+1,?_kpRead+1
  4524  005670  0012               	return		;funcret
  4525  005672                     __end_of_kpRead:
  4526                           	callstack 0
  4527                           
  4528 ;; *************** function _kpDebounce *****************
  4529 ;; Defined at:
  4530 ;;		line 39 in file "keypad.c"
  4531 ;; Parameters:    Size  Location     Type
  4532 ;;		None
  4533 ;; Auto vars:     Size  Location     Type
  4534 ;;  k               2    6[COMRAM] int 
  4535 ;;  i               1    9[COMRAM] unsigned char 
  4536 ;;  j               1    8[COMRAM] unsigned char 
  4537 ;;  old_D           1    5[COMRAM] unsigned char 
  4538 ;; Return value:  Size  Location     Type
  4539 ;;                  1    wreg      void 
  4540 ;; Registers used:
  4541 ;;		wreg, status,2, status,0, prodl, prodh
  4542 ;; Tracked objects:
  4543 ;;		On entry : 0/0
  4544 ;;		On exit  : 0/0
  4545 ;;		Unchanged: 0/0
  4546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4547 ;;      Params:         0       0       0       0       0       0       0
  4548 ;;      Locals:         5       0       0       0       0       0       0
  4549 ;;      Temps:          5       0       0       0       0       0       0
  4550 ;;      Totals:        10       0       0       0       0       0       0
  4551 ;;Total ram usage:       10 bytes
  4552 ;; Hardware stack levels used:    1
  4553 ;; This function calls:
  4554 ;;		Nothing
  4555 ;; This function is called by:
  4556 ;;		_titleScreen
  4557 ;;		_playerInput
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text12
  4562  006200                     __ptext12:
  4563                           	callstack 0
  4564  006200                     _kpDebounce:
  4565                           	callstack 29
  4566  006200                     
  4567                           ;keypad.c: 40:     unsigned char i, j;;keypad.c: 41:     static unsigned char tempo;;key
      +                          pad.c: 42:     static unsigned int valorNovo = 0x0000;;keypad.c: 43:     static unsigned
      +                           int valorAntigo = 0x0000;;keypad.c: 46:     unsigned char old_D;;keypad.c: 47:     old_
      +                          D = PORTD;
  4568  006200  CF83 F006          	movff	3971,kpDebounce@old_D	;volatile
  4569  006204                     
  4570                           ;keypad.c: 51:     TRISD |= 0x0f;
  4571  006204  0E0F               	movlw	15
  4572  006206  1295               	iorwf	149,f,c	;volatile
  4573  006208                     
  4574                           ;keypad.c: 53:     for (i = 0; i < 3; i++) {
  4575  006208  0E00               	movlw	0
  4576  00620A  6E0A               	movwf	kpDebounce@i^0,c
  4577  00620C                     l2697:
  4578                           
  4579                           ;keypad.c: 55:         TRISB &= 0xF8;
  4580  00620C  0EF8               	movlw	248
  4581  00620E  1693               	andwf	147,f,c	;volatile
  4582                           
  4583                           ;keypad.c: 57:         ((TRISB) |= (1<<(i)));
  4584  006210  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4585  006214  0E01               	movlw	1
  4586  006216  6E02               	movwf	(??_kpDebounce+1)^0,c
  4587  006218  2A01               	incf	??_kpDebounce^0,f,c
  4588  00621A  EF11  F031         	goto	u2324
  4589  00621E                     u2325:
  4590  00621E  90D8               	bcf	status,0,c
  4591  006220  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4592  006222                     u2324:
  4593  006222  2E01               	decfsz	??_kpDebounce^0,f,c
  4594  006224  EF0F  F031         	goto	u2325
  4595  006228  5002               	movf	(??_kpDebounce+1)^0,w,c
  4596  00622A  1293               	iorwf	147,f,c	;volatile
  4597                           
  4598                           ;keypad.c: 59:         PORTB |= 0x07;
  4599  00622C  0E07               	movlw	7
  4600  00622E  1281               	iorwf	129,f,c	;volatile
  4601                           
  4602                           ;keypad.c: 60:         ((PORTB) &= ~(1<<(i)));
  4603  006230  C00A  F001         	movff	kpDebounce@i,??_kpDebounce
  4604  006234  0E01               	movlw	1
  4605  006236  6E02               	movwf	(??_kpDebounce+1)^0,c
  4606  006238  2A01               	incf	??_kpDebounce^0,f,c
  4607  00623A  EF21  F031         	goto	u2334
  4608  00623E                     u2335:
  4609  00623E  90D8               	bcf	status,0,c
  4610  006240  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4611  006242                     u2334:
  4612  006242  2E01               	decfsz	??_kpDebounce^0,f,c
  4613  006244  EF1F  F031         	goto	u2335
  4614  006248  5002               	movf	(??_kpDebounce+1)^0,w,c
  4615  00624A  0AFF               	xorlw	255
  4616  00624C  1681               	andwf	129,f,c	;volatile
  4617  00624E                     
  4618                           ;keypad.c: 63:         for (int k = 0; k < 10; k++);
  4619  00624E  0E00               	movlw	0
  4620  006250  6E08               	movwf	(kpDebounce@k+1)^0,c
  4621  006252  0E00               	movlw	0
  4622  006254  6E07               	movwf	kpDebounce@k^0,c
  4623  006256                     l2705:
  4624  006256  4A07               	infsnz	kpDebounce@k^0,f,c
  4625  006258  2A08               	incf	(kpDebounce@k+1)^0,f,c
  4626  00625A  BE08               	btfsc	(kpDebounce@k+1)^0,7,c
  4627  00625C  EF39  F031         	goto	u2341
  4628  006260  5008               	movf	(kpDebounce@k+1)^0,w,c
  4629  006262  E109               	bnz	u2340
  4630  006264  0E0A               	movlw	10
  4631  006266  5C07               	subwf	kpDebounce@k^0,w,c
  4632  006268  A0D8               	btfss	status,0,c
  4633  00626A  EF39  F031         	goto	u2341
  4634  00626E  EF3B  F031         	goto	u2340
  4635  006272                     u2341:
  4636  006272  EF2B  F031         	goto	l2705
  4637  006276                     u2340:
  4638  006276                     
  4639                           ;keypad.c: 66:         for (j = 0; j < 4; j++) {
  4640  006276  0E00               	movlw	0
  4641  006278  6E09               	movwf	kpDebounce@j^0,c
  4642  00627A                     l2715:
  4643                           
  4644                           ;keypad.c: 67:             if (!((PORTD) & (1<<(j)))) {
  4645  00627A  C009  F001         	movff	kpDebounce@j,??_kpDebounce
  4646  00627E  0E01               	movlw	1
  4647  006280  6E02               	movwf	(??_kpDebounce+1)^0,c
  4648  006282  2A01               	incf	??_kpDebounce^0,f,c
  4649  006284  EF46  F031         	goto	u2354
  4650  006288                     u2355:
  4651  006288  90D8               	bcf	status,0,c
  4652  00628A  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4653  00628C                     u2354:
  4654  00628C  2E01               	decfsz	??_kpDebounce^0,f,c
  4655  00628E  EF44  F031         	goto	u2355
  4656  006292  5002               	movf	(??_kpDebounce+1)^0,w,c
  4657  006294  1483               	andwf	131,w,c	;volatile
  4658  006296  0900               	iorlw	0
  4659  006298  A4D8               	btfss	status,2,c
  4660  00629A  EF51  F031         	goto	u2361
  4661  00629E  EF53  F031         	goto	u2360
  4662  0062A2                     u2361:
  4663  0062A2  EF6C  F031         	goto	l2719
  4664  0062A6                     u2360:
  4665  0062A6                     
  4666                           ;keypad.c: 68:                 ((valorNovo) |= (1<<((i * 4) + j)));
  4667  0062A6  500A               	movf	kpDebounce@i^0,w,c
  4668  0062A8  0D04               	mullw	4
  4669  0062AA  50F3               	movf	243,w,c
  4670  0062AC  2409               	addwf	kpDebounce@j^0,w,c
  4671  0062AE  6E01               	movwf	??_kpDebounce^0,c
  4672  0062B0  0E01               	movlw	1
  4673  0062B2  6E02               	movwf	(??_kpDebounce+1)^0,c
  4674  0062B4  0E00               	movlw	0
  4675  0062B6  6E03               	movwf	(??_kpDebounce+2)^0,c
  4676  0062B8  2A01               	incf	??_kpDebounce^0,f,c
  4677  0062BA  EF62  F031         	goto	u2374
  4678  0062BE                     u2375:
  4679  0062BE  90D8               	bcf	status,0,c
  4680  0062C0  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4681  0062C2  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4682  0062C4                     u2374:
  4683  0062C4  2E01               	decfsz	??_kpDebounce^0,f,c
  4684  0062C6  EF5F  F031         	goto	u2375
  4685  0062CA  5002               	movf	(??_kpDebounce+1)^0,w,c
  4686  0062CC  0100               	movlb	0	; () banked
  4687  0062CE  13D3               	iorwf	kpDebounce@valorNovo& (0+255),f,b
  4688  0062D0  5003               	movf	(??_kpDebounce+2)^0,w,c
  4689  0062D2  13D4               	iorwf	(kpDebounce@valorNovo+1)& (0+255),f,b
  4690                           
  4691                           ;keypad.c: 69:             } else {
  4692  0062D4  EF87  F031         	goto	l2721
  4693  0062D8                     l2719:
  4694                           
  4695                           ;keypad.c: 70:                 ((valorNovo) &= ~(1<<((i * 4) + j)));
  4696  0062D8  500A               	movf	kpDebounce@i^0,w,c
  4697  0062DA  0D04               	mullw	4
  4698  0062DC  50F3               	movf	243,w,c
  4699  0062DE  2409               	addwf	kpDebounce@j^0,w,c
  4700  0062E0  6E01               	movwf	??_kpDebounce^0,c
  4701  0062E2  0E01               	movlw	1
  4702  0062E4  6E02               	movwf	(??_kpDebounce+1)^0,c
  4703  0062E6  0E00               	movlw	0
  4704  0062E8  6E03               	movwf	(??_kpDebounce+2)^0,c
  4705  0062EA  2A01               	incf	??_kpDebounce^0,f,c
  4706  0062EC  EF7B  F031         	goto	u2384
  4707  0062F0                     u2385:
  4708  0062F0  90D8               	bcf	status,0,c
  4709  0062F2  3602               	rlcf	(??_kpDebounce+1)^0,f,c
  4710  0062F4  3603               	rlcf	(??_kpDebounce+2)^0,f,c
  4711  0062F6                     u2384:
  4712  0062F6  2E01               	decfsz	??_kpDebounce^0,f,c
  4713  0062F8  EF78  F031         	goto	u2385
  4714  0062FC  1C02               	comf	(??_kpDebounce+1)^0,w,c
  4715  0062FE  6E04               	movwf	(??_kpDebounce+3)^0,c
  4716  006300  1C03               	comf	(??_kpDebounce+2)^0,w,c
  4717  006302  6E05               	movwf	(??_kpDebounce+4)^0,c
  4718  006304  5004               	movf	(??_kpDebounce+3)^0,w,c
  4719  006306  0100               	movlb	0	; () banked
  4720  006308  17D3               	andwf	kpDebounce@valorNovo& (0+255),f,b
  4721  00630A  5005               	movf	(??_kpDebounce+4)^0,w,c
  4722  00630C  17D4               	andwf	(kpDebounce@valorNovo+1)& (0+255),f,b
  4723  00630E                     l2721:
  4724                           
  4725                           ; BSR set to: 0
  4726                           ;keypad.c: 72:         }
  4727  00630E  2A09               	incf	kpDebounce@j^0,f,c
  4728  006310                     
  4729                           ; BSR set to: 0
  4730  006310  0E03               	movlw	3
  4731  006312  6409               	cpfsgt	kpDebounce@j^0,c
  4732  006314  EF8E  F031         	goto	u2391
  4733  006318  EF90  F031         	goto	u2390
  4734  00631C                     u2391:
  4735  00631C  EF3D  F031         	goto	l2715
  4736  006320                     u2390:
  4737  006320                     
  4738                           ; BSR set to: 0
  4739                           ;keypad.c: 73:     }
  4740  006320  2A0A               	incf	kpDebounce@i^0,f,c
  4741  006322                     
  4742                           ; BSR set to: 0
  4743  006322  0E02               	movlw	2
  4744  006324  640A               	cpfsgt	kpDebounce@i^0,c
  4745  006326  EF97  F031         	goto	u2401
  4746  00632A  EF99  F031         	goto	u2400
  4747  00632E                     u2401:
  4748  00632E  EF06  F031         	goto	l2697
  4749  006332                     u2400:
  4750  006332                     
  4751                           ; BSR set to: 0
  4752                           ;keypad.c: 74:     if (valorAntigo == valorNovo) {
  4753  006332  51D3               	movf	kpDebounce@valorNovo& (0+255),w,b
  4754  006334  19D1               	xorwf	kpDebounce@valorAntigo& (0+255),w,b
  4755  006336  E107               	bnz	u2411
  4756  006338  51D4               	movf	(kpDebounce@valorNovo+1)& (0+255),w,b
  4757  00633A  19D2               	xorwf	(kpDebounce@valorAntigo+1)& (0+255),w,b
  4758  00633C  A4D8               	btfss	status,2,c
  4759  00633E  EFA3  F031         	goto	u2411
  4760  006342  EFA5  F031         	goto	u2410
  4761  006346                     u2411:
  4762  006346  EFA8  F031         	goto	l2733
  4763  00634A                     u2410:
  4764  00634A                     
  4765                           ; BSR set to: 0
  4766                           ;keypad.c: 75:         tempo--;
  4767  00634A  067C               	decf	kpDebounce@tempo^0,f,c
  4768                           
  4769                           ;keypad.c: 76:     } else {
  4770  00634C  EFAE  F031         	goto	l107
  4771  006350                     l2733:
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;keypad.c: 77:         tempo = 10;
  4775  006350  0E0A               	movlw	10
  4776  006352  6E7C               	movwf	kpDebounce@tempo^0,c
  4777  006354                     
  4778                           ; BSR set to: 0
  4779                           ;keypad.c: 78:         valorAntigo = valorNovo;
  4780  006354  C0D3  F0D1         	movff	kpDebounce@valorNovo,kpDebounce@valorAntigo
  4781  006358  C0D4  F0D2         	movff	kpDebounce@valorNovo+1,kpDebounce@valorAntigo+1
  4782  00635C                     l107:
  4783                           
  4784                           ; BSR set to: 0
  4785                           ;keypad.c: 80:     if (tempo == 0) {
  4786  00635C  507C               	movf	kpDebounce@tempo^0,w,c
  4787  00635E  A4D8               	btfss	status,2,c
  4788  006360  EFB4  F031         	goto	u2421
  4789  006364  EFB6  F031         	goto	u2420
  4790  006368                     u2421:
  4791  006368  EFBA  F031         	goto	l108
  4792  00636C                     u2420:
  4793  00636C                     
  4794                           ; BSR set to: 0
  4795                           ;keypad.c: 81:         valor = valorAntigo;
  4796  00636C  C0D1  F0D5         	movff	kpDebounce@valorAntigo,_valor
  4797  006370  C0D2  F0D6         	movff	kpDebounce@valorAntigo+1,_valor+1
  4798  006374                     l108:
  4799                           
  4800                           ; BSR set to: 0
  4801                           ;keypad.c: 83:     PORTD = old_D;
  4802  006374  C006  FF83         	movff	kpDebounce@old_D,3971	;volatile
  4803  006378                     
  4804                           ; BSR set to: 0
  4805                           ;keypad.c: 84:     TRISD = 0x00;
  4806  006378  0E00               	movlw	0
  4807  00637A  6E95               	movwf	149,c	;volatile
  4808  00637C                     
  4809                           ; BSR set to: 0
  4810  00637C  0012               	return		;funcret
  4811  00637E                     __end_of_kpDebounce:
  4812                           	callstack 0
  4813                           
  4814 ;; *************** function _lcdInit *****************
  4815 ;; Defined at:
  4816 ;;		line 95 in file "lcd.c"
  4817 ;; Parameters:    Size  Location     Type
  4818 ;;		None
  4819 ;; Auto vars:     Size  Location     Type
  4820 ;;		None
  4821 ;; Return value:  Size  Location     Type
  4822 ;;                  1    wreg      void 
  4823 ;; Registers used:
  4824 ;;		wreg, status,2, status,0, cstack
  4825 ;; Tracked objects:
  4826 ;;		On entry : 0/0
  4827 ;;		On exit  : 0/0
  4828 ;;		Unchanged: 0/0
  4829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4830 ;;      Params:         0       0       0       0       0       0       0
  4831 ;;      Locals:         0       0       0       0       0       0       0
  4832 ;;      Temps:          0       0       0       0       0       0       0
  4833 ;;      Totals:         0       0       0       0       0       0       0
  4834 ;;Total ram usage:        0 bytes
  4835 ;; Hardware stack levels used:    1
  4836 ;; Hardware stack levels required when called:    3
  4837 ;; This function calls:
  4838 ;;		_Delay2ms
  4839 ;;		_lcdCommand
  4840 ;;		_pinMode
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text13
  4847  005B66                     __ptext13:
  4848                           	callstack 0
  4849  005B66                     _lcdInit:
  4850                           	callstack 27
  4851  005B66                     
  4852                           ;lcd.c: 97:     pinMode(PIN_E2, 0);
  4853  005B66  0E00               	movlw	0
  4854  005B68  6E02               	movwf	(pinMode@pin+1)^0,c
  4855  005B6A  0E22               	movlw	34
  4856  005B6C  6E01               	movwf	pinMode@pin^0,c
  4857  005B6E  0E00               	movlw	0
  4858  005B70  6E04               	movwf	(pinMode@type+1)^0,c
  4859  005B72  0E00               	movlw	0
  4860  005B74  6E03               	movwf	pinMode@type^0,c
  4861  005B76  ECF1  F033         	call	_pinMode	;wreg free
  4862                           
  4863                           ;lcd.c: 98:     pinMode(PIN_E1, 0);
  4864  005B7A  0E00               	movlw	0
  4865  005B7C  6E02               	movwf	(pinMode@pin+1)^0,c
  4866  005B7E  0E21               	movlw	33
  4867  005B80  6E01               	movwf	pinMode@pin^0,c
  4868  005B82  0E00               	movlw	0
  4869  005B84  6E04               	movwf	(pinMode@type+1)^0,c
  4870  005B86  0E00               	movlw	0
  4871  005B88  6E03               	movwf	pinMode@type^0,c
  4872  005B8A  ECF1  F033         	call	_pinMode	;wreg free
  4873  005B8E                     
  4874                           ;lcd.c: 99:     TRISD = 0x00;
  4875  005B8E  0E00               	movlw	0
  4876  005B90  6E95               	movwf	149,c	;volatile
  4877  005B92                     
  4878                           ;lcd.c: 102:     Delay2ms();
  4879  005B92  EC45  F02B         	call	_Delay2ms	;wreg free
  4880  005B96                     
  4881                           ;lcd.c: 103:     Delay2ms();
  4882  005B96  EC45  F02B         	call	_Delay2ms	;wreg free
  4883  005B9A                     
  4884                           ;lcd.c: 104:     Delay2ms();
  4885  005B9A  EC45  F02B         	call	_Delay2ms	;wreg free
  4886  005B9E                     
  4887                           ;lcd.c: 105:     Delay2ms();
  4888  005B9E  EC45  F02B         	call	_Delay2ms	;wreg free
  4889  005BA2                     
  4890                           ;lcd.c: 106:     Delay2ms();
  4891  005BA2  EC45  F02B         	call	_Delay2ms	;wreg free
  4892  005BA6                     
  4893                           ;lcd.c: 108:     lcdCommand(0x34);
  4894  005BA6  0E34               	movlw	52
  4895  005BA8  EC2B  F02E         	call	_lcdCommand
  4896  005BAC                     
  4897                           ;lcd.c: 109:     Delay2ms();
  4898  005BAC  EC45  F02B         	call	_Delay2ms	;wreg free
  4899  005BB0                     
  4900                           ;lcd.c: 110:     Delay2ms();
  4901  005BB0  EC45  F02B         	call	_Delay2ms	;wreg free
  4902  005BB4                     
  4903                           ;lcd.c: 111:     lcdCommand(0x34);
  4904  005BB4  0E34               	movlw	52
  4905  005BB6  EC2B  F02E         	call	_lcdCommand
  4906  005BBA                     
  4907                           ;lcd.c: 112:     Delay2ms();
  4908  005BBA  EC45  F02B         	call	_Delay2ms	;wreg free
  4909  005BBE                     
  4910                           ;lcd.c: 113:     lcdCommand(0x34);
  4911  005BBE  0E34               	movlw	52
  4912  005BC0  EC2B  F02E         	call	_lcdCommand
  4913  005BC4                     
  4914                           ;lcd.c: 115:     lcdCommand(0x34);
  4915  005BC4  0E34               	movlw	52
  4916  005BC6  EC2B  F02E         	call	_lcdCommand
  4917  005BCA                     
  4918                           ;lcd.c: 117:     lcdCommand(0x06);
  4919  005BCA  0E06               	movlw	6
  4920  005BCC  EC2B  F02E         	call	_lcdCommand
  4921  005BD0                     
  4922                           ;lcd.c: 120:     lcdCommand(0x0F);
  4923  005BD0  0E0F               	movlw	15
  4924  005BD2  EC2B  F02E         	call	_lcdCommand
  4925  005BD6                     
  4926                           ;lcd.c: 121:     lcdCommand(0x01);
  4927  005BD6  0E01               	movlw	1
  4928  005BD8  EC2B  F02E         	call	_lcdCommand
  4929  005BDC  0012               	return		;funcret
  4930  005BDE                     __end_of_lcdInit:
  4931                           	callstack 0
  4932                           
  4933 ;; *************** function _pinMode *****************
  4934 ;; Defined at:
  4935 ;;		line 54 in file "io.c"
  4936 ;; Parameters:    Size  Location     Type
  4937 ;;  pin             2    0[COMRAM] int 
  4938 ;;  type            2    2[COMRAM] int 
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, status,2, status,0
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4950 ;;      Params:         4       0       0       0       0       0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0
  4952 ;;      Temps:          2       0       0       0       0       0       0
  4953 ;;      Totals:         6       0       0       0       0       0       0
  4954 ;;Total ram usage:        6 bytes
  4955 ;; Hardware stack levels used:    1
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_lcdInit
  4960 ;;		_ssdInit
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text14
  4965  0067E2                     __ptext14:
  4966                           	callstack 0
  4967  0067E2                     _pinMode:
  4968                           	callstack 29
  4969  0067E2                     
  4970                           ;io.c: 56:     if(pin <8){
  4971  0067E2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  4972  0067E4  EFFF  F033         	goto	u2120
  4973  0067E8  5002               	movf	(pinMode@pin+1)^0,w,c
  4974  0067EA  E107               	bnz	u2121
  4975  0067EC  0E08               	movlw	8
  4976  0067EE  5C01               	subwf	pinMode@pin^0,w,c
  4977  0067F0  B0D8               	btfsc	status,0,c
  4978  0067F2  EFFD  F033         	goto	u2121
  4979  0067F6  EFFF  F033         	goto	u2120
  4980  0067FA                     u2121:
  4981  0067FA  EF29  F034         	goto	l2653
  4982  0067FE                     u2120:
  4983  0067FE                     
  4984                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  4985  0067FE  5003               	movf	pinMode@type^0,w,c
  4986  006800  1004               	iorwf	(pinMode@type+1)^0,w,c
  4987  006802  B4D8               	btfsc	status,2,c
  4988  006804  EF06  F034         	goto	u2131
  4989  006808  EF08  F034         	goto	u2130
  4990  00680C                     u2131:
  4991  00680C  EF18  F034         	goto	l2651
  4992  006810                     u2130:
  4993  006810  C001  F005         	movff	pinMode@pin,??_pinMode
  4994  006814  0E01               	movlw	1
  4995  006816  6E06               	movwf	(??_pinMode+1)^0,c
  4996  006818  2A05               	incf	??_pinMode^0,f,c
  4997  00681A  EF11  F034         	goto	u2144
  4998  00681E                     u2145:
  4999  00681E  90D8               	bcf	status,0,c
  5000  006820  3606               	rlcf	(??_pinMode+1)^0,f,c
  5001  006822                     u2144:
  5002  006822  2E05               	decfsz	??_pinMode^0,f,c
  5003  006824  EF0F  F034         	goto	u2145
  5004  006828  5006               	movf	(??_pinMode+1)^0,w,c
  5005  00682A  1292               	iorwf	146,f,c	;volatile
  5006  00682C  EF17  F035         	goto	l76
  5007  006830                     l2651:
  5008  006830  C001  F005         	movff	pinMode@pin,??_pinMode
  5009  006834  0E01               	movlw	1
  5010  006836  6E06               	movwf	(??_pinMode+1)^0,c
  5011  006838  2A05               	incf	??_pinMode^0,f,c
  5012  00683A  EF21  F034         	goto	u2154
  5013  00683E                     u2155:
  5014  00683E  90D8               	bcf	status,0,c
  5015  006840  3606               	rlcf	(??_pinMode+1)^0,f,c
  5016  006842                     u2154:
  5017  006842  2E05               	decfsz	??_pinMode^0,f,c
  5018  006844  EF1F  F034         	goto	u2155
  5019  006848  5006               	movf	(??_pinMode+1)^0,w,c
  5020  00684A  0AFF               	xorlw	255
  5021  00684C  1692               	andwf	146,f,c	;volatile
  5022  00684E  EF17  F035         	goto	l76
  5023  006852                     l2653:
  5024  006852  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5025  006854  EF37  F034         	goto	u2160
  5026  006858  5002               	movf	(pinMode@pin+1)^0,w,c
  5027  00685A  E107               	bnz	u2161
  5028  00685C  0E10               	movlw	16
  5029  00685E  5C01               	subwf	pinMode@pin^0,w,c
  5030  006860  B0D8               	btfsc	status,0,c
  5031  006862  EF35  F034         	goto	u2161
  5032  006866  EF37  F034         	goto	u2160
  5033  00686A                     u2161:
  5034  00686A  EF65  F034         	goto	l2661
  5035  00686E                     u2160:
  5036  00686E                     
  5037                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5038  00686E  5003               	movf	pinMode@type^0,w,c
  5039  006870  1004               	iorwf	(pinMode@type+1)^0,w,c
  5040  006872  B4D8               	btfsc	status,2,c
  5041  006874  EF3E  F034         	goto	u2171
  5042  006878  EF40  F034         	goto	u2170
  5043  00687C                     u2171:
  5044  00687C  EF52  F034         	goto	l2659
  5045  006880                     u2170:
  5046  006880  C001  F005         	movff	pinMode@pin,??_pinMode
  5047  006884  0EF8               	movlw	-8
  5048  006886  2605               	addwf	??_pinMode^0,f,c
  5049  006888  0E01               	movlw	1
  5050  00688A  6E06               	movwf	(??_pinMode+1)^0,c
  5051  00688C  2A05               	incf	??_pinMode^0,f,c
  5052  00688E  EF4B  F034         	goto	u2184
  5053  006892                     u2185:
  5054  006892  90D8               	bcf	status,0,c
  5055  006894  3606               	rlcf	(??_pinMode+1)^0,f,c
  5056  006896                     u2184:
  5057  006896  2E05               	decfsz	??_pinMode^0,f,c
  5058  006898  EF49  F034         	goto	u2185
  5059  00689C  5006               	movf	(??_pinMode+1)^0,w,c
  5060  00689E  1293               	iorwf	147,f,c	;volatile
  5061  0068A0  EF17  F035         	goto	l76
  5062  0068A4                     l2659:
  5063  0068A4  C001  F005         	movff	pinMode@pin,??_pinMode
  5064  0068A8  0EF8               	movlw	-8
  5065  0068AA  2605               	addwf	??_pinMode^0,f,c
  5066  0068AC  0E01               	movlw	1
  5067  0068AE  6E06               	movwf	(??_pinMode+1)^0,c
  5068  0068B0  2A05               	incf	??_pinMode^0,f,c
  5069  0068B2  EF5D  F034         	goto	u2194
  5070  0068B6                     u2195:
  5071  0068B6  90D8               	bcf	status,0,c
  5072  0068B8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5073  0068BA                     u2194:
  5074  0068BA  2E05               	decfsz	??_pinMode^0,f,c
  5075  0068BC  EF5B  F034         	goto	u2195
  5076  0068C0  5006               	movf	(??_pinMode+1)^0,w,c
  5077  0068C2  0AFF               	xorlw	255
  5078  0068C4  1693               	andwf	147,f,c	;volatile
  5079  0068C6  EF17  F035         	goto	l76
  5080  0068CA                     l2661:
  5081  0068CA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5082  0068CC  EF73  F034         	goto	u2200
  5083  0068D0  5002               	movf	(pinMode@pin+1)^0,w,c
  5084  0068D2  E107               	bnz	u2201
  5085  0068D4  0E18               	movlw	24
  5086  0068D6  5C01               	subwf	pinMode@pin^0,w,c
  5087  0068D8  B0D8               	btfsc	status,0,c
  5088  0068DA  EF71  F034         	goto	u2201
  5089  0068DE  EF73  F034         	goto	u2200
  5090  0068E2                     u2201:
  5091  0068E2  EFA1  F034         	goto	l2669
  5092  0068E6                     u2200:
  5093  0068E6                     
  5094                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5095  0068E6  5003               	movf	pinMode@type^0,w,c
  5096  0068E8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5097  0068EA  B4D8               	btfsc	status,2,c
  5098  0068EC  EF7A  F034         	goto	u2211
  5099  0068F0  EF7C  F034         	goto	u2210
  5100  0068F4                     u2211:
  5101  0068F4  EF8E  F034         	goto	l2667
  5102  0068F8                     u2210:
  5103  0068F8  C001  F005         	movff	pinMode@pin,??_pinMode
  5104  0068FC  0EF0               	movlw	-16
  5105  0068FE  2605               	addwf	??_pinMode^0,f,c
  5106  006900  0E01               	movlw	1
  5107  006902  6E06               	movwf	(??_pinMode+1)^0,c
  5108  006904  2A05               	incf	??_pinMode^0,f,c
  5109  006906  EF87  F034         	goto	u2224
  5110  00690A                     u2225:
  5111  00690A  90D8               	bcf	status,0,c
  5112  00690C  3606               	rlcf	(??_pinMode+1)^0,f,c
  5113  00690E                     u2224:
  5114  00690E  2E05               	decfsz	??_pinMode^0,f,c
  5115  006910  EF85  F034         	goto	u2225
  5116  006914  5006               	movf	(??_pinMode+1)^0,w,c
  5117  006916  1294               	iorwf	148,f,c	;volatile
  5118  006918  EF17  F035         	goto	l76
  5119  00691C                     l2667:
  5120  00691C  C001  F005         	movff	pinMode@pin,??_pinMode
  5121  006920  0EF0               	movlw	-16
  5122  006922  2605               	addwf	??_pinMode^0,f,c
  5123  006924  0E01               	movlw	1
  5124  006926  6E06               	movwf	(??_pinMode+1)^0,c
  5125  006928  2A05               	incf	??_pinMode^0,f,c
  5126  00692A  EF99  F034         	goto	u2234
  5127  00692E                     u2235:
  5128  00692E  90D8               	bcf	status,0,c
  5129  006930  3606               	rlcf	(??_pinMode+1)^0,f,c
  5130  006932                     u2234:
  5131  006932  2E05               	decfsz	??_pinMode^0,f,c
  5132  006934  EF97  F034         	goto	u2235
  5133  006938  5006               	movf	(??_pinMode+1)^0,w,c
  5134  00693A  0AFF               	xorlw	255
  5135  00693C  1694               	andwf	148,f,c	;volatile
  5136  00693E  EF17  F035         	goto	l76
  5137  006942                     l2669:
  5138  006942  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5139  006944  EFAF  F034         	goto	u2240
  5140  006948  5002               	movf	(pinMode@pin+1)^0,w,c
  5141  00694A  E107               	bnz	u2241
  5142  00694C  0E20               	movlw	32
  5143  00694E  5C01               	subwf	pinMode@pin^0,w,c
  5144  006950  B0D8               	btfsc	status,0,c
  5145  006952  EFAD  F034         	goto	u2241
  5146  006956  EFAF  F034         	goto	u2240
  5147  00695A                     u2241:
  5148  00695A  EFDD  F034         	goto	l2677
  5149  00695E                     u2240:
  5150  00695E                     
  5151                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5152  00695E  5003               	movf	pinMode@type^0,w,c
  5153  006960  1004               	iorwf	(pinMode@type+1)^0,w,c
  5154  006962  B4D8               	btfsc	status,2,c
  5155  006964  EFB6  F034         	goto	u2251
  5156  006968  EFB8  F034         	goto	u2250
  5157  00696C                     u2251:
  5158  00696C  EFCA  F034         	goto	l2675
  5159  006970                     u2250:
  5160  006970  C001  F005         	movff	pinMode@pin,??_pinMode
  5161  006974  0EE8               	movlw	-24
  5162  006976  2605               	addwf	??_pinMode^0,f,c
  5163  006978  0E01               	movlw	1
  5164  00697A  6E06               	movwf	(??_pinMode+1)^0,c
  5165  00697C  2A05               	incf	??_pinMode^0,f,c
  5166  00697E  EFC3  F034         	goto	u2264
  5167  006982                     u2265:
  5168  006982  90D8               	bcf	status,0,c
  5169  006984  3606               	rlcf	(??_pinMode+1)^0,f,c
  5170  006986                     u2264:
  5171  006986  2E05               	decfsz	??_pinMode^0,f,c
  5172  006988  EFC1  F034         	goto	u2265
  5173  00698C  5006               	movf	(??_pinMode+1)^0,w,c
  5174  00698E  1295               	iorwf	149,f,c	;volatile
  5175  006990  EF17  F035         	goto	l76
  5176  006994                     l2675:
  5177  006994  C001  F005         	movff	pinMode@pin,??_pinMode
  5178  006998  0EE8               	movlw	-24
  5179  00699A  2605               	addwf	??_pinMode^0,f,c
  5180  00699C  0E01               	movlw	1
  5181  00699E  6E06               	movwf	(??_pinMode+1)^0,c
  5182  0069A0  2A05               	incf	??_pinMode^0,f,c
  5183  0069A2  EFD5  F034         	goto	u2274
  5184  0069A6                     u2275:
  5185  0069A6  90D8               	bcf	status,0,c
  5186  0069A8  3606               	rlcf	(??_pinMode+1)^0,f,c
  5187  0069AA                     u2274:
  5188  0069AA  2E05               	decfsz	??_pinMode^0,f,c
  5189  0069AC  EFD3  F034         	goto	u2275
  5190  0069B0  5006               	movf	(??_pinMode+1)^0,w,c
  5191  0069B2  0AFF               	xorlw	255
  5192  0069B4  1695               	andwf	149,f,c	;volatile
  5193  0069B6  EF17  F035         	goto	l76
  5194  0069BA                     l2677:
  5195  0069BA  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5196  0069BC  EFEB  F034         	goto	u2280
  5197  0069C0  5002               	movf	(pinMode@pin+1)^0,w,c
  5198  0069C2  E107               	bnz	u2281
  5199  0069C4  0E28               	movlw	40
  5200  0069C6  5C01               	subwf	pinMode@pin^0,w,c
  5201  0069C8  B0D8               	btfsc	status,0,c
  5202  0069CA  EFE9  F034         	goto	u2281
  5203  0069CE  EFEB  F034         	goto	u2280
  5204  0069D2                     u2281:
  5205  0069D2  EF17  F035         	goto	l76
  5206  0069D6                     u2280:
  5207  0069D6                     
  5208                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5209  0069D6  5003               	movf	pinMode@type^0,w,c
  5210  0069D8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5211  0069DA  B4D8               	btfsc	status,2,c
  5212  0069DC  EFF2  F034         	goto	u2291
  5213  0069E0  EFF4  F034         	goto	u2290
  5214  0069E4                     u2291:
  5215  0069E4  EF06  F035         	goto	l2683
  5216  0069E8                     u2290:
  5217  0069E8  C001  F005         	movff	pinMode@pin,??_pinMode
  5218  0069EC  0EE0               	movlw	-32
  5219  0069EE  2605               	addwf	??_pinMode^0,f,c
  5220  0069F0  0E01               	movlw	1
  5221  0069F2  6E06               	movwf	(??_pinMode+1)^0,c
  5222  0069F4  2A05               	incf	??_pinMode^0,f,c
  5223  0069F6  EFFF  F034         	goto	u2304
  5224  0069FA                     u2305:
  5225  0069FA  90D8               	bcf	status,0,c
  5226  0069FC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5227  0069FE                     u2304:
  5228  0069FE  2E05               	decfsz	??_pinMode^0,f,c
  5229  006A00  EFFD  F034         	goto	u2305
  5230  006A04  5006               	movf	(??_pinMode+1)^0,w,c
  5231  006A06  1296               	iorwf	150,f,c	;volatile
  5232  006A08  EF17  F035         	goto	l76
  5233  006A0C                     l2683:
  5234  006A0C  C001  F005         	movff	pinMode@pin,??_pinMode
  5235  006A10  0EE0               	movlw	-32
  5236  006A12  2605               	addwf	??_pinMode^0,f,c
  5237  006A14  0E01               	movlw	1
  5238  006A16  6E06               	movwf	(??_pinMode+1)^0,c
  5239  006A18  2A05               	incf	??_pinMode^0,f,c
  5240  006A1A  EF11  F035         	goto	u2314
  5241  006A1E                     u2315:
  5242  006A1E  90D8               	bcf	status,0,c
  5243  006A20  3606               	rlcf	(??_pinMode+1)^0,f,c
  5244  006A22                     u2314:
  5245  006A22  2E05               	decfsz	??_pinMode^0,f,c
  5246  006A24  EF0F  F035         	goto	u2315
  5247  006A28  5006               	movf	(??_pinMode+1)^0,w,c
  5248  006A2A  0AFF               	xorlw	255
  5249  006A2C  1696               	andwf	150,f,c	;volatile
  5250  006A2E                     l76:
  5251  006A2E  0012               	return		;funcret
  5252  006A30                     __end_of_pinMode:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function _kpInit *****************
  5256 ;; Defined at:
  5257 ;;		line 87 in file "keypad.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, status,2, status,0
  5266 ;; Tracked objects:
  5267 ;;		On entry : 0/0
  5268 ;;		On exit  : 0/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5271 ;;      Params:         0       0       0       0       0       0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0
  5274 ;;      Totals:         0       0       0       0       0       0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;; This function uses a non-reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text15
  5285  00565E                     __ptext15:
  5286                           	callstack 0
  5287  00565E                     _kpInit:
  5288                           	callstack 30
  5289  00565E                     
  5290                           ;keypad.c: 89:     TRISB &= 0x07;
  5291  00565E  0E07               	movlw	7
  5292  005660  1693               	andwf	147,f,c	;volatile
  5293                           
  5294                           ;keypad.c: 91:     TRISD |= 0x0f;
  5295  005662  0E0F               	movlw	15
  5296  005664  1295               	iorwf	149,f,c	;volatile
  5297  005666  0012               	return		;funcret
  5298  005668                     __end_of_kpInit:
  5299                           	callstack 0
  5300                           
  5301 ;; *************** function _gameLogic *****************
  5302 ;; Defined at:
  5303 ;;		line 184 in file "main.c"
  5304 ;; Parameters:    Size  Location     Type
  5305 ;;		None
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;		None
  5308 ;; Return value:  Size  Location     Type
  5309 ;;                  1    wreg      void 
  5310 ;; Registers used:
  5311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5312 ;; Tracked objects:
  5313 ;;		On entry : 0/0
  5314 ;;		On exit  : 0/0
  5315 ;;		Unchanged: 0/0
  5316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5317 ;;      Params:         0       0       0       0       0       0       0
  5318 ;;      Locals:         0       0       0       0       0       0       0
  5319 ;;      Temps:          2       0       0       0       0       0       0
  5320 ;;      Totals:         2       0       0       0       0       0       0
  5321 ;;Total ram usage:        2 bytes
  5322 ;; Hardware stack levels used:    1
  5323 ;; Hardware stack levels required when called:    5
  5324 ;; This function calls:
  5325 ;;		___awmod
  5326 ;;		___wmul
  5327 ;;		_gameOver
  5328 ;;		_rand
  5329 ;;		_setupLevel
  5330 ;;		_youWin
  5331 ;; This function is called by:
  5332 ;;		_main
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text16
  5337  006A30                     __ptext16:
  5338                           	callstack 0
  5339  006A30                     _gameLogic:
  5340                           	callstack 25
  5341  006A30                     
  5342                           ;main.c: 185:     if (player.projectileAlive) {
  5343  006A30  0100               	movlb	0	; () banked
  5344  006A32  51C1               	movf	(_player+1)& (0+255),w,b
  5345  006A34  B4D8               	btfsc	status,2,c
  5346  006A36  EF1F  F035         	goto	u3071
  5347  006A3A  EF21  F035         	goto	u3070
  5348  006A3E                     u3071:
  5349  006A3E  EF91  F035         	goto	l3493
  5350  006A42                     u3070:
  5351  006A42                     
  5352                           ; BSR set to: 0
  5353                           ;main.c: 186:         if (player.projY == 0) {
  5354  006A42  51C9               	movf	(_player+9)& (0+255),w,b
  5355  006A44  11CA               	iorwf	(_player+10)& (0+255),w,b
  5356  006A46  A4D8               	btfss	status,2,c
  5357  006A48  EF28  F035         	goto	u3081
  5358  006A4C  EF2A  F035         	goto	u3080
  5359  006A50                     u3081:
  5360  006A50  EF2E  F035         	goto	l3471
  5361  006A54                     u3080:
  5362  006A54                     
  5363                           ; BSR set to: 0
  5364                           ;main.c: 187:             player.projectileAlive = 0;
  5365  006A54  0E00               	movlw	0
  5366  006A56  6FC1               	movwf	(_player+1)& (0+255),b
  5367                           
  5368                           ;main.c: 188:         } else {
  5369  006A58  EF31  F035         	goto	l3473
  5370  006A5C                     l3471:
  5371                           
  5372                           ; BSR set to: 0
  5373                           ;main.c: 189:             player.projY -= 1;
  5374  006A5C  07C9               	decf	(_player+9)& (0+255),f,b
  5375  006A5E  A0D8               	btfss	status,0,c
  5376  006A60  07CA               	decf	(_player+10)& (0+255),f,b
  5377  006A62                     l3473:
  5378                           
  5379                           ; BSR set to: 0
  5380                           ;main.c: 192:         for (i = 0; i < 16; i++) {
  5381  006A62  0E00               	movlw	0
  5382  006A64  6E7D               	movwf	_i^0,c
  5383  006A66                     l3475:
  5384  006A66  0E0F               	movlw	15
  5385  006A68  647D               	cpfsgt	_i^0,c
  5386  006A6A  EF39  F035         	goto	u3091
  5387  006A6E  EF3B  F035         	goto	u3090
  5388  006A72                     u3091:
  5389  006A72  EF3D  F035         	goto	l3479
  5390  006A76                     u3090:
  5391  006A76  EF91  F035         	goto	l3493
  5392  006A7A                     l3479:
  5393                           
  5394                           ;main.c: 193:             if (player.projX == aliens[i].x && player.projY == aliens[i].y
      +                           && aliens[i].isAlive) {
  5395  006A7A  507D               	movf	_i^0,w,c
  5396  006A7C  0D0B               	mullw	11
  5397  006A7E  0E03               	movlw	low (_aliens+3)
  5398  006A80  24F3               	addwf	243,w,c
  5399  006A82  6ED9               	movwf	fsr2l,c
  5400  006A84  0E01               	movlw	high (_aliens+3)
  5401  006A86  20F4               	addwfc	prodh,w,c
  5402  006A88  6EDA               	movwf	fsr2h,c
  5403  006A8A  50DE               	movf	postinc2,w,c
  5404  006A8C  0100               	movlb	0	; () banked
  5405  006A8E  19C7               	xorwf	(_player+7)& (0+255),w,b
  5406  006A90  E107               	bnz	u3101
  5407  006A92  50DE               	movf	postinc2,w,c
  5408  006A94  19C8               	xorwf	(_player+8)& (0+255),w,b
  5409  006A96  A4D8               	btfss	status,2,c
  5410  006A98  EF50  F035         	goto	u3101
  5411  006A9C  EF52  F035         	goto	u3100
  5412  006AA0                     u3101:
  5413  006AA0  EF8E  F035         	goto	l3489
  5414  006AA4                     u3100:
  5415  006AA4                     
  5416                           ; BSR set to: 0
  5417  006AA4  507D               	movf	_i^0,w,c
  5418  006AA6  0D0B               	mullw	11
  5419  006AA8  0E05               	movlw	low (_aliens+5)
  5420  006AAA  24F3               	addwf	243,w,c
  5421  006AAC  6ED9               	movwf	fsr2l,c
  5422  006AAE  0E01               	movlw	high (_aliens+5)
  5423  006AB0  20F4               	addwfc	prodh,w,c
  5424  006AB2  6EDA               	movwf	fsr2h,c
  5425  006AB4  50DE               	movf	postinc2,w,c
  5426  006AB6  19C9               	xorwf	(_player+9)& (0+255),w,b
  5427  006AB8  E107               	bnz	u3111
  5428  006ABA  50DE               	movf	postinc2,w,c
  5429  006ABC  19CA               	xorwf	(_player+10)& (0+255),w,b
  5430  006ABE  A4D8               	btfss	status,2,c
  5431  006AC0  EF64  F035         	goto	u3111
  5432  006AC4  EF66  F035         	goto	u3110
  5433  006AC8                     u3111:
  5434  006AC8  EF8E  F035         	goto	l3489
  5435  006ACC                     u3110:
  5436  006ACC                     
  5437                           ; BSR set to: 0
  5438  006ACC  507D               	movf	_i^0,w,c
  5439  006ACE  0D0B               	mullw	11
  5440  006AD0  0E00               	movlw	low _aliens
  5441  006AD2  24F3               	addwf	243,w,c
  5442  006AD4  6ED9               	movwf	fsr2l,c
  5443  006AD6  0E01               	movlw	high _aliens
  5444  006AD8  20F4               	addwfc	prodh,w,c
  5445  006ADA  6EDA               	movwf	fsr2h,c
  5446  006ADC  50DF               	movf	indf2,w,c
  5447  006ADE  B4D8               	btfsc	status,2,c
  5448  006AE0  EF74  F035         	goto	u3121
  5449  006AE4  EF76  F035         	goto	u3120
  5450  006AE8                     u3121:
  5451  006AE8  EF8E  F035         	goto	l3489
  5452  006AEC                     u3120:
  5453  006AEC                     
  5454                           ; BSR set to: 0
  5455                           ;main.c: 194:                 aliens[i].isAlive = 0;
  5456  006AEC  507D               	movf	_i^0,w,c
  5457  006AEE  0D0B               	mullw	11
  5458  006AF0  0E00               	movlw	low _aliens
  5459  006AF2  24F3               	addwf	243,w,c
  5460  006AF4  6ED9               	movwf	fsr2l,c
  5461  006AF6  0E01               	movlw	high _aliens
  5462  006AF8  20F4               	addwfc	prodh,w,c
  5463  006AFA  6EDA               	movwf	fsr2h,c
  5464  006AFC  0E00               	movlw	0
  5465  006AFE  6EDF               	movwf	indf2,c
  5466  006B00                     
  5467                           ; BSR set to: 0
  5468                           ;main.c: 195:                 score += 10 * level;
  5469  006B00  C07E  F001         	movff	_level,___wmul@multiplier
  5470  006B04  C07F  F002         	movff	_level+1,___wmul@multiplier+1
  5471  006B08  0E00               	movlw	0
  5472  006B0A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  5473  006B0C  0E0A               	movlw	10
  5474  006B0E  6E03               	movwf	___wmul@multiplicand^0,c
  5475  006B10  EC53  F02B         	call	___wmul	;wreg free
  5476  006B14  5001               	movf	?___wmul^0,w,c
  5477  006B16  2672               	addwf	_score^0,f,c
  5478  006B18  5002               	movf	(?___wmul+1)^0,w,c
  5479  006B1A  2273               	addwfc	(_score+1)^0,f,c
  5480  006B1C                     l3489:
  5481                           
  5482                           ;main.c: 197:         }
  5483  006B1C  2A7D               	incf	_i^0,f,c
  5484  006B1E  EF33  F035         	goto	l3475
  5485  006B22                     l3493:
  5486                           
  5487                           ;main.c: 200:     for (i = 0; i < 16; i++) {
  5488  006B22  0E00               	movlw	0
  5489  006B24  6E7D               	movwf	_i^0,c
  5490  006B26                     l3495:
  5491  006B26  0E0F               	movlw	15
  5492  006B28  647D               	cpfsgt	_i^0,c
  5493  006B2A  EF99  F035         	goto	u3131
  5494  006B2E  EF9B  F035         	goto	u3130
  5495  006B32                     u3131:
  5496  006B32  EF9D  F035         	goto	l3499
  5497  006B36                     u3130:
  5498  006B36  EFF3  F035         	goto	l3515
  5499  006B3A                     l3499:
  5500                           
  5501                           ;main.c: 201:         if (aliens[i].projectileAlive) {
  5502  006B3A  507D               	movf	_i^0,w,c
  5503  006B3C  0D0B               	mullw	11
  5504  006B3E  0E01               	movlw	low (_aliens+1)
  5505  006B40  24F3               	addwf	243,w,c
  5506  006B42  6ED9               	movwf	fsr2l,c
  5507  006B44  0E01               	movlw	high (_aliens+1)
  5508  006B46  20F4               	addwfc	prodh,w,c
  5509  006B48  6EDA               	movwf	fsr2h,c
  5510  006B4A  50DF               	movf	indf2,w,c
  5511  006B4C  B4D8               	btfsc	status,2,c
  5512  006B4E  EFAB  F035         	goto	u3141
  5513  006B52  EFAD  F035         	goto	u3140
  5514  006B56                     u3141:
  5515  006B56  EFF0  F035         	goto	l3511
  5516  006B5A                     u3140:
  5517  006B5A                     
  5518                           ;main.c: 202:             if (aliens[i].projY = 7) {
  5519  006B5A  507D               	movf	_i^0,w,c
  5520  006B5C  0D0B               	mullw	11
  5521  006B5E  0E09               	movlw	low (_aliens+9)
  5522  006B60  24F3               	addwf	243,w,c
  5523  006B62  6ED9               	movwf	fsr2l,c
  5524  006B64  0E01               	movlw	high (_aliens+9)
  5525  006B66  20F4               	addwfc	prodh,w,c
  5526  006B68  6EDA               	movwf	fsr2h,c
  5527  006B6A  0E07               	movlw	7
  5528  006B6C  6EDE               	movwf	postinc2,c
  5529  006B6E  0E00               	movlw	0
  5530  006B70  6EDD               	movwf	postdec2,c
  5531                           
  5532                           ;main.c: 203:                 aliens[i].projectileAlive = 0;
  5533  006B72  507D               	movf	_i^0,w,c
  5534  006B74  0D0B               	mullw	11
  5535  006B76  0E01               	movlw	low (_aliens+1)
  5536  006B78  24F3               	addwf	243,w,c
  5537  006B7A  6ED9               	movwf	fsr2l,c
  5538  006B7C  0E01               	movlw	high (_aliens+1)
  5539  006B7E  20F4               	addwfc	prodh,w,c
  5540  006B80  6EDA               	movwf	fsr2h,c
  5541  006B82  0E00               	movlw	0
  5542  006B84  6EDF               	movwf	indf2,c
  5543  006B86                     
  5544                           ;main.c: 208:             if (aliens[i].projX == player.x && aliens[i].projY == player.y
      +                          ) {
  5545  006B86  507D               	movf	_i^0,w,c
  5546  006B88  0D0B               	mullw	11
  5547  006B8A  0E07               	movlw	low (_aliens+7)
  5548  006B8C  24F3               	addwf	243,w,c
  5549  006B8E  6ED9               	movwf	fsr2l,c
  5550  006B90  0E01               	movlw	high (_aliens+7)
  5551  006B92  20F4               	addwfc	prodh,w,c
  5552  006B94  6EDA               	movwf	fsr2h,c
  5553  006B96  0100               	movlb	0	; () banked
  5554  006B98  51C3               	movf	(_player+3)& (0+255),w,b
  5555  006B9A  18DE               	xorwf	postinc2,w,c
  5556  006B9C  E107               	bnz	u3151
  5557  006B9E  51C4               	movf	(_player+4)& (0+255),w,b
  5558  006BA0  18DE               	xorwf	postinc2,w,c
  5559  006BA2  A4D8               	btfss	status,2,c
  5560  006BA4  EFD6  F035         	goto	u3151
  5561  006BA8  EFD8  F035         	goto	u3150
  5562  006BAC                     u3151:
  5563  006BAC  EFF0  F035         	goto	l3511
  5564  006BB0                     u3150:
  5565  006BB0                     
  5566                           ; BSR set to: 0
  5567  006BB0  507D               	movf	_i^0,w,c
  5568  006BB2  0D0B               	mullw	11
  5569  006BB4  0E09               	movlw	low (_aliens+9)
  5570  006BB6  24F3               	addwf	243,w,c
  5571  006BB8  6ED9               	movwf	fsr2l,c
  5572  006BBA  0E01               	movlw	high (_aliens+9)
  5573  006BBC  20F4               	addwfc	prodh,w,c
  5574  006BBE  6EDA               	movwf	fsr2h,c
  5575  006BC0  51C5               	movf	(_player+5)& (0+255),w,b
  5576  006BC2  18DE               	xorwf	postinc2,w,c
  5577  006BC4  E107               	bnz	u3161
  5578  006BC6  51C6               	movf	(_player+6)& (0+255),w,b
  5579  006BC8  18DE               	xorwf	postinc2,w,c
  5580  006BCA  A4D8               	btfss	status,2,c
  5581  006BCC  EFEA  F035         	goto	u3161
  5582  006BD0  EFEC  F035         	goto	u3160
  5583  006BD4                     u3161:
  5584  006BD4  EFF0  F035         	goto	l3511
  5585  006BD8                     u3160:
  5586  006BD8                     
  5587                           ; BSR set to: 0
  5588                           ;main.c: 209:                 player.isAlive = 0;
  5589  006BD8  0E00               	movlw	0
  5590  006BDA  6FC0               	movwf	_player& (0+255),b
  5591  006BDC                     
  5592                           ; BSR set to: 0
  5593                           ;main.c: 210:                 gameOver();
  5594  006BDC  ECCD  F02C         	call	_gameOver	;wreg free
  5595  006BE0                     l3511:
  5596                           
  5597                           ;main.c: 213:     }
  5598  006BE0  2A7D               	incf	_i^0,f,c
  5599  006BE2  EF93  F035         	goto	l3495
  5600  006BE6                     l3515:
  5601                           
  5602                           ;main.c: 215:     aliensLeft = 0;
  5603  006BE6  0E00               	movlw	0
  5604  006BE8  0100               	movlb	0	; () banked
  5605  006BEA  6FCC               	movwf	(_aliensLeft+1)& (0+255),b
  5606  006BEC  0E00               	movlw	0
  5607  006BEE  6FCB               	movwf	_aliensLeft& (0+255),b
  5608                           
  5609                           ;main.c: 217:     for (i = 0; i < 16; i++) {
  5610  006BF0  0E00               	movlw	0
  5611  006BF2  6E7D               	movwf	_i^0,c
  5612  006BF4                     l3517:
  5613  006BF4  0E0F               	movlw	15
  5614  006BF6  647D               	cpfsgt	_i^0,c
  5615  006BF8  EF00  F036         	goto	u3171
  5616  006BFC  EF02  F036         	goto	u3170
  5617  006C00                     u3171:
  5618  006C00  EF04  F036         	goto	l3521
  5619  006C04                     u3170:
  5620  006C04  EF1A  F036         	goto	l3527
  5621  006C08                     l3521:
  5622                           
  5623                           ;main.c: 218:         if (aliens[i].isAlive) {
  5624  006C08  507D               	movf	_i^0,w,c
  5625  006C0A  0D0B               	mullw	11
  5626  006C0C  0E00               	movlw	low _aliens
  5627  006C0E  24F3               	addwf	243,w,c
  5628  006C10  6ED9               	movwf	fsr2l,c
  5629  006C12  0E01               	movlw	high _aliens
  5630  006C14  20F4               	addwfc	prodh,w,c
  5631  006C16  6EDA               	movwf	fsr2h,c
  5632  006C18  50DF               	movf	indf2,w,c
  5633  006C1A  B4D8               	btfsc	status,2,c
  5634  006C1C  EF12  F036         	goto	u3181
  5635  006C20  EF14  F036         	goto	u3180
  5636  006C24                     u3181:
  5637  006C24  EF17  F036         	goto	l428
  5638  006C28                     u3180:
  5639  006C28                     
  5640                           ;main.c: 219:             aliensLeft++;
  5641  006C28  0100               	movlb	0	; () banked
  5642  006C2A  4BCB               	infsnz	_aliensLeft& (0+255),f,b
  5643  006C2C  2BCC               	incf	(_aliensLeft+1)& (0+255),f,b
  5644  006C2E                     l428:
  5645                           
  5646                           ;main.c: 221:     }
  5647  006C2E  2A7D               	incf	_i^0,f,c
  5648  006C30  EFFA  F035         	goto	l3517
  5649  006C34                     l3527:
  5650                           
  5651                           ;main.c: 223:     if (contadorLoop == 0) {
  5652  006C34  0100               	movlb	0	; () banked
  5653  006C36  51CD               	movf	_contadorLoop& (0+255),w,b
  5654  006C38  11CE               	iorwf	(_contadorLoop+1)& (0+255),w,b
  5655  006C3A  A4D8               	btfss	status,2,c
  5656  006C3C  EF22  F036         	goto	u3191
  5657  006C40  EF24  F036         	goto	u3190
  5658  006C44                     u3191:
  5659  006C44  EF2D  F037         	goto	l3567
  5660  006C48                     u3190:
  5661  006C48                     
  5662                           ; BSR set to: 0
  5663                           ;main.c: 224:         contadorLoop = speed;
  5664  006C48  C0DC  F0CD         	movff	_speed,_contadorLoop
  5665  006C4C  C0DD  F0CE         	movff	_speed+1,_contadorLoop+1
  5666  006C50                     
  5667                           ; BSR set to: 0
  5668                           ;main.c: 226:         for (i = 0; i < 16; i++) {
  5669  006C50  0E00               	movlw	0
  5670  006C52  6E7D               	movwf	_i^0,c
  5671  006C54                     l3533:
  5672  006C54  0E0F               	movlw	15
  5673  006C56  647D               	cpfsgt	_i^0,c
  5674  006C58  EF30  F036         	goto	u3201
  5675  006C5C  EF32  F036         	goto	u3200
  5676  006C60                     u3201:
  5677  006C60  EF34  F036         	goto	l3537
  5678  006C64                     u3200:
  5679  006C64  EF30  F037         	goto	l3569
  5680  006C68                     l3537:
  5681                           
  5682                           ;main.c: 227:             if (aliens[i].isAlive) {
  5683  006C68  507D               	movf	_i^0,w,c
  5684  006C6A  0D0B               	mullw	11
  5685  006C6C  0E00               	movlw	low _aliens
  5686  006C6E  24F3               	addwf	243,w,c
  5687  006C70  6ED9               	movwf	fsr2l,c
  5688  006C72  0E01               	movlw	high _aliens
  5689  006C74  20F4               	addwfc	prodh,w,c
  5690  006C76  6EDA               	movwf	fsr2h,c
  5691  006C78  50DF               	movf	indf2,w,c
  5692  006C7A  B4D8               	btfsc	status,2,c
  5693  006C7C  EF42  F036         	goto	u3211
  5694  006C80  EF44  F036         	goto	u3210
  5695  006C84                     u3211:
  5696  006C84  EF2A  F037         	goto	l3563
  5697  006C88                     u3210:
  5698  006C88                     
  5699                           ;main.c: 228:                 if (i < 8) {
  5700  006C88  0E08               	movlw	8
  5701  006C8A  607D               	cpfslt	_i^0,c
  5702  006C8C  EF4A  F036         	goto	u3221
  5703  006C90  EF4C  F036         	goto	u3220
  5704  006C94                     u3221:
  5705  006C94  EF8A  F036         	goto	l3547
  5706  006C98                     u3220:
  5707  006C98                     
  5708                           ;main.c: 229:                     if (aliens[i].state) {
  5709  006C98  507D               	movf	_i^0,w,c
  5710  006C9A  0D0B               	mullw	11
  5711  006C9C  0E02               	movlw	low (_aliens+2)
  5712  006C9E  24F3               	addwf	243,w,c
  5713  006CA0  6ED9               	movwf	fsr2l,c
  5714  006CA2  0E01               	movlw	high (_aliens+2)
  5715  006CA4  20F4               	addwfc	prodh,w,c
  5716  006CA6  6EDA               	movwf	fsr2h,c
  5717  006CA8  50DF               	movf	indf2,w,c
  5718  006CAA  B4D8               	btfsc	status,2,c
  5719  006CAC  EF5A  F036         	goto	u3231
  5720  006CB0  EF5C  F036         	goto	u3230
  5721  006CB4                     u3231:
  5722  006CB4  EF73  F036         	goto	l3545
  5723  006CB8                     u3230:
  5724  006CB8                     
  5725                           ;main.c: 230:                         aliens[i].x -= 1;
  5726  006CB8  507D               	movf	_i^0,w,c
  5727  006CBA  0D0B               	mullw	11
  5728  006CBC  0E03               	movlw	low (_aliens+3)
  5729  006CBE  24F3               	addwf	243,w,c
  5730  006CC0  6ED9               	movwf	fsr2l,c
  5731  006CC2  0E01               	movlw	high (_aliens+3)
  5732  006CC4  20F4               	addwfc	prodh,w,c
  5733  006CC6  6EDA               	movwf	fsr2h,c
  5734  006CC8  06DE               	decf	postinc2,f,c
  5735  006CCA  0E00               	movlw	0
  5736  006CCC  5ADD               	subwfb	postdec2,f,c
  5737                           
  5738                           ;main.c: 231:                         aliens[i].state = 0;
  5739  006CCE  507D               	movf	_i^0,w,c
  5740  006CD0  0D0B               	mullw	11
  5741  006CD2  0E02               	movlw	low (_aliens+2)
  5742  006CD4  24F3               	addwf	243,w,c
  5743  006CD6  6ED9               	movwf	fsr2l,c
  5744  006CD8  0E01               	movlw	high (_aliens+2)
  5745  006CDA  20F4               	addwfc	prodh,w,c
  5746  006CDC  6EDA               	movwf	fsr2h,c
  5747  006CDE  0E00               	movlw	0
  5748  006CE0  6EDF               	movwf	indf2,c
  5749                           
  5750                           ;main.c: 232:                     } else {
  5751  006CE2  EFC6  F036         	goto	l3553
  5752  006CE6                     l3545:
  5753                           
  5754                           ;main.c: 233:                         aliens[i].x += 1;
  5755  006CE6  507D               	movf	_i^0,w,c
  5756  006CE8  0D0B               	mullw	11
  5757  006CEA  0E03               	movlw	low (_aliens+3)
  5758  006CEC  24F3               	addwf	243,w,c
  5759  006CEE  6ED9               	movwf	fsr2l,c
  5760  006CF0  0E01               	movlw	high (_aliens+3)
  5761  006CF2  20F4               	addwfc	prodh,w,c
  5762  006CF4  6EDA               	movwf	fsr2h,c
  5763  006CF6  2ADE               	incf	postinc2,f,c
  5764  006CF8  0E00               	movlw	0
  5765  006CFA  22DD               	addwfc	postdec2,f,c
  5766                           
  5767                           ;main.c: 234:                         aliens[i].state = 1;
  5768  006CFC  507D               	movf	_i^0,w,c
  5769  006CFE  0D0B               	mullw	11
  5770  006D00  0E02               	movlw	low (_aliens+2)
  5771  006D02  24F3               	addwf	243,w,c
  5772  006D04  6ED9               	movwf	fsr2l,c
  5773  006D06  0E01               	movlw	high (_aliens+2)
  5774  006D08  20F4               	addwfc	prodh,w,c
  5775  006D0A  6EDA               	movwf	fsr2h,c
  5776  006D0C  0E01               	movlw	1
  5777  006D0E  6EDF               	movwf	indf2,c
  5778  006D10  EFC6  F036         	goto	l3553
  5779  006D14                     l3547:
  5780                           
  5781                           ;main.c: 237:                     if (aliens[i].state) {
  5782  006D14  507D               	movf	_i^0,w,c
  5783  006D16  0D0B               	mullw	11
  5784  006D18  0E02               	movlw	low (_aliens+2)
  5785  006D1A  24F3               	addwf	243,w,c
  5786  006D1C  6ED9               	movwf	fsr2l,c
  5787  006D1E  0E01               	movlw	high (_aliens+2)
  5788  006D20  20F4               	addwfc	prodh,w,c
  5789  006D22  6EDA               	movwf	fsr2h,c
  5790  006D24  50DF               	movf	indf2,w,c
  5791  006D26  B4D8               	btfsc	status,2,c
  5792  006D28  EF98  F036         	goto	u3241
  5793  006D2C  EF9A  F036         	goto	u3240
  5794  006D30                     u3241:
  5795  006D30  EFB1  F036         	goto	l3551
  5796  006D34                     u3240:
  5797  006D34                     
  5798                           ;main.c: 238:                         aliens[i].x += 1;
  5799  006D34  507D               	movf	_i^0,w,c
  5800  006D36  0D0B               	mullw	11
  5801  006D38  0E03               	movlw	low (_aliens+3)
  5802  006D3A  24F3               	addwf	243,w,c
  5803  006D3C  6ED9               	movwf	fsr2l,c
  5804  006D3E  0E01               	movlw	high (_aliens+3)
  5805  006D40  20F4               	addwfc	prodh,w,c
  5806  006D42  6EDA               	movwf	fsr2h,c
  5807  006D44  2ADE               	incf	postinc2,f,c
  5808  006D46  0E00               	movlw	0
  5809  006D48  22DD               	addwfc	postdec2,f,c
  5810                           
  5811                           ;main.c: 239:                         aliens[i].state = 0;
  5812  006D4A  507D               	movf	_i^0,w,c
  5813  006D4C  0D0B               	mullw	11
  5814  006D4E  0E02               	movlw	low (_aliens+2)
  5815  006D50  24F3               	addwf	243,w,c
  5816  006D52  6ED9               	movwf	fsr2l,c
  5817  006D54  0E01               	movlw	high (_aliens+2)
  5818  006D56  20F4               	addwfc	prodh,w,c
  5819  006D58  6EDA               	movwf	fsr2h,c
  5820  006D5A  0E00               	movlw	0
  5821  006D5C  6EDF               	movwf	indf2,c
  5822                           
  5823                           ;main.c: 240:                     } else {
  5824  006D5E  EFC6  F036         	goto	l3553
  5825  006D62                     l3551:
  5826                           
  5827                           ;main.c: 241:                         aliens[i].x -= 1;
  5828  006D62  507D               	movf	_i^0,w,c
  5829  006D64  0D0B               	mullw	11
  5830  006D66  0E03               	movlw	low (_aliens+3)
  5831  006D68  24F3               	addwf	243,w,c
  5832  006D6A  6ED9               	movwf	fsr2l,c
  5833  006D6C  0E01               	movlw	high (_aliens+3)
  5834  006D6E  20F4               	addwfc	prodh,w,c
  5835  006D70  6EDA               	movwf	fsr2h,c
  5836  006D72  06DE               	decf	postinc2,f,c
  5837  006D74  0E00               	movlw	0
  5838  006D76  5ADD               	subwfb	postdec2,f,c
  5839                           
  5840                           ;main.c: 242:                         aliens[i].state = 1;
  5841  006D78  507D               	movf	_i^0,w,c
  5842  006D7A  0D0B               	mullw	11
  5843  006D7C  0E02               	movlw	low (_aliens+2)
  5844  006D7E  24F3               	addwf	243,w,c
  5845  006D80  6ED9               	movwf	fsr2l,c
  5846  006D82  0E01               	movlw	high (_aliens+2)
  5847  006D84  20F4               	addwfc	prodh,w,c
  5848  006D86  6EDA               	movwf	fsr2h,c
  5849  006D88  0E01               	movlw	1
  5850  006D8A  6EDF               	movwf	indf2,c
  5851  006D8C                     l3553:
  5852                           
  5853                           ;main.c: 246:                 if (rand() % 100 < 8 && !aliens[i].projectileAlive) {
  5854  006D8C  EC96  F02C         	call	_rand	;wreg free
  5855  006D90  C00D  F013         	movff	?_rand,___awmod@dividend
  5856  006D94  C00E  F014         	movff	?_rand+1,___awmod@dividend+1
  5857  006D98  0E00               	movlw	0
  5858  006D9A  6E16               	movwf	(___awmod@divisor+1)^0,c
  5859  006D9C  0E64               	movlw	100
  5860  006D9E  6E15               	movwf	___awmod@divisor^0,c
  5861  006DA0  EC31  F02F         	call	___awmod	;wreg free
  5862  006DA4  BE14               	btfsc	(?___awmod+1)^0,7,c
  5863  006DA6  EFE0  F036         	goto	u3250
  5864  006DAA  5014               	movf	(?___awmod+1)^0,w,c
  5865  006DAC  E107               	bnz	u3251
  5866  006DAE  0E08               	movlw	8
  5867  006DB0  5C13               	subwf	?___awmod^0,w,c
  5868  006DB2  B0D8               	btfsc	status,0,c
  5869  006DB4  EFDE  F036         	goto	u3251
  5870  006DB8  EFE0  F036         	goto	u3250
  5871  006DBC                     u3251:
  5872  006DBC  EF2A  F037         	goto	l3563
  5873  006DC0                     u3250:
  5874  006DC0  507D               	movf	_i^0,w,c
  5875  006DC2  0D0B               	mullw	11
  5876  006DC4  0E01               	movlw	low (_aliens+1)
  5877  006DC6  24F3               	addwf	243,w,c
  5878  006DC8  6ED9               	movwf	fsr2l,c
  5879  006DCA  0E01               	movlw	high (_aliens+1)
  5880  006DCC  20F4               	addwfc	prodh,w,c
  5881  006DCE  6EDA               	movwf	fsr2h,c
  5882  006DD0  50DF               	movf	indf2,w,c
  5883  006DD2  A4D8               	btfss	status,2,c
  5884  006DD4  EFEE  F036         	goto	u3261
  5885  006DD8  EFF0  F036         	goto	u3260
  5886  006DDC                     u3261:
  5887  006DDC  EF2A  F037         	goto	l3563
  5888  006DE0                     u3260:
  5889  006DE0                     
  5890                           ;main.c: 247:                     aliens[i].projX = aliens[i].x;
  5891  006DE0  507D               	movf	_i^0,w,c
  5892  006DE2  0D0B               	mullw	11
  5893  006DE4  0E03               	movlw	low (_aliens+3)
  5894  006DE6  24F3               	addwf	243,w,c
  5895  006DE8  6ED9               	movwf	fsr2l,c
  5896  006DEA  0E01               	movlw	high (_aliens+3)
  5897  006DEC  20F4               	addwfc	prodh,w,c
  5898  006DEE  6EDA               	movwf	fsr2h,c
  5899  006DF0  507D               	movf	_i^0,w,c
  5900  006DF2  0D0B               	mullw	11
  5901  006DF4  0E07               	movlw	low (_aliens+7)
  5902  006DF6  24F3               	addwf	243,w,c
  5903  006DF8  6EE1               	movwf	fsr1l,c
  5904  006DFA  0E01               	movlw	high (_aliens+7)
  5905  006DFC  20F4               	addwfc	prodh,w,c
  5906  006DFE  6EE2               	movwf	fsr1h,c
  5907  006E00  CFDE FFE6          	movff	postinc2,postinc1
  5908  006E04  CFDD FFE5          	movff	postdec2,postdec1
  5909  006E08                     
  5910                           ;main.c: 248:                     aliens[i].projY = aliens[i].y + 1;
  5911  006E08  507D               	movf	_i^0,w,c
  5912  006E0A  0D0B               	mullw	11
  5913  006E0C  0E05               	movlw	low (_aliens+5)
  5914  006E0E  24F3               	addwf	243,w,c
  5915  006E10  6ED9               	movwf	fsr2l,c
  5916  006E12  0E01               	movlw	high (_aliens+5)
  5917  006E14  20F4               	addwfc	prodh,w,c
  5918  006E16  6EDA               	movwf	fsr2h,c
  5919  006E18  CFDE F01D          	movff	postinc2,??_gameLogic
  5920  006E1C  CFDD F01E          	movff	postdec2,??_gameLogic+1
  5921  006E20  0E01               	movlw	1
  5922  006E22  261D               	addwf	??_gameLogic^0,f,c
  5923  006E24  0E00               	movlw	0
  5924  006E26  221E               	addwfc	(??_gameLogic+1)^0,f,c
  5925  006E28  507D               	movf	_i^0,w,c
  5926  006E2A  0D0B               	mullw	11
  5927  006E2C  0E09               	movlw	low (_aliens+9)
  5928  006E2E  24F3               	addwf	243,w,c
  5929  006E30  6ED9               	movwf	fsr2l,c
  5930  006E32  0E01               	movlw	high (_aliens+9)
  5931  006E34  20F4               	addwfc	prodh,w,c
  5932  006E36  6EDA               	movwf	fsr2h,c
  5933  006E38  C01D  FFDE         	movff	??_gameLogic,postinc2
  5934  006E3C  C01E  FFDD         	movff	??_gameLogic+1,postdec2
  5935  006E40                     
  5936                           ;main.c: 249:                     aliens[i].projectileAlive = 1;
  5937  006E40  507D               	movf	_i^0,w,c
  5938  006E42  0D0B               	mullw	11
  5939  006E44  0E01               	movlw	low (_aliens+1)
  5940  006E46  24F3               	addwf	243,w,c
  5941  006E48  6ED9               	movwf	fsr2l,c
  5942  006E4A  0E01               	movlw	high (_aliens+1)
  5943  006E4C  20F4               	addwfc	prodh,w,c
  5944  006E4E  6EDA               	movwf	fsr2h,c
  5945  006E50  0E01               	movlw	1
  5946  006E52  6EDF               	movwf	indf2,c
  5947  006E54                     l3563:
  5948                           
  5949                           ;main.c: 252:         }
  5950  006E54  2A7D               	incf	_i^0,f,c
  5951  006E56  EF2A  F036         	goto	l3533
  5952  006E5A                     l3567:
  5953                           
  5954                           ; BSR set to: 0
  5955  006E5A  07CD               	decf	_contadorLoop& (0+255),f,b
  5956  006E5C  A0D8               	btfss	status,0,c
  5957  006E5E  07CE               	decf	(_contadorLoop+1)& (0+255),f,b
  5958  006E60                     l3569:
  5959                           
  5960                           ;main.c: 255:     if (!aliensLeft && level < 10) {
  5961  006E60  0100               	movlb	0	; () banked
  5962  006E62  51CB               	movf	_aliensLeft& (0+255),w,b
  5963  006E64  11CC               	iorwf	(_aliensLeft+1)& (0+255),w,b
  5964  006E66  A4D8               	btfss	status,2,c
  5965  006E68  EF38  F037         	goto	u3271
  5966  006E6C  EF3A  F037         	goto	u3270
  5967  006E70                     u3271:
  5968  006E70  EF4F  F037         	goto	l3575
  5969  006E74                     u3270:
  5970  006E74                     
  5971                           ; BSR set to: 0
  5972  006E74  507F               	movf	(_level+1)^0,w,c
  5973  006E76  E107               	bnz	u3281
  5974  006E78  0E0A               	movlw	10
  5975  006E7A  5C7E               	subwf	_level^0,w,c
  5976  006E7C  B0D8               	btfsc	status,0,c
  5977  006E7E  EF43  F037         	goto	u3281
  5978  006E82  EF45  F037         	goto	u3280
  5979  006E86                     u3281:
  5980  006E86  EF4F  F037         	goto	l3575
  5981  006E8A                     u3280:
  5982  006E8A                     
  5983                           ; BSR set to: 0
  5984                           ;main.c: 256:         setupLevel(level + 1);
  5985  006E8A  0E01               	movlw	1
  5986  006E8C  247E               	addwf	_level^0,w,c
  5987  006E8E  6E01               	movwf	setupLevel@lvl^0,c
  5988  006E90  0E00               	movlw	0
  5989  006E92  207F               	addwfc	(_level+1)^0,w,c
  5990  006E94  6E02               	movwf	(setupLevel@lvl+1)^0,c
  5991  006E96  ECBF  F031         	call	_setupLevel	;wreg free
  5992                           
  5993                           ;main.c: 257:     } else if (!aliensLeft && level == 10) {
  5994  006E9A  EF64  F037         	goto	l444
  5995  006E9E                     l3575:
  5996                           
  5997                           ; BSR set to: 0
  5998  006E9E  51CB               	movf	_aliensLeft& (0+255),w,b
  5999  006EA0  11CC               	iorwf	(_aliensLeft+1)& (0+255),w,b
  6000  006EA2  A4D8               	btfss	status,2,c
  6001  006EA4  EF56  F037         	goto	u3291
  6002  006EA8  EF58  F037         	goto	u3290
  6003  006EAC                     u3291:
  6004  006EAC  EF64  F037         	goto	l444
  6005  006EB0                     u3290:
  6006  006EB0                     
  6007                           ; BSR set to: 0
  6008  006EB0  0E0A               	movlw	10
  6009  006EB2  187E               	xorwf	_level^0,w,c
  6010  006EB4  107F               	iorwf	(_level+1)^0,w,c
  6011  006EB6  A4D8               	btfss	status,2,c
  6012  006EB8  EF60  F037         	goto	u3301
  6013  006EBC  EF62  F037         	goto	u3300
  6014  006EC0                     u3301:
  6015  006EC0  EF64  F037         	goto	l444
  6016  006EC4                     u3300:
  6017  006EC4                     
  6018                           ; BSR set to: 0
  6019                           ;main.c: 258:         youWin();
  6020  006EC4  EC06  F02D         	call	_youWin	;wreg free
  6021  006EC8                     l444:
  6022  006EC8  0012               	return		;funcret
  6023  006ECA                     __end_of_gameLogic:
  6024                           	callstack 0
  6025                           
  6026 ;; *************** function _youWin *****************
  6027 ;; Defined at:
  6028 ;;		line 314 in file "main.c"
  6029 ;; Parameters:    Size  Location     Type
  6030 ;;		None
  6031 ;; Auto vars:     Size  Location     Type
  6032 ;;		None
  6033 ;; Return value:  Size  Location     Type
  6034 ;;                  1    wreg      void 
  6035 ;; Registers used:
  6036 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6037 ;; Tracked objects:
  6038 ;;		On entry : 0/0
  6039 ;;		On exit  : 0/0
  6040 ;;		Unchanged: 0/0
  6041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6042 ;;      Params:         0       0       0       0       0       0       0
  6043 ;;      Locals:         0       0       0       0       0       0       0
  6044 ;;      Temps:          0       0       0       0       0       0       0
  6045 ;;      Totals:         0       0       0       0       0       0       0
  6046 ;;Total ram usage:        0 bytes
  6047 ;; Hardware stack levels used:    1
  6048 ;; Hardware stack levels required when called:    4
  6049 ;; This function calls:
  6050 ;;		_lcdCommand
  6051 ;;		_lcdNumber
  6052 ;;		_lcdPosition
  6053 ;;		_lcdStr
  6054 ;; This function is called by:
  6055 ;;		_gameLogic
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text17
  6060  005A0C                     __ptext17:
  6061                           	callstack 0
  6062  005A0C                     _youWin:
  6063                           	callstack 25
  6064  005A0C                     
  6065                           ;main.c: 315:     lcdCommand(0x01);
  6066  005A0C  0E01               	movlw	1
  6067  005A0E  EC2B  F02E         	call	_lcdCommand
  6068  005A12                     
  6069                           ;main.c: 317:     lcdStr("|--------------|");
  6070  005A12  0EF1               	movlw	low STR_1
  6071  005A14  6E09               	movwf	lcdStr@str^0,c
  6072  005A16  0E7E               	movlw	high STR_1
  6073  005A18  6E0A               	movwf	(lcdStr@str+1)^0,c
  6074  005A1A  EC86  F02B         	call	_lcdStr	;wreg free
  6075  005A1E                     
  6076                           ;main.c: 318:     lcdPosition(1, 0);
  6077  005A1E  0E00               	movlw	0
  6078  005A20  6E09               	movwf	lcdPosition@col^0,c
  6079  005A22  0E01               	movlw	1
  6080  005A24  ECA9  F02E         	call	_lcdPosition
  6081                           
  6082                           ;main.c: 319:     lcdStr("| Voce venceu! |");
  6083  005A28  0EAD               	movlw	low STR_61
  6084  005A2A  6E09               	movwf	lcdStr@str^0,c
  6085  005A2C  0E7E               	movlw	high STR_61
  6086  005A2E  6E0A               	movwf	(lcdStr@str+1)^0,c
  6087  005A30  EC86  F02B         	call	_lcdStr	;wreg free
  6088  005A34                     
  6089                           ;main.c: 320:     lcdPosition(2, 0);
  6090  005A34  0E00               	movlw	0
  6091  005A36  6E09               	movwf	lcdPosition@col^0,c
  6092  005A38  0E02               	movlw	2
  6093  005A3A  ECA9  F02E         	call	_lcdPosition
  6094  005A3E                     
  6095                           ;main.c: 321:     lcdStr("| Score = ");
  6096  005A3E  0EEB               	movlw	low STR_57
  6097  005A40  6E09               	movwf	lcdStr@str^0,c
  6098  005A42  0E7F               	movlw	high STR_57
  6099  005A44  6E0A               	movwf	(lcdStr@str+1)^0,c
  6100  005A46  EC86  F02B         	call	_lcdStr	;wreg free
  6101                           
  6102                           ;main.c: 322:     lcdNumber(score);
  6103  005A4A  C072  F019         	movff	_score,lcdNumber@valor
  6104  005A4E  C073  F01A         	movff	_score+1,lcdNumber@valor+1
  6105  005A52  EC3F  F02D         	call	_lcdNumber	;wreg free
  6106  005A56                     
  6107                           ;main.c: 323:     lcdStr(" |");
  6108  005A56  0E33               	movlw	low (STR_2+14)
  6109  005A58  6E09               	movwf	lcdStr@str^0,c
  6110  005A5A  0E7E               	movlw	high (STR_2+14)
  6111  005A5C  6E0A               	movwf	(lcdStr@str+1)^0,c
  6112  005A5E  EC86  F02B         	call	_lcdStr	;wreg free
  6113  005A62                     
  6114                           ;main.c: 324:     lcdPosition(3, 0);
  6115  005A62  0E00               	movlw	0
  6116  005A64  6E09               	movwf	lcdPosition@col^0,c
  6117  005A66  0E03               	movlw	3
  6118  005A68  ECA9  F02E         	call	_lcdPosition
  6119                           
  6120                           ;main.c: 325:     lcdStr("|--------------|");
  6121  005A6C  0EF1               	movlw	low STR_1
  6122  005A6E  6E09               	movwf	lcdStr@str^0,c
  6123  005A70  0E7E               	movlw	high STR_1
  6124  005A72  6E0A               	movwf	(lcdStr@str+1)^0,c
  6125  005A74  EC86  F02B         	call	_lcdStr	;wreg free
  6126  005A78                     l459:
  6127  005A78  EF3C  F02D         	goto	l459
  6128  005A7C  0012               	return		;funcret
  6129  005A7E                     __end_of_youWin:
  6130                           	callstack 0
  6131                           
  6132 ;; *************** function _setupLevel *****************
  6133 ;; Defined at:
  6134 ;;		line 262 in file "main.c"
  6135 ;; Parameters:    Size  Location     Type
  6136 ;;  lvl             2    0[COMRAM] unsigned int 
  6137 ;; Auto vars:     Size  Location     Type
  6138 ;;		None
  6139 ;; Return value:  Size  Location     Type
  6140 ;;                  1    wreg      void 
  6141 ;; Registers used:
  6142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6143 ;; Tracked objects:
  6144 ;;		On entry : 0/0
  6145 ;;		On exit  : 0/0
  6146 ;;		Unchanged: 0/0
  6147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6148 ;;      Params:         2       0       0       0       0       0       0
  6149 ;;      Locals:         0       0       0       0       0       0       0
  6150 ;;      Temps:          4       0       0       0       0       0       0
  6151 ;;      Totals:         6       0       0       0       0       0       0
  6152 ;;Total ram usage:        6 bytes
  6153 ;; Hardware stack levels used:    1
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_main
  6158 ;;		_gameLogic
  6159 ;; This function uses a non-reentrant model
  6160 ;;
  6161                           
  6162                           	psect	text18
  6163  00637E                     __ptext18:
  6164                           	callstack 0
  6165  00637E                     _setupLevel:
  6166                           	callstack 30
  6167  00637E                     
  6168                           ;main.c: 263:     level = lvl;
  6169  00637E  C001  F07E         	movff	setupLevel@lvl,_level
  6170  006382  C002  F07F         	movff	setupLevel@lvl+1,_level+1
  6171  006386                     
  6172                           ;main.c: 265:     player.x = 16 / 2;
  6173  006386  0E00               	movlw	0
  6174  006388  0100               	movlb	0	; () banked
  6175  00638A  6FC4               	movwf	(_player+4)& (0+255),b
  6176  00638C  0E08               	movlw	8
  6177  00638E  6FC3               	movwf	(_player+3)& (0+255),b
  6178                           
  6179                           ;main.c: 266:     player.y = 7;
  6180  006390  0E00               	movlw	0
  6181  006392  6FC6               	movwf	(_player+6)& (0+255),b
  6182  006394  0E07               	movlw	7
  6183  006396  6FC5               	movwf	(_player+5)& (0+255),b
  6184                           
  6185                           ;main.c: 267:     player.isAlive = 1;
  6186  006398  0E01               	movlw	1
  6187  00639A  6FC0               	movwf	_player& (0+255),b
  6188                           
  6189                           ;main.c: 269:     player.projX = 16 / 2;
  6190  00639C  0E00               	movlw	0
  6191  00639E  6FC8               	movwf	(_player+8)& (0+255),b
  6192  0063A0  0E08               	movlw	8
  6193  0063A2  6FC7               	movwf	(_player+7)& (0+255),b
  6194                           
  6195                           ;main.c: 270:     player.projY = 6;
  6196  0063A4  0E00               	movlw	0
  6197  0063A6  6FCA               	movwf	(_player+10)& (0+255),b
  6198  0063A8  0E06               	movlw	6
  6199  0063AA  6FC9               	movwf	(_player+9)& (0+255),b
  6200                           
  6201                           ;main.c: 271:     player.projectileAlive = 0;
  6202  0063AC  0E00               	movlw	0
  6203  0063AE  6FC1               	movwf	(_player+1)& (0+255),b
  6204                           
  6205                           ;main.c: 273:     for (i = 0; i < 16; i++) {
  6206  0063B0  0E00               	movlw	0
  6207  0063B2  6E7D               	movwf	_i^0,c
  6208  0063B4                     l2823:
  6209  0063B4  0E0F               	movlw	15
  6210  0063B6  647D               	cpfsgt	_i^0,c
  6211  0063B8  EFE0  F031         	goto	u2491
  6212  0063BC  EFE2  F031         	goto	u2490
  6213  0063C0                     u2491:
  6214  0063C0  EFE4  F031         	goto	l2827
  6215  0063C4                     u2490:
  6216  0063C4  EFB5  F032         	goto	l2837
  6217  0063C8                     l2827:
  6218                           
  6219                           ;main.c: 274:         if (i < 8) {
  6220  0063C8  0E08               	movlw	8
  6221  0063CA  607D               	cpfslt	_i^0,c
  6222  0063CC  EFEA  F031         	goto	u2501
  6223  0063D0  EFEC  F031         	goto	u2500
  6224  0063D4                     u2501:
  6225  0063D4  EF48  F032         	goto	l2831
  6226  0063D8                     u2500:
  6227  0063D8                     
  6228                           ;main.c: 275:             aliens[i].x = 1 + 2 * i;
  6229  0063D8  507D               	movf	_i^0,w,c
  6230  0063DA  0D0B               	mullw	11
  6231  0063DC  0E03               	movlw	low (_aliens+3)
  6232  0063DE  24F3               	addwf	243,w,c
  6233  0063E0  6ED9               	movwf	fsr2l,c
  6234  0063E2  0E01               	movlw	high (_aliens+3)
  6235  0063E4  20F4               	addwfc	prodh,w,c
  6236  0063E6  6EDA               	movwf	fsr2h,c
  6237  0063E8  507D               	movf	_i^0,w,c
  6238  0063EA  0D02               	mullw	2
  6239  0063EC  0E01               	movlw	1
  6240  0063EE  26F3               	addwf	243,f,c
  6241  0063F0  0E00               	movlw	0
  6242  0063F2  22F4               	addwfc	244,f,c
  6243  0063F4  CFF3 FFDE          	movff	prodl,postinc2
  6244  0063F8  CFF4 FFDD          	movff	prodh,postdec2
  6245                           
  6246                           ;main.c: 276:             aliens[i].y = 0;
  6247  0063FC  507D               	movf	_i^0,w,c
  6248  0063FE  0D0B               	mullw	11
  6249  006400  0E05               	movlw	low (_aliens+5)
  6250  006402  24F3               	addwf	243,w,c
  6251  006404  6ED9               	movwf	fsr2l,c
  6252  006406  0E01               	movlw	high (_aliens+5)
  6253  006408  20F4               	addwfc	prodh,w,c
  6254  00640A  6EDA               	movwf	fsr2h,c
  6255  00640C  0E00               	movlw	0
  6256  00640E  6EDE               	movwf	postinc2,c
  6257  006410  0E00               	movlw	0
  6258  006412  6EDD               	movwf	postdec2,c
  6259                           
  6260                           ;main.c: 277:             aliens[i].projX = 1 + 2 * i;
  6261  006414  507D               	movf	_i^0,w,c
  6262  006416  0D0B               	mullw	11
  6263  006418  0E07               	movlw	low (_aliens+7)
  6264  00641A  24F3               	addwf	243,w,c
  6265  00641C  6ED9               	movwf	fsr2l,c
  6266  00641E  0E01               	movlw	high (_aliens+7)
  6267  006420  20F4               	addwfc	prodh,w,c
  6268  006422  6EDA               	movwf	fsr2h,c
  6269  006424  507D               	movf	_i^0,w,c
  6270  006426  0D02               	mullw	2
  6271  006428  0E01               	movlw	1
  6272  00642A  26F3               	addwf	243,f,c
  6273  00642C  0E00               	movlw	0
  6274  00642E  22F4               	addwfc	244,f,c
  6275  006430  CFF3 FFDE          	movff	prodl,postinc2
  6276  006434  CFF4 FFDD          	movff	prodh,postdec2
  6277                           
  6278                           ;main.c: 278:             aliens[i].projY = 1;
  6279  006438  507D               	movf	_i^0,w,c
  6280  00643A  0D0B               	mullw	11
  6281  00643C  0E09               	movlw	low (_aliens+9)
  6282  00643E  24F3               	addwf	243,w,c
  6283  006440  6ED9               	movwf	fsr2l,c
  6284  006442  0E01               	movlw	high (_aliens+9)
  6285  006444  20F4               	addwfc	prodh,w,c
  6286  006446  6EDA               	movwf	fsr2h,c
  6287  006448  0E01               	movlw	1
  6288  00644A  6EDE               	movwf	postinc2,c
  6289  00644C  0E00               	movlw	0
  6290  00644E  6EDD               	movwf	postdec2,c
  6291                           
  6292                           ;main.c: 279:             aliens[i].isAlive = 1;
  6293  006450  507D               	movf	_i^0,w,c
  6294  006452  0D0B               	mullw	11
  6295  006454  0E00               	movlw	low _aliens
  6296  006456  24F3               	addwf	243,w,c
  6297  006458  6ED9               	movwf	fsr2l,c
  6298  00645A  0E01               	movlw	high _aliens
  6299  00645C  20F4               	addwfc	prodh,w,c
  6300  00645E  6EDA               	movwf	fsr2h,c
  6301  006460  0E01               	movlw	1
  6302  006462  6EDF               	movwf	indf2,c
  6303                           
  6304                           ;main.c: 280:             aliens[i].state = 1;
  6305  006464  507D               	movf	_i^0,w,c
  6306  006466  0D0B               	mullw	11
  6307  006468  0E02               	movlw	low (_aliens+2)
  6308  00646A  24F3               	addwf	243,w,c
  6309  00646C  6ED9               	movwf	fsr2l,c
  6310  00646E  0E01               	movlw	high (_aliens+2)
  6311  006470  20F4               	addwfc	prodh,w,c
  6312  006472  6EDA               	movwf	fsr2h,c
  6313  006474  0E01               	movlw	1
  6314  006476  6EDF               	movwf	indf2,c
  6315                           
  6316                           ;main.c: 281:             aliens[i].projectileAlive = 0;
  6317  006478  507D               	movf	_i^0,w,c
  6318  00647A  0D0B               	mullw	11
  6319  00647C  0E01               	movlw	low (_aliens+1)
  6320  00647E  24F3               	addwf	243,w,c
  6321  006480  6ED9               	movwf	fsr2l,c
  6322  006482  0E01               	movlw	high (_aliens+1)
  6323  006484  20F4               	addwfc	prodh,w,c
  6324  006486  6EDA               	movwf	fsr2h,c
  6325  006488  0E00               	movlw	0
  6326  00648A  6EDF               	movwf	indf2,c
  6327                           
  6328                           ;main.c: 282:         } else {
  6329  00648C  EFB2  F032         	goto	l2833
  6330  006490                     l2831:
  6331                           
  6332                           ;main.c: 283:             aliens[i].x = 2 * (i - 8);
  6333  006490  0EF0               	movlw	240
  6334  006492  6E03               	movwf	??_setupLevel^0,c
  6335  006494  0EFF               	movlw	255
  6336  006496  6E04               	movwf	(??_setupLevel+1)^0,c
  6337  006498  507D               	movf	_i^0,w,c
  6338  00649A  6E05               	movwf	(??_setupLevel+2)^0,c
  6339  00649C  6A06               	clrf	(??_setupLevel+3)^0,c
  6340  00649E  90D8               	bcf	status,0,c
  6341  0064A0  3605               	rlcf	(??_setupLevel+2)^0,f,c
  6342  0064A2  3606               	rlcf	(??_setupLevel+3)^0,f,c
  6343  0064A4  5003               	movf	??_setupLevel^0,w,c
  6344  0064A6  2605               	addwf	(??_setupLevel+2)^0,f,c
  6345  0064A8  5004               	movf	(??_setupLevel+1)^0,w,c
  6346  0064AA  2206               	addwfc	(??_setupLevel+3)^0,f,c
  6347  0064AC  507D               	movf	_i^0,w,c
  6348  0064AE  0D0B               	mullw	11
  6349  0064B0  0E03               	movlw	low (_aliens+3)
  6350  0064B2  24F3               	addwf	243,w,c
  6351  0064B4  6ED9               	movwf	fsr2l,c
  6352  0064B6  0E01               	movlw	high (_aliens+3)
  6353  0064B8  20F4               	addwfc	prodh,w,c
  6354  0064BA  6EDA               	movwf	fsr2h,c
  6355  0064BC  C005  FFDE         	movff	??_setupLevel+2,postinc2
  6356  0064C0  C006  FFDD         	movff	??_setupLevel+3,postdec2
  6357                           
  6358                           ;main.c: 284:             aliens[i].y = 2;
  6359  0064C4  507D               	movf	_i^0,w,c
  6360  0064C6  0D0B               	mullw	11
  6361  0064C8  0E05               	movlw	low (_aliens+5)
  6362  0064CA  24F3               	addwf	243,w,c
  6363  0064CC  6ED9               	movwf	fsr2l,c
  6364  0064CE  0E01               	movlw	high (_aliens+5)
  6365  0064D0  20F4               	addwfc	prodh,w,c
  6366  0064D2  6EDA               	movwf	fsr2h,c
  6367  0064D4  0E02               	movlw	2
  6368  0064D6  6EDE               	movwf	postinc2,c
  6369  0064D8  0E00               	movlw	0
  6370  0064DA  6EDD               	movwf	postdec2,c
  6371                           
  6372                           ;main.c: 285:             aliens[i].projX = 2 * (i - 8);
  6373  0064DC  0EF0               	movlw	240
  6374  0064DE  6E03               	movwf	??_setupLevel^0,c
  6375  0064E0  0EFF               	movlw	255
  6376  0064E2  6E04               	movwf	(??_setupLevel+1)^0,c
  6377  0064E4  507D               	movf	_i^0,w,c
  6378  0064E6  6E05               	movwf	(??_setupLevel+2)^0,c
  6379  0064E8  6A06               	clrf	(??_setupLevel+3)^0,c
  6380  0064EA  90D8               	bcf	status,0,c
  6381  0064EC  3605               	rlcf	(??_setupLevel+2)^0,f,c
  6382  0064EE  3606               	rlcf	(??_setupLevel+3)^0,f,c
  6383  0064F0  5003               	movf	??_setupLevel^0,w,c
  6384  0064F2  2605               	addwf	(??_setupLevel+2)^0,f,c
  6385  0064F4  5004               	movf	(??_setupLevel+1)^0,w,c
  6386  0064F6  2206               	addwfc	(??_setupLevel+3)^0,f,c
  6387  0064F8  507D               	movf	_i^0,w,c
  6388  0064FA  0D0B               	mullw	11
  6389  0064FC  0E07               	movlw	low (_aliens+7)
  6390  0064FE  24F3               	addwf	243,w,c
  6391  006500  6ED9               	movwf	fsr2l,c
  6392  006502  0E01               	movlw	high (_aliens+7)
  6393  006504  20F4               	addwfc	prodh,w,c
  6394  006506  6EDA               	movwf	fsr2h,c
  6395  006508  C005  FFDE         	movff	??_setupLevel+2,postinc2
  6396  00650C  C006  FFDD         	movff	??_setupLevel+3,postdec2
  6397                           
  6398                           ;main.c: 286:             aliens[i].projY = 3;
  6399  006510  507D               	movf	_i^0,w,c
  6400  006512  0D0B               	mullw	11
  6401  006514  0E09               	movlw	low (_aliens+9)
  6402  006516  24F3               	addwf	243,w,c
  6403  006518  6ED9               	movwf	fsr2l,c
  6404  00651A  0E01               	movlw	high (_aliens+9)
  6405  00651C  20F4               	addwfc	prodh,w,c
  6406  00651E  6EDA               	movwf	fsr2h,c
  6407  006520  0E03               	movlw	3
  6408  006522  6EDE               	movwf	postinc2,c
  6409  006524  0E00               	movlw	0
  6410  006526  6EDD               	movwf	postdec2,c
  6411                           
  6412                           ;main.c: 287:             aliens[i].isAlive = 1;
  6413  006528  507D               	movf	_i^0,w,c
  6414  00652A  0D0B               	mullw	11
  6415  00652C  0E00               	movlw	low _aliens
  6416  00652E  24F3               	addwf	243,w,c
  6417  006530  6ED9               	movwf	fsr2l,c
  6418  006532  0E01               	movlw	high _aliens
  6419  006534  20F4               	addwfc	prodh,w,c
  6420  006536  6EDA               	movwf	fsr2h,c
  6421  006538  0E01               	movlw	1
  6422  00653A  6EDF               	movwf	indf2,c
  6423                           
  6424                           ;main.c: 288:             aliens[i].state = 1;
  6425  00653C  507D               	movf	_i^0,w,c
  6426  00653E  0D0B               	mullw	11
  6427  006540  0E02               	movlw	low (_aliens+2)
  6428  006542  24F3               	addwf	243,w,c
  6429  006544  6ED9               	movwf	fsr2l,c
  6430  006546  0E01               	movlw	high (_aliens+2)
  6431  006548  20F4               	addwfc	prodh,w,c
  6432  00654A  6EDA               	movwf	fsr2h,c
  6433  00654C  0E01               	movlw	1
  6434  00654E  6EDF               	movwf	indf2,c
  6435                           
  6436                           ;main.c: 289:             aliens[i].projectileAlive = 0;
  6437  006550  507D               	movf	_i^0,w,c
  6438  006552  0D0B               	mullw	11
  6439  006554  0E01               	movlw	low (_aliens+1)
  6440  006556  24F3               	addwf	243,w,c
  6441  006558  6ED9               	movwf	fsr2l,c
  6442  00655A  0E01               	movlw	high (_aliens+1)
  6443  00655C  20F4               	addwfc	prodh,w,c
  6444  00655E  6EDA               	movwf	fsr2h,c
  6445  006560  0E00               	movlw	0
  6446  006562  6EDF               	movwf	indf2,c
  6447  006564                     l2833:
  6448                           
  6449                           ;main.c: 291:     }
  6450  006564  2A7D               	incf	_i^0,f,c
  6451  006566  EFDA  F031         	goto	l2823
  6452  00656A                     l2837:
  6453                           
  6454                           ;main.c: 293:     speed = 30 - lvl * 2;
  6455  00656A  C001  F003         	movff	setupLevel@lvl,??_setupLevel
  6456  00656E  C002  F004         	movff	setupLevel@lvl+1,??_setupLevel+1
  6457  006572  90D8               	bcf	status,0,c
  6458  006574  3603               	rlcf	??_setupLevel^0,f,c
  6459  006576  3604               	rlcf	(??_setupLevel+1)^0,f,c
  6460  006578  5003               	movf	??_setupLevel^0,w,c
  6461  00657A  081E               	sublw	30
  6462  00657C  0100               	movlb	0	; () banked
  6463  00657E  6FDC               	movwf	_speed& (0+255),b
  6464  006580  5004               	movf	(??_setupLevel+1)^0,w,c
  6465  006582  A0D8               	btfss	status,0,c
  6466  006584  2AE8               	incf	wreg,f,c
  6467  006586  0800               	sublw	0
  6468  006588  6FDD               	movwf	(_speed+1)& (0+255),b
  6469  00658A                     
  6470                           ; BSR set to: 0
  6471                           ;main.c: 295:     aliensLeft = 16;
  6472  00658A  0E00               	movlw	0
  6473  00658C  6FCC               	movwf	(_aliensLeft+1)& (0+255),b
  6474  00658E  0E10               	movlw	16
  6475  006590  6FCB               	movwf	_aliensLeft& (0+255),b
  6476  006592                     
  6477                           ; BSR set to: 0
  6478  006592  0012               	return		;funcret
  6479  006594                     __end_of_setupLevel:
  6480                           	callstack 0
  6481                           
  6482 ;; *************** function _rand *****************
  6483 ;; Defined at:
  6484 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\rand.c"
  6485 ;; Parameters:    Size  Location     Type
  6486 ;;		None
  6487 ;; Auto vars:     Size  Location     Type
  6488 ;;		None
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  2   12[COMRAM] int 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6498 ;;      Params:         2       0       0       0       0       0       0
  6499 ;;      Locals:         0       0       0       0       0       0       0
  6500 ;;      Temps:          4       0       0       0       0       0       0
  6501 ;;      Totals:         6       0       0       0       0       0       0
  6502 ;;Total ram usage:        6 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    1
  6505 ;; This function calls:
  6506 ;;		___lmul
  6507 ;; This function is called by:
  6508 ;;		_gameLogic
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           
  6512                           	psect	text19
  6513  00592C                     __ptext19:
  6514                           	callstack 0
  6515  00592C                     _rand:
  6516                           	callstack 28
  6517  00592C  C0D8  F001         	movff	_seed,___lmul@multiplier
  6518  005930  C0D9  F002         	movff	_seed+1,___lmul@multiplier+1
  6519  005934  C0DA  F003         	movff	_seed+2,___lmul@multiplier+2
  6520  005938  C0DB  F004         	movff	_seed+3,___lmul@multiplier+3
  6521  00593C  0E2D               	movlw	45
  6522  00593E  6E05               	movwf	___lmul@multiplicand^0,c
  6523  005940  0E7F               	movlw	127
  6524  005942  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  6525  005944  0E95               	movlw	149
  6526  005946  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  6527  005948  0E4C               	movlw	76
  6528  00594A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  6529  00594C  EC61  F02C         	call	___lmul	;wreg free
  6530  005950  0E01               	movlw	1
  6531  005952  2401               	addwf	?___lmul^0,w,c
  6532  005954  0100               	movlb	0	; () banked
  6533  005956  6FD8               	movwf	_seed& (0+255),b
  6534  005958  0E00               	movlw	0
  6535  00595A  2002               	addwfc	(?___lmul+1)^0,w,c
  6536  00595C  6FD9               	movwf	(_seed+1)& (0+255),b
  6537  00595E  0E00               	movlw	0
  6538  005960  2003               	addwfc	(?___lmul+2)^0,w,c
  6539  005962  6FDA               	movwf	(_seed+2)& (0+255),b
  6540  005964  0E00               	movlw	0
  6541  005966  2004               	addwfc	(?___lmul+3)^0,w,c
  6542  005968  6FDB               	movwf	(_seed+3)& (0+255),b
  6543  00596A                     
  6544                           ; BSR set to: 0
  6545  00596A  C0D8  F00F         	movff	_seed,??_rand
  6546  00596E  C0D9  F010         	movff	_seed+1,??_rand+1
  6547  005972  C0DA  F011         	movff	_seed+2,??_rand+2
  6548  005976  C0DB  F012         	movff	_seed+3,??_rand+3
  6549  00597A  0E12               	movlw	18
  6550  00597C  EFC5  F02C         	goto	u2510
  6551  005980                     u2515:
  6552  005980  90D8               	bcf	status,0,c
  6553  005982  3212               	rrcf	(??_rand+3)^0,f,c
  6554  005984  3211               	rrcf	(??_rand+2)^0,f,c
  6555  005986  3210               	rrcf	(??_rand+1)^0,f,c
  6556  005988  320F               	rrcf	??_rand^0,f,c
  6557  00598A                     u2510:
  6558  00598A  2EE8               	decfsz	wreg,f,c
  6559  00598C  EFC0  F02C         	goto	u2515
  6560  005990  C00F  F00D         	movff	??_rand,?_rand
  6561  005994  C010  F00E         	movff	??_rand+1,?_rand+1
  6562  005998                     
  6563                           ; BSR set to: 0
  6564  005998  0012               	return		;funcret
  6565  00599A                     __end_of_rand:
  6566                           	callstack 0
  6567                           
  6568 ;; *************** function ___lmul *****************
  6569 ;; Defined at:
  6570 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
  6571 ;; Parameters:    Size  Location     Type
  6572 ;;  multiplier      4    0[COMRAM] unsigned long 
  6573 ;;  multiplicand    4    4[COMRAM] unsigned long 
  6574 ;; Auto vars:     Size  Location     Type
  6575 ;;  product         4    8[COMRAM] unsigned long 
  6576 ;; Return value:  Size  Location     Type
  6577 ;;                  4    0[COMRAM] unsigned long 
  6578 ;; Registers used:
  6579 ;;		wreg, status,2, status,0
  6580 ;; Tracked objects:
  6581 ;;		On entry : 0/0
  6582 ;;		On exit  : 0/0
  6583 ;;		Unchanged: 0/0
  6584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6585 ;;      Params:         8       0       0       0       0       0       0
  6586 ;;      Locals:         4       0       0       0       0       0       0
  6587 ;;      Temps:          0       0       0       0       0       0       0
  6588 ;;      Totals:        12       0       0       0       0       0       0
  6589 ;;Total ram usage:       12 bytes
  6590 ;; Hardware stack levels used:    1
  6591 ;; This function calls:
  6592 ;;		Nothing
  6593 ;; This function is called by:
  6594 ;;		_rand
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text20
  6599  0058C2                     __ptext20:
  6600                           	callstack 0
  6601  0058C2                     ___lmul:
  6602                           	callstack 28
  6603  0058C2  0E00               	movlw	0
  6604  0058C4  6E09               	movwf	___lmul@product^0,c
  6605  0058C6  0E00               	movlw	0
  6606  0058C8  6E0A               	movwf	(___lmul@product+1)^0,c
  6607  0058CA  0E00               	movlw	0
  6608  0058CC  6E0B               	movwf	(___lmul@product+2)^0,c
  6609  0058CE  0E00               	movlw	0
  6610  0058D0  6E0C               	movwf	(___lmul@product+3)^0,c
  6611  0058D2                     l2637:
  6612  0058D2  A001               	btfss	___lmul@multiplier^0,0,c
  6613  0058D4  EF6E  F02C         	goto	u2101
  6614  0058D8  EF70  F02C         	goto	u2100
  6615  0058DC                     u2101:
  6616  0058DC  EF78  F02C         	goto	l2641
  6617  0058E0                     u2100:
  6618  0058E0  5005               	movf	___lmul@multiplicand^0,w,c
  6619  0058E2  2609               	addwf	___lmul@product^0,f,c
  6620  0058E4  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  6621  0058E6  220A               	addwfc	(___lmul@product+1)^0,f,c
  6622  0058E8  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  6623  0058EA  220B               	addwfc	(___lmul@product+2)^0,f,c
  6624  0058EC  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  6625  0058EE  220C               	addwfc	(___lmul@product+3)^0,f,c
  6626  0058F0                     l2641:
  6627  0058F0  90D8               	bcf	status,0,c
  6628  0058F2  3605               	rlcf	___lmul@multiplicand^0,f,c
  6629  0058F4  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  6630  0058F6  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  6631  0058F8  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  6632  0058FA  90D8               	bcf	status,0,c
  6633  0058FC  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  6634  0058FE  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  6635  005900  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  6636  005902  3201               	rrcf	___lmul@multiplier^0,f,c
  6637  005904  5001               	movf	___lmul@multiplier^0,w,c
  6638  005906  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  6639  005908  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  6640  00590A  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  6641  00590C  A4D8               	btfss	status,2,c
  6642  00590E  EF8B  F02C         	goto	u2111
  6643  005912  EF8D  F02C         	goto	u2110
  6644  005916                     u2111:
  6645  005916  EF69  F02C         	goto	l2637
  6646  00591A                     u2110:
  6647  00591A  C009  F001         	movff	___lmul@product,?___lmul
  6648  00591E  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  6649  005922  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  6650  005926  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  6651  00592A  0012               	return		;funcret
  6652  00592C                     __end_of___lmul:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function _gameOver *****************
  6656 ;; Defined at:
  6657 ;;		line 298 in file "main.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;		None
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  1    wreg      void 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6671 ;;      Params:         0       0       0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0
  6674 ;;      Totals:         0       0       0       0       0       0       0
  6675 ;;Total ram usage:        0 bytes
  6676 ;; Hardware stack levels used:    1
  6677 ;; Hardware stack levels required when called:    4
  6678 ;; This function calls:
  6679 ;;		_lcdCommand
  6680 ;;		_lcdNumber
  6681 ;;		_lcdPosition
  6682 ;;		_lcdStr
  6683 ;; This function is called by:
  6684 ;;		_gameLogic
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text21
  6689  00599A                     __ptext21:
  6690                           	callstack 0
  6691  00599A                     _gameOver:
  6692                           	callstack 25
  6693  00599A                     
  6694                           ;main.c: 299:     lcdCommand(0x01);
  6695  00599A  0E01               	movlw	1
  6696  00599C  EC2B  F02E         	call	_lcdCommand
  6697  0059A0                     
  6698                           ;main.c: 301:     lcdStr("|--------------|");
  6699  0059A0  0EF1               	movlw	low STR_1
  6700  0059A2  6E09               	movwf	lcdStr@str^0,c
  6701  0059A4  0E7E               	movlw	high STR_1
  6702  0059A6  6E0A               	movwf	(lcdStr@str+1)^0,c
  6703  0059A8  EC86  F02B         	call	_lcdStr	;wreg free
  6704  0059AC                     
  6705                           ;main.c: 302:     lcdPosition(1, 0);
  6706  0059AC  0E00               	movlw	0
  6707  0059AE  6E09               	movwf	lcdPosition@col^0,c
  6708  0059B0  0E01               	movlw	1
  6709  0059B2  ECA9  F02E         	call	_lcdPosition
  6710                           
  6711                           ;main.c: 303:     lcdStr("| Voce perdeu! |");
  6712  0059B6  0EBE               	movlw	low STR_56
  6713  0059B8  6E09               	movwf	lcdStr@str^0,c
  6714  0059BA  0E7E               	movlw	high STR_56
  6715  0059BC  6E0A               	movwf	(lcdStr@str+1)^0,c
  6716  0059BE  EC86  F02B         	call	_lcdStr	;wreg free
  6717  0059C2                     
  6718                           ;main.c: 304:     lcdPosition(2, 0);
  6719  0059C2  0E00               	movlw	0
  6720  0059C4  6E09               	movwf	lcdPosition@col^0,c
  6721  0059C6  0E02               	movlw	2
  6722  0059C8  ECA9  F02E         	call	_lcdPosition
  6723  0059CC                     
  6724                           ;main.c: 305:     lcdStr("| Score = ");
  6725  0059CC  0EEB               	movlw	low STR_57
  6726  0059CE  6E09               	movwf	lcdStr@str^0,c
  6727  0059D0  0E7F               	movlw	high STR_57
  6728  0059D2  6E0A               	movwf	(lcdStr@str+1)^0,c
  6729  0059D4  EC86  F02B         	call	_lcdStr	;wreg free
  6730                           
  6731                           ;main.c: 306:     lcdNumber(score);
  6732  0059D8  C072  F019         	movff	_score,lcdNumber@valor
  6733  0059DC  C073  F01A         	movff	_score+1,lcdNumber@valor+1
  6734  0059E0  EC3F  F02D         	call	_lcdNumber	;wreg free
  6735  0059E4                     
  6736                           ;main.c: 307:     lcdStr(" |");
  6737  0059E4  0E33               	movlw	low (STR_2+14)
  6738  0059E6  6E09               	movwf	lcdStr@str^0,c
  6739  0059E8  0E7E               	movlw	high (STR_2+14)
  6740  0059EA  6E0A               	movwf	(lcdStr@str+1)^0,c
  6741  0059EC  EC86  F02B         	call	_lcdStr	;wreg free
  6742  0059F0                     
  6743                           ;main.c: 308:     lcdPosition(3, 0);
  6744  0059F0  0E00               	movlw	0
  6745  0059F2  6E09               	movwf	lcdPosition@col^0,c
  6746  0059F4  0E03               	movlw	3
  6747  0059F6  ECA9  F02E         	call	_lcdPosition
  6748                           
  6749                           ;main.c: 309:     lcdStr("|--------------|");
  6750  0059FA  0EF1               	movlw	low STR_1
  6751  0059FC  6E09               	movwf	lcdStr@str^0,c
  6752  0059FE  0E7E               	movlw	high STR_1
  6753  005A00  6E0A               	movwf	(lcdStr@str+1)^0,c
  6754  005A02  EC86  F02B         	call	_lcdStr	;wreg free
  6755  005A06                     l454:
  6756  005A06  EF03  F02D         	goto	l454
  6757  005A0A  0012               	return		;funcret
  6758  005A0C                     __end_of_gameOver:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function _lcdStr *****************
  6762 ;; Defined at:
  6763 ;;		line 124 in file "lcd.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  str             2    8[COMRAM] PTR const unsigned char 
  6766 ;;		 -> STR_64(17), STR_63(3), STR_62(11), STR_61(17), 
  6767 ;;		 -> STR_60(17), STR_59(17), STR_58(3), STR_57(11), 
  6768 ;;		 -> STR_56(17), STR_55(17), STR_52(17), STR_51(17), 
  6769 ;;		 -> STR_50(17), STR_49(17), STR_48(17), STR_47(17), 
  6770 ;;		 -> STR_46(17), STR_45(17), STR_44(17), STR_43(17), 
  6771 ;;		 -> STR_42(17), STR_41(17), STR_40(17), STR_39(17), 
  6772 ;;		 -> STR_38(17), STR_37(17), STR_36(17), STR_35(17), 
  6773 ;;		 -> STR_34(17), STR_33(17), STR_32(17), STR_31(17), 
  6774 ;;		 -> STR_30(17), STR_29(17), STR_28(17), STR_27(17), 
  6775 ;;		 -> STR_26(17), STR_25(17), STR_24(17), STR_23(17), 
  6776 ;;		 -> STR_22(17), STR_21(17), STR_20(17), STR_19(17), 
  6777 ;;		 -> STR_18(17), STR_17(17), STR_16(17), STR_15(17), 
  6778 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(17), 
  6779 ;;		 -> STR_10(17), STR_9(17), STR_8(17), STR_7(17), 
  6780 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_3(17), 
  6781 ;;		 -> STR_2(17), STR_1(17), 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  i               1   12[COMRAM] unsigned char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  1    wreg      void 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6793 ;;      Params:         2       0       0       0       0       0       0
  6794 ;;      Locals:         1       0       0       0       0       0       0
  6795 ;;      Temps:          2       0       0       0       0       0       0
  6796 ;;      Totals:         5       0       0       0       0       0       0
  6797 ;;Total ram usage:        5 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    2
  6800 ;; This function calls:
  6801 ;;		_lcdChar
  6802 ;; This function is called by:
  6803 ;;		_titleScreen
  6804 ;;		_gameOver
  6805 ;;		_youWin
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text22
  6810  00570C                     __ptext22:
  6811                           	callstack 0
  6812  00570C                     _lcdStr:
  6813                           	callstack 27
  6814  00570C                     
  6815                           ;lcd.c: 125:     unsigned char i = 0;
  6816  00570C  0E00               	movlw	0
  6817  00570E  6E0D               	movwf	lcdStr@i^0,c
  6818                           
  6819                           ;lcd.c: 127:     while (str[i] != 0) {
  6820  005710  EF99  F02B         	goto	l2607
  6821  005714                     l2603:
  6822                           
  6823                           ;lcd.c: 128:         lcdChar(str[i]);
  6824  005714  500D               	movf	lcdStr@i^0,w,c
  6825  005716  2409               	addwf	lcdStr@str^0,w,c
  6826  005718  6E0B               	movwf	??_lcdStr^0,c
  6827  00571A  0E00               	movlw	0
  6828  00571C  200A               	addwfc	(lcdStr@str+1)^0,w,c
  6829  00571E  6E0C               	movwf	(??_lcdStr+1)^0,c
  6830  005720  C00B  FFF6         	movff	??_lcdStr,tblptrl
  6831  005724  C00C  FFF7         	movff	??_lcdStr+1,tblptrh
  6832  005728                     	if	0	;tblptru may be non-zero
  6833  005728                     	endif
  6834  005728                     	if	0	;tblptru may be non-zero
  6835  005728                     	endif
  6836  005728  0008               	tblrd		*
  6837  00572A  50F5               	movf	tablat,w,c
  6838  00572C  ECAE  F02B         	call	_lcdChar
  6839  005730                     
  6840                           ;lcd.c: 129:         i++;
  6841  005730  2A0D               	incf	lcdStr@i^0,f,c
  6842  005732                     l2607:
  6843                           
  6844                           ;lcd.c: 127:     while (str[i] != 0) {
  6845  005732  500D               	movf	lcdStr@i^0,w,c
  6846  005734  2409               	addwf	lcdStr@str^0,w,c
  6847  005736  6E0B               	movwf	??_lcdStr^0,c
  6848  005738  0E00               	movlw	0
  6849  00573A  200A               	addwfc	(lcdStr@str+1)^0,w,c
  6850  00573C  6E0C               	movwf	(??_lcdStr+1)^0,c
  6851  00573E  C00B  FFF6         	movff	??_lcdStr,tblptrl
  6852  005742  C00C  FFF7         	movff	??_lcdStr+1,tblptrh
  6853  005746                     	if	0	;tblptru may be non-zero
  6854  005746                     	endif
  6855  005746                     	if	0	;tblptru may be non-zero
  6856  005746                     	endif
  6857  005746  0008               	tblrd		*
  6858  005748  50F5               	movf	tablat,w,c
  6859  00574A  0900               	iorlw	0
  6860  00574C  A4D8               	btfss	status,2,c
  6861  00574E  EFAB  F02B         	goto	u2091
  6862  005752  EFAD  F02B         	goto	u2090
  6863  005756                     u2091:
  6864  005756  EF8A  F02B         	goto	l2603
  6865  00575A                     u2090:
  6866  00575A  0012               	return		;funcret
  6867  00575C                     __end_of_lcdStr:
  6868                           	callstack 0
  6869                           
  6870 ;; *************** function _lcdPosition *****************
  6871 ;; Defined at:
  6872 ;;		line 145 in file "lcd.c"
  6873 ;; Parameters:    Size  Location     Type
  6874 ;;  line            1    wreg     unsigned char 
  6875 ;;  col             1    8[COMRAM] unsigned char 
  6876 ;; Auto vars:     Size  Location     Type
  6877 ;;  line            1   11[COMRAM] unsigned char 
  6878 ;;  command         1   12[COMRAM] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, status,2, status,0, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6888 ;;      Params:         1       0       0       0       0       0       0
  6889 ;;      Locals:         2       0       0       0       0       0       0
  6890 ;;      Temps:          2       0       0       0       0       0       0
  6891 ;;      Totals:         5       0       0       0       0       0       0
  6892 ;;Total ram usage:        5 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    3
  6895 ;; This function calls:
  6896 ;;		_lcdCommand
  6897 ;; This function is called by:
  6898 ;;		_titleScreen
  6899 ;;		_updateScreen
  6900 ;;		_gameOver
  6901 ;;		_youWin
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text23
  6906  005D52                     __ptext23:
  6907                           	callstack 0
  6908  005D52                     _lcdPosition:
  6909                           	callstack 26
  6910                           
  6911                           ;incstack = 0
  6912                           ;lcdPosition@line stored from wreg
  6913  005D52  6E0C               	movwf	lcdPosition@line^0,c
  6914  005D54                     
  6915                           ;lcd.c: 146:     unsigned char command;;lcd.c: 148:     switch (line) {
  6916  005D54  EFCC  F02E         	goto	l2629
  6917  005D58                     l2611:
  6918                           
  6919                           ;lcd.c: 150:             command = 0x80 + col;
  6920  005D58  5009               	movf	lcdPosition@col^0,w,c
  6921  005D5A  0F80               	addlw	128
  6922  005D5C  6E0D               	movwf	lcdPosition@command^0,c
  6923  005D5E                     
  6924                           ;lcd.c: 151:             lcdCommand(command);
  6925  005D5E  500D               	movf	lcdPosition@command^0,w,c
  6926  005D60  EC2B  F02E         	call	_lcdCommand
  6927                           
  6928                           ;lcd.c: 152:             break;
  6929  005D64  EFE9  F02E         	goto	l172
  6930  005D68                     l2615:
  6931                           
  6932                           ;lcd.c: 154:             command = 0xC0 + col;
  6933  005D68  5009               	movf	lcdPosition@col^0,w,c
  6934  005D6A  0FC0               	addlw	192
  6935  005D6C  6E0D               	movwf	lcdPosition@command^0,c
  6936  005D6E                     
  6937                           ;lcd.c: 155:             lcdCommand(command);
  6938  005D6E  500D               	movf	lcdPosition@command^0,w,c
  6939  005D70  EC2B  F02E         	call	_lcdCommand
  6940                           
  6941                           ;lcd.c: 156:             break;
  6942  005D74  EFE9  F02E         	goto	l172
  6943  005D78                     l2619:
  6944                           
  6945                           ;lcd.c: 158:             command = 0x90 + col;
  6946  005D78  5009               	movf	lcdPosition@col^0,w,c
  6947  005D7A  0F90               	addlw	144
  6948  005D7C  6E0D               	movwf	lcdPosition@command^0,c
  6949  005D7E                     
  6950                           ;lcd.c: 159:             lcdCommand(command);
  6951  005D7E  500D               	movf	lcdPosition@command^0,w,c
  6952  005D80  EC2B  F02E         	call	_lcdCommand
  6953                           
  6954                           ;lcd.c: 160:             break;
  6955  005D84  EFE9  F02E         	goto	l172
  6956  005D88                     l2623:
  6957                           
  6958                           ;lcd.c: 162:             command = 0xD0 + col;
  6959  005D88  5009               	movf	lcdPosition@col^0,w,c
  6960  005D8A  0FD0               	addlw	208
  6961  005D8C  6E0D               	movwf	lcdPosition@command^0,c
  6962  005D8E                     
  6963                           ;lcd.c: 163:             lcdCommand(command);
  6964  005D8E  500D               	movf	lcdPosition@command^0,w,c
  6965  005D90  EC2B  F02E         	call	_lcdCommand
  6966                           
  6967                           ;lcd.c: 164:             break;
  6968  005D94  EFE9  F02E         	goto	l172
  6969  005D98                     l2629:
  6970  005D98  500C               	movf	lcdPosition@line^0,w,c
  6971  005D9A  6E0A               	movwf	??_lcdPosition^0,c
  6972  005D9C  6A0B               	clrf	(??_lcdPosition+1)^0,c
  6973                           
  6974                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6975                           ; Switch size 1, requested type "simple"
  6976                           ; Number of cases is 1, Range of values is 0 to 0
  6977                           ; switch strategies available:
  6978                           ; Name         Instructions Cycles
  6979                           ; simple_byte            4     3 (average)
  6980                           ;	Chosen strategy is simple_byte
  6981  005D9E  500B               	movf	(??_lcdPosition+1)^0,w,c
  6982  005DA0  0A00               	xorlw	0	; case 0
  6983  005DA2  B4D8               	btfsc	status,2,c
  6984  005DA4  EFD6  F02E         	goto	l3663
  6985  005DA8  EFE9  F02E         	goto	l172
  6986  005DAC                     l3663:
  6987                           
  6988                           ; Switch size 1, requested type "simple"
  6989                           ; Number of cases is 4, Range of values is 0 to 3
  6990                           ; switch strategies available:
  6991                           ; Name         Instructions Cycles
  6992                           ; simple_byte           13     7 (average)
  6993                           ;	Chosen strategy is simple_byte
  6994  005DAC  500A               	movf	??_lcdPosition^0,w,c
  6995  005DAE  0A00               	xorlw	0	; case 0
  6996  005DB0  B4D8               	btfsc	status,2,c
  6997  005DB2  EFAC  F02E         	goto	l2611
  6998  005DB6  0A01               	xorlw	1	; case 1
  6999  005DB8  B4D8               	btfsc	status,2,c
  7000  005DBA  EFB4  F02E         	goto	l2615
  7001  005DBE  0A03               	xorlw	3	; case 2
  7002  005DC0  B4D8               	btfsc	status,2,c
  7003  005DC2  EFBC  F02E         	goto	l2619
  7004  005DC6  0A01               	xorlw	1	; case 3
  7005  005DC8  B4D8               	btfsc	status,2,c
  7006  005DCA  EFC4  F02E         	goto	l2623
  7007  005DCE  EFE9  F02E         	goto	l172
  7008  005DD2                     l172:
  7009  005DD2  0012               	return		;funcret
  7010  005DD4                     __end_of_lcdPosition:
  7011                           	callstack 0
  7012                           
  7013 ;; *************** function _lcdCommand *****************
  7014 ;; Defined at:
  7015 ;;		line 42 in file "lcd.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  cmd             1    wreg     unsigned char 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  cmd             1    7[COMRAM] unsigned char 
  7020 ;;  old_D           1    6[COMRAM] unsigned char 
  7021 ;; Return value:  Size  Location     Type
  7022 ;;                  1    wreg      void 
  7023 ;; Registers used:
  7024 ;;		wreg, status,2, status,0, cstack
  7025 ;; Tracked objects:
  7026 ;;		On entry : 0/0
  7027 ;;		On exit  : 0/0
  7028 ;;		Unchanged: 0/0
  7029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7030 ;;      Params:         0       0       0       0       0       0       0
  7031 ;;      Locals:         2       0       0       0       0       0       0
  7032 ;;      Temps:          0       0       0       0       0       0       0
  7033 ;;      Totals:         2       0       0       0       0       0       0
  7034 ;;Total ram usage:        2 bytes
  7035 ;; Hardware stack levels used:    1
  7036 ;; Hardware stack levels required when called:    2
  7037 ;; This function calls:
  7038 ;;		_Delay2ms
  7039 ;;		_Delay40us
  7040 ;;		_digitalWrite
  7041 ;; This function is called by:
  7042 ;;		_lcdInit
  7043 ;;		_lcdPosition
  7044 ;;		_main
  7045 ;;		_gameOver
  7046 ;;		_youWin
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text24
  7051  005C56                     __ptext24:
  7052                           	callstack 0
  7053  005C56                     _lcdCommand:
  7054                           	callstack 26
  7055                           
  7056                           ;incstack = 0
  7057                           ;lcdCommand@cmd stored from wreg
  7058  005C56  6E08               	movwf	lcdCommand@cmd^0,c
  7059  005C58                     
  7060                           ;lcd.c: 43:     unsigned char old_D;;lcd.c: 44:     old_D = PORTD;
  7061  005C58  CF83 F007          	movff	3971,lcdCommand@old_D	;volatile
  7062  005C5C                     
  7063                           ;lcd.c: 47:     TRISD = 0x00;
  7064  005C5C  0E00               	movlw	0
  7065  005C5E  6E95               	movwf	149,c	;volatile
  7066  005C60                     
  7067                           ;lcd.c: 49:     digitalWrite(PIN_E2, 0);
  7068  005C60  0E00               	movlw	0
  7069  005C62  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7070  005C64  0E22               	movlw	34
  7071  005C66  6E01               	movwf	digitalWrite@pin^0,c
  7072  005C68  0E00               	movlw	0
  7073  005C6A  6E04               	movwf	(digitalWrite@value+1)^0,c
  7074  005C6C  0E00               	movlw	0
  7075  005C6E  6E03               	movwf	digitalWrite@value^0,c
  7076  005C70  ECCA  F032         	call	_digitalWrite	;wreg free
  7077  005C74                     
  7078                           ;lcd.c: 50:     PORTD = cmd;
  7079  005C74  C008  FF83         	movff	lcdCommand@cmd,3971	;volatile
  7080  005C78                     
  7081                           ;lcd.c: 52:     digitalWrite(PIN_E1, 1);
  7082  005C78  0E00               	movlw	0
  7083  005C7A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7084  005C7C  0E21               	movlw	33
  7085  005C7E  6E01               	movwf	digitalWrite@pin^0,c
  7086  005C80  0E00               	movlw	0
  7087  005C82  6E04               	movwf	(digitalWrite@value+1)^0,c
  7088  005C84  0E01               	movlw	1
  7089  005C86  6E03               	movwf	digitalWrite@value^0,c
  7090  005C88  ECCA  F032         	call	_digitalWrite	;wreg free
  7091  005C8C                     
  7092                           ;lcd.c: 53:     digitalWrite(PIN_E1, 0);
  7093  005C8C  0E00               	movlw	0
  7094  005C8E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7095  005C90  0E21               	movlw	33
  7096  005C92  6E01               	movwf	digitalWrite@pin^0,c
  7097  005C94  0E00               	movlw	0
  7098  005C96  6E04               	movwf	(digitalWrite@value+1)^0,c
  7099  005C98  0E00               	movlw	0
  7100  005C9A  6E03               	movwf	digitalWrite@value^0,c
  7101  005C9C  ECCA  F032         	call	_digitalWrite	;wreg free
  7102  005CA0                     
  7103                           ;lcd.c: 56:     PORTD = old_D;
  7104  005CA0  C007  FF83         	movff	lcdCommand@old_D,3971	;volatile
  7105  005CA4                     
  7106                           ;lcd.c: 58:     if ((cmd == 0x02) || (cmd == 0x01)) {
  7107  005CA4  0E02               	movlw	2
  7108  005CA6  1808               	xorwf	lcdCommand@cmd^0,w,c
  7109  005CA8  B4D8               	btfsc	status,2,c
  7110  005CAA  EF59  F02E         	goto	u1941
  7111  005CAE  EF5B  F02E         	goto	u1940
  7112  005CB2                     u1941:
  7113  005CB2  EF63  F02E         	goto	l2495
  7114  005CB6                     u1940:
  7115  005CB6  0408               	decf	lcdCommand@cmd^0,w,c
  7116  005CB8  A4D8               	btfss	status,2,c
  7117  005CBA  EF61  F02E         	goto	u1951
  7118  005CBE  EF63  F02E         	goto	u1950
  7119  005CC2                     u1951:
  7120  005CC2  EF67  F02E         	goto	l2497
  7121  005CC6                     u1950:
  7122  005CC6                     l2495:
  7123                           
  7124                           ;lcd.c: 59:         Delay2ms();
  7125  005CC6  EC45  F02B         	call	_Delay2ms	;wreg free
  7126                           
  7127                           ;lcd.c: 60:     } else {
  7128  005CCA  EF69  F02E         	goto	l137
  7129  005CCE                     l2497:
  7130                           
  7131                           ;lcd.c: 61:         Delay40us();
  7132  005CCE  EC39  F02B         	call	_Delay40us	;wreg free
  7133  005CD2                     l137:
  7134  005CD2  0012               	return		;funcret
  7135  005CD4                     __end_of_lcdCommand:
  7136                           	callstack 0
  7137                           
  7138 ;; *************** function _Delay2ms *****************
  7139 ;; Defined at:
  7140 ;;		line 35 in file "lcd.c"
  7141 ;; Parameters:    Size  Location     Type
  7142 ;;		None
  7143 ;; Auto vars:     Size  Location     Type
  7144 ;;  i               1    1[COMRAM] unsigned char 
  7145 ;; Return value:  Size  Location     Type
  7146 ;;                  1    wreg      void 
  7147 ;; Registers used:
  7148 ;;		wreg, status,2, status,0, cstack
  7149 ;; Tracked objects:
  7150 ;;		On entry : 0/0
  7151 ;;		On exit  : 0/0
  7152 ;;		Unchanged: 0/0
  7153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7154 ;;      Params:         0       0       0       0       0       0       0
  7155 ;;      Locals:         1       0       0       0       0       0       0
  7156 ;;      Temps:          0       0       0       0       0       0       0
  7157 ;;      Totals:         1       0       0       0       0       0       0
  7158 ;;Total ram usage:        1 bytes
  7159 ;; Hardware stack levels used:    1
  7160 ;; Hardware stack levels required when called:    1
  7161 ;; This function calls:
  7162 ;;		_Delay40us
  7163 ;; This function is called by:
  7164 ;;		_lcdCommand
  7165 ;;		_lcdInit
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text25
  7170  00568A                     __ptext25:
  7171                           	callstack 0
  7172  00568A                     _Delay2ms:
  7173                           	callstack 26
  7174  00568A                     
  7175                           ;lcd.c: 36:     unsigned char i;;lcd.c: 37:     for (i = 0; i < 50; i++) {
  7176  00568A  0E00               	movlw	0
  7177  00568C  6E02               	movwf	Delay2ms@i^0,c
  7178  00568E                     l2471:
  7179                           
  7180                           ;lcd.c: 38:         Delay40us();
  7181  00568E  EC39  F02B         	call	_Delay40us	;wreg free
  7182  005692                     
  7183                           ;lcd.c: 39:     }
  7184  005692  2A02               	incf	Delay2ms@i^0,f,c
  7185  005694  0E31               	movlw	49
  7186  005696  6402               	cpfsgt	Delay2ms@i^0,c
  7187  005698  EF50  F02B         	goto	u1931
  7188  00569C  EF52  F02B         	goto	u1930
  7189  0056A0                     u1931:
  7190  0056A0  EF47  F02B         	goto	l2471
  7191  0056A4                     u1930:
  7192  0056A4  0012               	return		;funcret
  7193  0056A6                     __end_of_Delay2ms:
  7194                           	callstack 0
  7195                           
  7196 ;; *************** function _lcdNumber *****************
  7197 ;; Defined at:
  7198 ;;		line 86 in file "lcd.c"
  7199 ;; Parameters:    Size  Location     Type
  7200 ;;  valor           2   24[COMRAM] int 
  7201 ;; Auto vars:     Size  Location     Type
  7202 ;;  i               2   26[COMRAM] int 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  1    wreg      void 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0, cstack
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7212 ;;      Params:         2       0       0       0       0       0       0
  7213 ;;      Locals:         2       0       0       0       0       0       0
  7214 ;;      Temps:          0       0       0       0       0       0       0
  7215 ;;      Totals:         4       0       0       0       0       0       0
  7216 ;;Total ram usage:        4 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    2
  7219 ;; This function calls:
  7220 ;;		___awdiv
  7221 ;;		___awmod
  7222 ;;		_lcdChar
  7223 ;; This function is called by:
  7224 ;;		_gameOver
  7225 ;;		_youWin
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           	psect	text26
  7230  005A7E                     __ptext26:
  7231                           	callstack 0
  7232  005A7E                     _lcdNumber:
  7233                           	callstack 26
  7234  005A7E                     
  7235                           ;lcd.c: 87:     int i = 1000;
  7236  005A7E  0E03               	movlw	3
  7237  005A80  6E1C               	movwf	(lcdNumber@i+1)^0,c
  7238  005A82  0EE8               	movlw	232
  7239  005A84  6E1B               	movwf	lcdNumber@i^0,c
  7240                           
  7241                           ;lcd.c: 89:     while(i > 0) {
  7242  005A86  EF6B  F02D         	goto	l2599
  7243  005A8A                     l2597:
  7244                           
  7245                           ;lcd.c: 90:         lcdChar((valor / i) % 10 + 48);
  7246  005A8A  C01B  F003         	movff	lcdNumber@i,___awdiv@divisor
  7247  005A8E  C01C  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  7248  005A92  C019  F001         	movff	lcdNumber@valor,___awdiv@dividend
  7249  005A96  C01A  F002         	movff	lcdNumber@valor+1,___awdiv@dividend+1
  7250  005A9A  EC89  F02F         	call	___awdiv	;wreg free
  7251  005A9E  C001  F013         	movff	?___awdiv,___awmod@dividend
  7252  005AA2  C002  F014         	movff	?___awdiv+1,___awmod@dividend+1
  7253  005AA6  0E00               	movlw	0
  7254  005AA8  6E16               	movwf	(___awmod@divisor+1)^0,c
  7255  005AAA  0E0A               	movlw	10
  7256  005AAC  6E15               	movwf	___awmod@divisor^0,c
  7257  005AAE  EC31  F02F         	call	___awmod	;wreg free
  7258  005AB2  5013               	movf	?___awmod^0,w,c
  7259  005AB4  0F30               	addlw	48
  7260  005AB6  ECAE  F02B         	call	_lcdChar
  7261                           
  7262                           ;lcd.c: 91:         i /= 10;
  7263  005ABA  C01B  F001         	movff	lcdNumber@i,___awdiv@dividend
  7264  005ABE  C01C  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  7265  005AC2  0E00               	movlw	0
  7266  005AC4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7267  005AC6  0E0A               	movlw	10
  7268  005AC8  6E03               	movwf	___awdiv@divisor^0,c
  7269  005ACA  EC89  F02F         	call	___awdiv	;wreg free
  7270  005ACE  C001  F01B         	movff	?___awdiv,lcdNumber@i
  7271  005AD2  C002  F01C         	movff	?___awdiv+1,lcdNumber@i+1
  7272  005AD6                     l2599:
  7273                           
  7274                           ;lcd.c: 89:     while(i > 0) {
  7275  005AD6  BE1C               	btfsc	(lcdNumber@i+1)^0,7,c
  7276  005AD8  EF78  F02D         	goto	u2080
  7277  005ADC  501C               	movf	(lcdNumber@i+1)^0,w,c
  7278  005ADE  E106               	bnz	u2081
  7279  005AE0  041B               	decf	lcdNumber@i^0,w,c
  7280  005AE2  B0D8               	btfsc	status,0,c
  7281  005AE4  EF76  F02D         	goto	u2081
  7282  005AE8  EF78  F02D         	goto	u2080
  7283  005AEC                     u2081:
  7284  005AEC  EF45  F02D         	goto	l2597
  7285  005AF0                     u2080:
  7286  005AF0  0012               	return		;funcret
  7287  005AF2                     __end_of_lcdNumber:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function _lcdChar *****************
  7291 ;; Defined at:
  7292 ;;		line 67 in file "lcd.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  valor           1    wreg     unsigned char 
  7295 ;; Auto vars:     Size  Location     Type
  7296 ;;  valor           1    6[COMRAM] unsigned char 
  7297 ;;  old_D           1    7[COMRAM] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  1    wreg      void 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0, cstack
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7307 ;;      Params:         0       0       0       0       0       0       0
  7308 ;;      Locals:         2       0       0       0       0       0       0
  7309 ;;      Temps:          0       0       0       0       0       0       0
  7310 ;;      Totals:         2       0       0       0       0       0       0
  7311 ;;Total ram usage:        2 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; Hardware stack levels required when called:    1
  7314 ;; This function calls:
  7315 ;;		_Delay40us
  7316 ;;		_digitalWrite
  7317 ;; This function is called by:
  7318 ;;		_lcdNumber
  7319 ;;		_lcdStr
  7320 ;;		_lcdStrDelay
  7321 ;;		_main
  7322 ;;		_updateScreen
  7323 ;; This function uses a non-reentrant model
  7324 ;;
  7325                           
  7326                           	psect	text27
  7327  00575C                     __ptext27:
  7328                           	callstack 0
  7329  00575C                     _lcdChar:
  7330                           	callstack 28
  7331                           
  7332                           ;incstack = 0
  7333                           ;lcdChar@valor stored from wreg
  7334  00575C  6E07               	movwf	lcdChar@valor^0,c
  7335  00575E                     
  7336                           ;lcd.c: 69:     unsigned char old_D;;lcd.c: 70:     old_D = PORTD;
  7337  00575E  CF83 F008          	movff	3971,lcdChar@old_D	;volatile
  7338  005762                     
  7339                           ;lcd.c: 72:     TRISD = 0x00;
  7340  005762  0E00               	movlw	0
  7341  005764  6E95               	movwf	149,c	;volatile
  7342  005766                     
  7343                           ;lcd.c: 73:     digitalWrite(PIN_E2, 1);
  7344  005766  0E00               	movlw	0
  7345  005768  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7346  00576A  0E22               	movlw	34
  7347  00576C  6E01               	movwf	digitalWrite@pin^0,c
  7348  00576E  0E00               	movlw	0
  7349  005770  6E04               	movwf	(digitalWrite@value+1)^0,c
  7350  005772  0E01               	movlw	1
  7351  005774  6E03               	movwf	digitalWrite@value^0,c
  7352  005776  ECCA  F032         	call	_digitalWrite	;wreg free
  7353  00577A                     
  7354                           ;lcd.c: 75:     PORTD = valor;
  7355  00577A  C007  FF83         	movff	lcdChar@valor,3971	;volatile
  7356  00577E                     
  7357                           ;lcd.c: 77:     digitalWrite(PIN_E1, 1);
  7358  00577E  0E00               	movlw	0
  7359  005780  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7360  005782  0E21               	movlw	33
  7361  005784  6E01               	movwf	digitalWrite@pin^0,c
  7362  005786  0E00               	movlw	0
  7363  005788  6E04               	movwf	(digitalWrite@value+1)^0,c
  7364  00578A  0E01               	movlw	1
  7365  00578C  6E03               	movwf	digitalWrite@value^0,c
  7366  00578E  ECCA  F032         	call	_digitalWrite	;wreg free
  7367  005792                     
  7368                           ;lcd.c: 78:     digitalWrite(PIN_E1, 0);
  7369  005792  0E00               	movlw	0
  7370  005794  6E02               	movwf	(digitalWrite@pin+1)^0,c
  7371  005796  0E21               	movlw	33
  7372  005798  6E01               	movwf	digitalWrite@pin^0,c
  7373  00579A  0E00               	movlw	0
  7374  00579C  6E04               	movwf	(digitalWrite@value+1)^0,c
  7375  00579E  0E00               	movlw	0
  7376  0057A0  6E03               	movwf	digitalWrite@value^0,c
  7377  0057A2  ECCA  F032         	call	_digitalWrite	;wreg free
  7378  0057A6                     
  7379                           ;lcd.c: 80:     PORTD = old_D;
  7380  0057A6  C008  FF83         	movff	lcdChar@old_D,3971	;volatile
  7381  0057AA                     
  7382                           ;lcd.c: 82:     Delay40us();
  7383  0057AA  EC39  F02B         	call	_Delay40us	;wreg free
  7384  0057AE  0012               	return		;funcret
  7385  0057B0                     __end_of_lcdChar:
  7386                           	callstack 0
  7387                           
  7388 ;; *************** function _digitalWrite *****************
  7389 ;; Defined at:
  7390 ;;		line 14 in file "io.c"
  7391 ;; Parameters:    Size  Location     Type
  7392 ;;  pin             2    0[COMRAM] int 
  7393 ;;  value           2    2[COMRAM] int 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;		None
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      void 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7405 ;;      Params:         4       0       0       0       0       0       0
  7406 ;;      Locals:         0       0       0       0       0       0       0
  7407 ;;      Temps:          2       0       0       0       0       0       0
  7408 ;;      Totals:         6       0       0       0       0       0       0
  7409 ;;Total ram usage:        6 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; This function calls:
  7412 ;;		Nothing
  7413 ;; This function is called by:
  7414 ;;		_lcdCommand
  7415 ;;		_lcdChar
  7416 ;;		_ssdUpdate
  7417 ;; This function uses a non-reentrant model
  7418 ;;
  7419                           
  7420                           	psect	text28
  7421  006594                     __ptext28:
  7422                           	callstack 0
  7423  006594                     _digitalWrite:
  7424                           	callstack 28
  7425  006594                     
  7426                           ;io.c: 16:     if(pin <8){
  7427  006594  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7428  006596  EFD8  F032         	goto	u1730
  7429  00659A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7430  00659C  E107               	bnz	u1731
  7431  00659E  0E08               	movlw	8
  7432  0065A0  5C01               	subwf	digitalWrite@pin^0,w,c
  7433  0065A2  B0D8               	btfsc	status,0,c
  7434  0065A4  EFD6  F032         	goto	u1731
  7435  0065A8  EFD8  F032         	goto	u1730
  7436  0065AC                     u1731:
  7437  0065AC  EF02  F033         	goto	l2433
  7438  0065B0                     u1730:
  7439  0065B0                     
  7440                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  7441  0065B0  5003               	movf	digitalWrite@value^0,w,c
  7442  0065B2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7443  0065B4  B4D8               	btfsc	status,2,c
  7444  0065B6  EFDF  F032         	goto	u1741
  7445  0065BA  EFE1  F032         	goto	u1740
  7446  0065BE                     u1741:
  7447  0065BE  EFF1  F032         	goto	l2431
  7448  0065C2                     u1740:
  7449  0065C2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7450  0065C6  0E01               	movlw	1
  7451  0065C8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7452  0065CA  2A05               	incf	??_digitalWrite^0,f,c
  7453  0065CC  EFEA  F032         	goto	u1754
  7454  0065D0                     u1755:
  7455  0065D0  90D8               	bcf	status,0,c
  7456  0065D2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7457  0065D4                     u1754:
  7458  0065D4  2E05               	decfsz	??_digitalWrite^0,f,c
  7459  0065D6  EFE8  F032         	goto	u1755
  7460  0065DA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7461  0065DC  1280               	iorwf	128,f,c	;volatile
  7462  0065DE  EFF0  F033         	goto	l42
  7463  0065E2                     l2431:
  7464  0065E2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7465  0065E6  0E01               	movlw	1
  7466  0065E8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7467  0065EA  2A05               	incf	??_digitalWrite^0,f,c
  7468  0065EC  EFFA  F032         	goto	u1764
  7469  0065F0                     u1765:
  7470  0065F0  90D8               	bcf	status,0,c
  7471  0065F2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7472  0065F4                     u1764:
  7473  0065F4  2E05               	decfsz	??_digitalWrite^0,f,c
  7474  0065F6  EFF8  F032         	goto	u1765
  7475  0065FA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7476  0065FC  0AFF               	xorlw	255
  7477  0065FE  1680               	andwf	128,f,c	;volatile
  7478  006600  EFF0  F033         	goto	l42
  7479  006604                     l2433:
  7480  006604  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7481  006606  EF10  F033         	goto	u1770
  7482  00660A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7483  00660C  E107               	bnz	u1771
  7484  00660E  0E10               	movlw	16
  7485  006610  5C01               	subwf	digitalWrite@pin^0,w,c
  7486  006612  B0D8               	btfsc	status,0,c
  7487  006614  EF0E  F033         	goto	u1771
  7488  006618  EF10  F033         	goto	u1770
  7489  00661C                     u1771:
  7490  00661C  EF3E  F033         	goto	l2441
  7491  006620                     u1770:
  7492  006620                     
  7493                           ;io.c: 20:         pin -=8;
  7494  006620  0EF8               	movlw	248
  7495  006622  2601               	addwf	digitalWrite@pin^0,f,c
  7496  006624  0EFF               	movlw	255
  7497  006626  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7498                           
  7499                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  7500  006628  5003               	movf	digitalWrite@value^0,w,c
  7501  00662A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7502  00662C  B4D8               	btfsc	status,2,c
  7503  00662E  EF1B  F033         	goto	u1781
  7504  006632  EF1D  F033         	goto	u1780
  7505  006636                     u1781:
  7506  006636  EF2D  F033         	goto	l2439
  7507  00663A                     u1780:
  7508  00663A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7509  00663E  0E01               	movlw	1
  7510  006640  6E06               	movwf	(??_digitalWrite+1)^0,c
  7511  006642  2A05               	incf	??_digitalWrite^0,f,c
  7512  006644  EF26  F033         	goto	u1794
  7513  006648                     u1795:
  7514  006648  90D8               	bcf	status,0,c
  7515  00664A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7516  00664C                     u1794:
  7517  00664C  2E05               	decfsz	??_digitalWrite^0,f,c
  7518  00664E  EF24  F033         	goto	u1795
  7519  006652  5006               	movf	(??_digitalWrite+1)^0,w,c
  7520  006654  1281               	iorwf	129,f,c	;volatile
  7521  006656  EFF0  F033         	goto	l42
  7522  00665A                     l2439:
  7523  00665A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7524  00665E  0E01               	movlw	1
  7525  006660  6E06               	movwf	(??_digitalWrite+1)^0,c
  7526  006662  2A05               	incf	??_digitalWrite^0,f,c
  7527  006664  EF36  F033         	goto	u1804
  7528  006668                     u1805:
  7529  006668  90D8               	bcf	status,0,c
  7530  00666A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7531  00666C                     u1804:
  7532  00666C  2E05               	decfsz	??_digitalWrite^0,f,c
  7533  00666E  EF34  F033         	goto	u1805
  7534  006672  5006               	movf	(??_digitalWrite+1)^0,w,c
  7535  006674  0AFF               	xorlw	255
  7536  006676  1681               	andwf	129,f,c	;volatile
  7537  006678  EFF0  F033         	goto	l42
  7538  00667C                     l2441:
  7539  00667C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7540  00667E  EF4C  F033         	goto	u1810
  7541  006682  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7542  006684  E107               	bnz	u1811
  7543  006686  0E18               	movlw	24
  7544  006688  5C01               	subwf	digitalWrite@pin^0,w,c
  7545  00668A  B0D8               	btfsc	status,0,c
  7546  00668C  EF4A  F033         	goto	u1811
  7547  006690  EF4C  F033         	goto	u1810
  7548  006694                     u1811:
  7549  006694  EF7A  F033         	goto	l2449
  7550  006698                     u1810:
  7551  006698                     
  7552                           ;io.c: 24:         pin -=16;
  7553  006698  0EF0               	movlw	240
  7554  00669A  2601               	addwf	digitalWrite@pin^0,f,c
  7555  00669C  0EFF               	movlw	255
  7556  00669E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7557                           
  7558                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  7559  0066A0  5003               	movf	digitalWrite@value^0,w,c
  7560  0066A2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7561  0066A4  B4D8               	btfsc	status,2,c
  7562  0066A6  EF57  F033         	goto	u1821
  7563  0066AA  EF59  F033         	goto	u1820
  7564  0066AE                     u1821:
  7565  0066AE  EF69  F033         	goto	l2447
  7566  0066B2                     u1820:
  7567  0066B2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7568  0066B6  0E01               	movlw	1
  7569  0066B8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7570  0066BA  2A05               	incf	??_digitalWrite^0,f,c
  7571  0066BC  EF62  F033         	goto	u1834
  7572  0066C0                     u1835:
  7573  0066C0  90D8               	bcf	status,0,c
  7574  0066C2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7575  0066C4                     u1834:
  7576  0066C4  2E05               	decfsz	??_digitalWrite^0,f,c
  7577  0066C6  EF60  F033         	goto	u1835
  7578  0066CA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7579  0066CC  1282               	iorwf	130,f,c	;volatile
  7580  0066CE  EFF0  F033         	goto	l42
  7581  0066D2                     l2447:
  7582  0066D2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7583  0066D6  0E01               	movlw	1
  7584  0066D8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7585  0066DA  2A05               	incf	??_digitalWrite^0,f,c
  7586  0066DC  EF72  F033         	goto	u1844
  7587  0066E0                     u1845:
  7588  0066E0  90D8               	bcf	status,0,c
  7589  0066E2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7590  0066E4                     u1844:
  7591  0066E4  2E05               	decfsz	??_digitalWrite^0,f,c
  7592  0066E6  EF70  F033         	goto	u1845
  7593  0066EA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7594  0066EC  0AFF               	xorlw	255
  7595  0066EE  1682               	andwf	130,f,c	;volatile
  7596  0066F0  EFF0  F033         	goto	l42
  7597  0066F4                     l2449:
  7598  0066F4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7599  0066F6  EF88  F033         	goto	u1850
  7600  0066FA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7601  0066FC  E107               	bnz	u1851
  7602  0066FE  0E20               	movlw	32
  7603  006700  5C01               	subwf	digitalWrite@pin^0,w,c
  7604  006702  B0D8               	btfsc	status,0,c
  7605  006704  EF86  F033         	goto	u1851
  7606  006708  EF88  F033         	goto	u1850
  7607  00670C                     u1851:
  7608  00670C  EFB6  F033         	goto	l2457
  7609  006710                     u1850:
  7610  006710                     
  7611                           ;io.c: 28:         pin -=24;
  7612  006710  0EE8               	movlw	232
  7613  006712  2601               	addwf	digitalWrite@pin^0,f,c
  7614  006714  0EFF               	movlw	255
  7615  006716  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7616                           
  7617                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  7618  006718  5003               	movf	digitalWrite@value^0,w,c
  7619  00671A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7620  00671C  B4D8               	btfsc	status,2,c
  7621  00671E  EF93  F033         	goto	u1861
  7622  006722  EF95  F033         	goto	u1860
  7623  006726                     u1861:
  7624  006726  EFA5  F033         	goto	l2455
  7625  00672A                     u1860:
  7626  00672A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7627  00672E  0E01               	movlw	1
  7628  006730  6E06               	movwf	(??_digitalWrite+1)^0,c
  7629  006732  2A05               	incf	??_digitalWrite^0,f,c
  7630  006734  EF9E  F033         	goto	u1874
  7631  006738                     u1875:
  7632  006738  90D8               	bcf	status,0,c
  7633  00673A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7634  00673C                     u1874:
  7635  00673C  2E05               	decfsz	??_digitalWrite^0,f,c
  7636  00673E  EF9C  F033         	goto	u1875
  7637  006742  5006               	movf	(??_digitalWrite+1)^0,w,c
  7638  006744  1283               	iorwf	131,f,c	;volatile
  7639  006746  EFF0  F033         	goto	l42
  7640  00674A                     l2455:
  7641  00674A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7642  00674E  0E01               	movlw	1
  7643  006750  6E06               	movwf	(??_digitalWrite+1)^0,c
  7644  006752  2A05               	incf	??_digitalWrite^0,f,c
  7645  006754  EFAE  F033         	goto	u1884
  7646  006758                     u1885:
  7647  006758  90D8               	bcf	status,0,c
  7648  00675A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7649  00675C                     u1884:
  7650  00675C  2E05               	decfsz	??_digitalWrite^0,f,c
  7651  00675E  EFAC  F033         	goto	u1885
  7652  006762  5006               	movf	(??_digitalWrite+1)^0,w,c
  7653  006764  0AFF               	xorlw	255
  7654  006766  1683               	andwf	131,f,c	;volatile
  7655  006768  EFF0  F033         	goto	l42
  7656  00676C                     l2457:
  7657  00676C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  7658  00676E  EFC4  F033         	goto	u1890
  7659  006772  5002               	movf	(digitalWrite@pin+1)^0,w,c
  7660  006774  E107               	bnz	u1891
  7661  006776  0E28               	movlw	40
  7662  006778  5C01               	subwf	digitalWrite@pin^0,w,c
  7663  00677A  B0D8               	btfsc	status,0,c
  7664  00677C  EFC2  F033         	goto	u1891
  7665  006780  EFC4  F033         	goto	u1890
  7666  006784                     u1891:
  7667  006784  EFF0  F033         	goto	l42
  7668  006788                     u1890:
  7669  006788                     
  7670                           ;io.c: 32:         pin -=32;
  7671  006788  0EE0               	movlw	224
  7672  00678A  2601               	addwf	digitalWrite@pin^0,f,c
  7673  00678C  0EFF               	movlw	255
  7674  00678E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  7675                           
  7676                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  7677  006790  5003               	movf	digitalWrite@value^0,w,c
  7678  006792  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  7679  006794  B4D8               	btfsc	status,2,c
  7680  006796  EFCF  F033         	goto	u1901
  7681  00679A  EFD1  F033         	goto	u1900
  7682  00679E                     u1901:
  7683  00679E  EFE1  F033         	goto	l2463
  7684  0067A2                     u1900:
  7685  0067A2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7686  0067A6  0E01               	movlw	1
  7687  0067A8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7688  0067AA  2A05               	incf	??_digitalWrite^0,f,c
  7689  0067AC  EFDA  F033         	goto	u1914
  7690  0067B0                     u1915:
  7691  0067B0  90D8               	bcf	status,0,c
  7692  0067B2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7693  0067B4                     u1914:
  7694  0067B4  2E05               	decfsz	??_digitalWrite^0,f,c
  7695  0067B6  EFD8  F033         	goto	u1915
  7696  0067BA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7697  0067BC  1284               	iorwf	132,f,c	;volatile
  7698  0067BE  EFF0  F033         	goto	l42
  7699  0067C2                     l2463:
  7700  0067C2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  7701  0067C6  0E01               	movlw	1
  7702  0067C8  6E06               	movwf	(??_digitalWrite+1)^0,c
  7703  0067CA  2A05               	incf	??_digitalWrite^0,f,c
  7704  0067CC  EFEA  F033         	goto	u1924
  7705  0067D0                     u1925:
  7706  0067D0  90D8               	bcf	status,0,c
  7707  0067D2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  7708  0067D4                     u1924:
  7709  0067D4  2E05               	decfsz	??_digitalWrite^0,f,c
  7710  0067D6  EFE8  F033         	goto	u1925
  7711  0067DA  5006               	movf	(??_digitalWrite+1)^0,w,c
  7712  0067DC  0AFF               	xorlw	255
  7713  0067DE  1684               	andwf	132,f,c	;volatile
  7714  0067E0                     l42:
  7715  0067E0  0012               	return		;funcret
  7716  0067E2                     __end_of_digitalWrite:
  7717                           	callstack 0
  7718                           
  7719 ;; *************** function _Delay40us *****************
  7720 ;; Defined at:
  7721 ;;		line 30 in file "lcd.c"
  7722 ;; Parameters:    Size  Location     Type
  7723 ;;		None
  7724 ;; Auto vars:     Size  Location     Type
  7725 ;;  i               1    0[COMRAM] unsigned char 
  7726 ;; Return value:  Size  Location     Type
  7727 ;;                  1    wreg      void 
  7728 ;; Registers used:
  7729 ;;		wreg, status,2, status,0
  7730 ;; Tracked objects:
  7731 ;;		On entry : 0/0
  7732 ;;		On exit  : 0/0
  7733 ;;		Unchanged: 0/0
  7734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7735 ;;      Params:         0       0       0       0       0       0       0
  7736 ;;      Locals:         1       0       0       0       0       0       0
  7737 ;;      Temps:          0       0       0       0       0       0       0
  7738 ;;      Totals:         1       0       0       0       0       0       0
  7739 ;;Total ram usage:        1 bytes
  7740 ;; Hardware stack levels used:    1
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_Delay2ms
  7745 ;;		_lcdCommand
  7746 ;;		_lcdChar
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text29
  7751  005672                     __ptext29:
  7752                           	callstack 0
  7753  005672                     _Delay40us:
  7754                           	callstack 27
  7755  005672                     
  7756                           ;lcd.c: 31:     unsigned char i;;lcd.c: 32:     for (i = 0; i < 25; i++);
  7757  005672  0E00               	movlw	0
  7758  005674  6E01               	movwf	Delay40us@i^0,c
  7759  005676                     l2421:
  7760  005676  2A01               	incf	Delay40us@i^0,f,c
  7761  005678  0E18               	movlw	24
  7762  00567A  6401               	cpfsgt	Delay40us@i^0,c
  7763  00567C  EF42  F02B         	goto	u1721
  7764  005680  EF44  F02B         	goto	u1720
  7765  005684                     u1721:
  7766  005684  EF3B  F02B         	goto	l2421
  7767  005688                     u1720:
  7768  005688  0012               	return		;funcret
  7769  00568A                     __end_of_Delay40us:
  7770                           	callstack 0
  7771                           
  7772 ;; *************** function ___awmod *****************
  7773 ;; Defined at:
  7774 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  7775 ;; Parameters:    Size  Location     Type
  7776 ;;  dividend        2   18[COMRAM] int 
  7777 ;;  divisor         2   20[COMRAM] int 
  7778 ;; Auto vars:     Size  Location     Type
  7779 ;;  sign            1   23[COMRAM] unsigned char 
  7780 ;;  counter         1   22[COMRAM] unsigned char 
  7781 ;; Return value:  Size  Location     Type
  7782 ;;                  2   18[COMRAM] int 
  7783 ;; Registers used:
  7784 ;;		wreg, status,2, status,0
  7785 ;; Tracked objects:
  7786 ;;		On entry : 0/0
  7787 ;;		On exit  : 0/0
  7788 ;;		Unchanged: 0/0
  7789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7790 ;;      Params:         4       0       0       0       0       0       0
  7791 ;;      Locals:         2       0       0       0       0       0       0
  7792 ;;      Temps:          0       0       0       0       0       0       0
  7793 ;;      Totals:         6       0       0       0       0       0       0
  7794 ;;Total ram usage:        6 bytes
  7795 ;; Hardware stack levels used:    1
  7796 ;; This function calls:
  7797 ;;		Nothing
  7798 ;; This function is called by:
  7799 ;;		_lcdNumber
  7800 ;;		_gameLogic
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text30
  7805  005E62                     __ptext30:
  7806                           	callstack 0
  7807  005E62                     ___awmod:
  7808                           	callstack 27
  7809  005E62  0E00               	movlw	0
  7810  005E64  6E18               	movwf	___awmod@sign^0,c
  7811  005E66  BE14               	btfsc	(___awmod@dividend+1)^0,7,c
  7812  005E68  EF3A  F02F         	goto	u2020
  7813  005E6C  EF38  F02F         	goto	u2021
  7814  005E70                     u2021:
  7815  005E70  EF40  F02F         	goto	l2567
  7816  005E74                     u2020:
  7817  005E74  6C13               	negf	___awmod@dividend^0,c
  7818  005E76  1E14               	comf	(___awmod@dividend+1)^0,f,c
  7819  005E78  B0D8               	btfsc	status,0,c
  7820  005E7A  2A14               	incf	(___awmod@dividend+1)^0,f,c
  7821  005E7C  0E01               	movlw	1
  7822  005E7E  6E18               	movwf	___awmod@sign^0,c
  7823  005E80                     l2567:
  7824  005E80  BE16               	btfsc	(___awmod@divisor+1)^0,7,c
  7825  005E82  EF47  F02F         	goto	u2030
  7826  005E86  EF45  F02F         	goto	u2031
  7827  005E8A                     u2031:
  7828  005E8A  EF4B  F02F         	goto	l2571
  7829  005E8E                     u2030:
  7830  005E8E  6C15               	negf	___awmod@divisor^0,c
  7831  005E90  1E16               	comf	(___awmod@divisor+1)^0,f,c
  7832  005E92  B0D8               	btfsc	status,0,c
  7833  005E94  2A16               	incf	(___awmod@divisor+1)^0,f,c
  7834  005E96                     l2571:
  7835  005E96  5015               	movf	___awmod@divisor^0,w,c
  7836  005E98  1016               	iorwf	(___awmod@divisor+1)^0,w,c
  7837  005E9A  B4D8               	btfsc	status,2,c
  7838  005E9C  EF52  F02F         	goto	u2041
  7839  005EA0  EF54  F02F         	goto	u2040
  7840  005EA4                     u2041:
  7841  005EA4  EF78  F02F         	goto	l2587
  7842  005EA8                     u2040:
  7843  005EA8  0E01               	movlw	1
  7844  005EAA  6E17               	movwf	___awmod@counter^0,c
  7845  005EAC  EF5C  F02F         	goto	l2577
  7846  005EB0                     l2575:
  7847  005EB0  90D8               	bcf	status,0,c
  7848  005EB2  3615               	rlcf	___awmod@divisor^0,f,c
  7849  005EB4  3616               	rlcf	(___awmod@divisor+1)^0,f,c
  7850  005EB6  2A17               	incf	___awmod@counter^0,f,c
  7851  005EB8                     l2577:
  7852  005EB8  AE16               	btfss	(___awmod@divisor+1)^0,7,c
  7853  005EBA  EF61  F02F         	goto	u2051
  7854  005EBE  EF63  F02F         	goto	u2050
  7855  005EC2                     u2051:
  7856  005EC2  EF58  F02F         	goto	l2575
  7857  005EC6                     u2050:
  7858  005EC6                     l2579:
  7859  005EC6  5015               	movf	___awmod@divisor^0,w,c
  7860  005EC8  5C13               	subwf	___awmod@dividend^0,w,c
  7861  005ECA  5016               	movf	(___awmod@divisor+1)^0,w,c
  7862  005ECC  5814               	subwfb	(___awmod@dividend+1)^0,w,c
  7863  005ECE  A0D8               	btfss	status,0,c
  7864  005ED0  EF6C  F02F         	goto	u2061
  7865  005ED4  EF6E  F02F         	goto	u2060
  7866  005ED8                     u2061:
  7867  005ED8  EF72  F02F         	goto	l2583
  7868  005EDC                     u2060:
  7869  005EDC  5015               	movf	___awmod@divisor^0,w,c
  7870  005EDE  5E13               	subwf	___awmod@dividend^0,f,c
  7871  005EE0  5016               	movf	(___awmod@divisor+1)^0,w,c
  7872  005EE2  5A14               	subwfb	(___awmod@dividend+1)^0,f,c
  7873  005EE4                     l2583:
  7874  005EE4  90D8               	bcf	status,0,c
  7875  005EE6  3216               	rrcf	(___awmod@divisor+1)^0,f,c
  7876  005EE8  3215               	rrcf	___awmod@divisor^0,f,c
  7877  005EEA  2E17               	decfsz	___awmod@counter^0,f,c
  7878  005EEC  EF63  F02F         	goto	l2579
  7879  005EF0                     l2587:
  7880  005EF0  5018               	movf	___awmod@sign^0,w,c
  7881  005EF2  B4D8               	btfsc	status,2,c
  7882  005EF4  EF7E  F02F         	goto	u2071
  7883  005EF8  EF80  F02F         	goto	u2070
  7884  005EFC                     u2071:
  7885  005EFC  EF84  F02F         	goto	l2591
  7886  005F00                     u2070:
  7887  005F00  6C13               	negf	___awmod@dividend^0,c
  7888  005F02  1E14               	comf	(___awmod@dividend+1)^0,f,c
  7889  005F04  B0D8               	btfsc	status,0,c
  7890  005F06  2A14               	incf	(___awmod@dividend+1)^0,f,c
  7891  005F08                     l2591:
  7892  005F08  C013  F013         	movff	___awmod@dividend,?___awmod
  7893  005F0C  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  7894  005F10  0012               	return		;funcret
  7895  005F12                     __end_of___awmod:
  7896                           	callstack 0
  7897                           
  7898 ;; *************** function ___awdiv *****************
  7899 ;; Defined at:
  7900 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  7901 ;; Parameters:    Size  Location     Type
  7902 ;;  dividend        2    0[COMRAM] int 
  7903 ;;  divisor         2    2[COMRAM] int 
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;  quotient        2    6[COMRAM] int 
  7906 ;;  sign            1    5[COMRAM] unsigned char 
  7907 ;;  counter         1    4[COMRAM] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  2    0[COMRAM] int 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7917 ;;      Params:         4       0       0       0       0       0       0
  7918 ;;      Locals:         4       0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0
  7920 ;;      Totals:         8       0       0       0       0       0       0
  7921 ;;Total ram usage:        8 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_lcdNumber
  7927 ;;		_updateScreen
  7928 ;; This function uses a non-reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text31
  7932  005F12                     __ptext31:
  7933                           	callstack 0
  7934  005F12                     ___awdiv:
  7935                           	callstack 29
  7936  005F12  0E00               	movlw	0
  7937  005F14  6E06               	movwf	___awdiv@sign^0,c
  7938  005F16  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7939  005F18  EF92  F02F         	goto	u1960
  7940  005F1C  EF90  F02F         	goto	u1961
  7941  005F20                     u1961:
  7942  005F20  EF98  F02F         	goto	l2523
  7943  005F24                     u1960:
  7944  005F24  6C03               	negf	___awdiv@divisor^0,c
  7945  005F26  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7946  005F28  B0D8               	btfsc	status,0,c
  7947  005F2A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7948  005F2C  0E01               	movlw	1
  7949  005F2E  6E06               	movwf	___awdiv@sign^0,c
  7950  005F30                     l2523:
  7951  005F30  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7952  005F32  EF9F  F02F         	goto	u1970
  7953  005F36  EF9D  F02F         	goto	u1971
  7954  005F3A                     u1971:
  7955  005F3A  EFA5  F02F         	goto	l2529
  7956  005F3E                     u1970:
  7957  005F3E  6C01               	negf	___awdiv@dividend^0,c
  7958  005F40  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7959  005F42  B0D8               	btfsc	status,0,c
  7960  005F44  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7961  005F46  0E01               	movlw	1
  7962  005F48  1A06               	xorwf	___awdiv@sign^0,f,c
  7963  005F4A                     l2529:
  7964  005F4A  0E00               	movlw	0
  7965  005F4C  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7966  005F4E  0E00               	movlw	0
  7967  005F50  6E07               	movwf	___awdiv@quotient^0,c
  7968  005F52  5003               	movf	___awdiv@divisor^0,w,c
  7969  005F54  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7970  005F56  B4D8               	btfsc	status,2,c
  7971  005F58  EFB0  F02F         	goto	u1981
  7972  005F5C  EFB2  F02F         	goto	u1980
  7973  005F60                     u1981:
  7974  005F60  EFDA  F02F         	goto	l2551
  7975  005F64                     u1980:
  7976  005F64  0E01               	movlw	1
  7977  005F66  6E05               	movwf	___awdiv@counter^0,c
  7978  005F68  EFBA  F02F         	goto	l2537
  7979  005F6C                     l2535:
  7980  005F6C  90D8               	bcf	status,0,c
  7981  005F6E  3603               	rlcf	___awdiv@divisor^0,f,c
  7982  005F70  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7983  005F72  2A05               	incf	___awdiv@counter^0,f,c
  7984  005F74                     l2537:
  7985  005F74  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7986  005F76  EFBF  F02F         	goto	u1991
  7987  005F7A  EFC1  F02F         	goto	u1990
  7988  005F7E                     u1991:
  7989  005F7E  EFB6  F02F         	goto	l2535
  7990  005F82                     u1990:
  7991  005F82                     l2539:
  7992  005F82  90D8               	bcf	status,0,c
  7993  005F84  3607               	rlcf	___awdiv@quotient^0,f,c
  7994  005F86  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7995  005F88  5003               	movf	___awdiv@divisor^0,w,c
  7996  005F8A  5C01               	subwf	___awdiv@dividend^0,w,c
  7997  005F8C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7998  005F8E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7999  005F90  A0D8               	btfss	status,0,c
  8000  005F92  EFCD  F02F         	goto	u2001
  8001  005F96  EFCF  F02F         	goto	u2000
  8002  005F9A                     u2001:
  8003  005F9A  EFD4  F02F         	goto	l2547
  8004  005F9E                     u2000:
  8005  005F9E  5003               	movf	___awdiv@divisor^0,w,c
  8006  005FA0  5E01               	subwf	___awdiv@dividend^0,f,c
  8007  005FA2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8008  005FA4  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8009  005FA6  8007               	bsf	___awdiv@quotient^0,0,c
  8010  005FA8                     l2547:
  8011  005FA8  90D8               	bcf	status,0,c
  8012  005FAA  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8013  005FAC  3203               	rrcf	___awdiv@divisor^0,f,c
  8014  005FAE  2E05               	decfsz	___awdiv@counter^0,f,c
  8015  005FB0  EFC1  F02F         	goto	l2539
  8016  005FB4                     l2551:
  8017  005FB4  5006               	movf	___awdiv@sign^0,w,c
  8018  005FB6  B4D8               	btfsc	status,2,c
  8019  005FB8  EFE0  F02F         	goto	u2011
  8020  005FBC  EFE2  F02F         	goto	u2010
  8021  005FC0                     u2011:
  8022  005FC0  EFE6  F02F         	goto	l2555
  8023  005FC4                     u2010:
  8024  005FC4  6C07               	negf	___awdiv@quotient^0,c
  8025  005FC6  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8026  005FC8  B0D8               	btfsc	status,0,c
  8027  005FCA  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8028  005FCC                     l2555:
  8029  005FCC  C007  F001         	movff	___awdiv@quotient,?___awdiv
  8030  005FD0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  8031  005FD4  0012               	return		;funcret
  8032  005FD6                     __end_of___awdiv:
  8033                           	callstack 0
  8034                           
  8035 ;; *************** function ___wmul *****************
  8036 ;; Defined at:
  8037 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul16.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  multiplier      2    0[COMRAM] unsigned int 
  8040 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  product         2    4[COMRAM] unsigned int 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  2    0[COMRAM] unsigned int 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0, prodl, prodh
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8052 ;;      Params:         4       0       0       0       0       0       0
  8053 ;;      Locals:         2       0       0       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0       0       0
  8055 ;;      Totals:         6       0       0       0       0       0       0
  8056 ;;Total ram usage:        6 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; This function calls:
  8059 ;;		Nothing
  8060 ;; This function is called by:
  8061 ;;		_gameLogic
  8062 ;; This function uses a non-reentrant model
  8063 ;;
  8064                           
  8065                           	psect	text32
  8066  0056A6                     __ptext32:
  8067                           	callstack 0
  8068  0056A6                     ___wmul:
  8069                           	callstack 29
  8070  0056A6  5001               	movf	___wmul@multiplier^0,w,c
  8071  0056A8  0203               	mulwf	___wmul@multiplicand^0,c
  8072  0056AA  CFF3 F005          	movff	prodl,___wmul@product
  8073  0056AE  CFF4 F006          	movff	prodh,___wmul@product+1
  8074  0056B2  5001               	movf	___wmul@multiplier^0,w,c
  8075  0056B4  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8076  0056B6  50F3               	movf	243,w,c
  8077  0056B8  2606               	addwf	(___wmul@product+1)^0,f,c
  8078  0056BA  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8079  0056BC  0203               	mulwf	___wmul@multiplicand^0,c
  8080  0056BE  50F3               	movf	243,w,c
  8081  0056C0  2606               	addwf	(___wmul@product+1)^0,f,c
  8082  0056C2  C005  F001         	movff	___wmul@product,?___wmul
  8083  0056C6  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8084  0056CA  0012               	return		;funcret
  8085  0056CC                     __end_of___wmul:
  8086                           	callstack 0
  8087                           
  8088                           	psect	rparam
  8089  0000                     
  8090                           	psect	idloc
  8091                           
  8092                           ;Config register IDLOC0 @ 0x200000
  8093                           ;	unspecified, using default values
  8094  200000                     	org	2097152
  8095  200000  FF                 	db	255
  8096                           
  8097                           ;Config register IDLOC1 @ 0x200001
  8098                           ;	unspecified, using default values
  8099  200001                     	org	2097153
  8100  200001  FF                 	db	255
  8101                           
  8102                           ;Config register IDLOC2 @ 0x200002
  8103                           ;	unspecified, using default values
  8104  200002                     	org	2097154
  8105  200002  FF                 	db	255
  8106                           
  8107                           ;Config register IDLOC3 @ 0x200003
  8108                           ;	unspecified, using default values
  8109  200003                     	org	2097155
  8110  200003  FF                 	db	255
  8111                           
  8112                           ;Config register IDLOC4 @ 0x200004
  8113                           ;	unspecified, using default values
  8114  200004                     	org	2097156
  8115  200004  FF                 	db	255
  8116                           
  8117                           ;Config register IDLOC5 @ 0x200005
  8118                           ;	unspecified, using default values
  8119  200005                     	org	2097157
  8120  200005  FF                 	db	255
  8121                           
  8122                           ;Config register IDLOC6 @ 0x200006
  8123                           ;	unspecified, using default values
  8124  200006                     	org	2097158
  8125  200006  FF                 	db	255
  8126                           
  8127                           ;Config register IDLOC7 @ 0x200007
  8128                           ;	unspecified, using default values
  8129  200007                     	org	2097159
  8130  200007  FF                 	db	255
  8131                           
  8132                           	psect	config
  8133                           
  8134                           ; Padding undefined space
  8135  300000                     	org	3145728
  8136  300000  FF                 	db	255
  8137                           
  8138                           ;Config register CONFIG1H @ 0x300001
  8139                           ;	Oscillator Selection bits
  8140                           ;	OSC = HS, HS oscillator
  8141                           ;	Fail-Safe Clock Monitor Enable bit
  8142                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8143                           ;	Internal/External Oscillator Switchover bit
  8144                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8145  300001                     	org	3145729
  8146  300001  02                 	db	2
  8147                           
  8148                           ;Config register CONFIG2L @ 0x300002
  8149                           ;	Power-up Timer Enable bit
  8150                           ;	PWRT = OFF, PWRT disabled
  8151                           ;	Brown-out Reset Enable bits
  8152                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  8153                           ;	Brown Out Reset Voltage bits
  8154                           ;	BORV = 0x2E, user specified literal
  8155  300002                     	org	3145730
  8156  300002  71                 	db	369
  8157                           
  8158                           ;Config register CONFIG2H @ 0x300003
  8159                           ;	Watchdog Timer Enable bit
  8160                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8161                           ;	Watchdog Timer Postscale Select bits
  8162                           ;	WDTPS = 1, 1:1
  8163  300003                     	org	3145731
  8164  300003  00                 	db	0
  8165                           
  8166                           ; Padding undefined space
  8167  300004                     	org	3145732
  8168  300004  FF                 	db	255
  8169                           
  8170                           ;Config register CONFIG3H @ 0x300005
  8171                           ;	CCP2 MUX bit
  8172                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8173                           ;	PORTB A/D Enable bit
  8174                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  8175                           ;	Low-Power Timer1 Oscillator Enable bit
  8176                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8177                           ;	MCLR Pin Enable bit
  8178                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8179  300005                     	org	3145733
  8180  300005  83                 	db	131
  8181                           
  8182                           ;Config register CONFIG4L @ 0x300006
  8183                           ;	Stack Full/Underflow Reset Enable bit
  8184                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  8185                           ;	Single-Supply ICSP Enable bit
  8186                           ;	LVP = OFF, Single-Supply ICSP disabled
  8187                           ;	Extended Instruction Set Enable bit
  8188                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8189                           ;	Background Debugger Enable bit
  8190                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8191  300006                     	org	3145734
  8192  300006  80                 	db	128
  8193                           
  8194                           ; Padding undefined space
  8195  300007                     	org	3145735
  8196  300007  FF                 	db	255
  8197                           
  8198                           ;Config register CONFIG5L @ 0x300008
  8199                           ;	Code Protection bit
  8200                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8201                           ;	Code Protection bit
  8202                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8203                           ;	Code Protection bit
  8204                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8205                           ;	Code Protection bit
  8206                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8207  300008                     	org	3145736
  8208  300008  0F                 	db	15
  8209                           
  8210                           ;Config register CONFIG5H @ 0x300009
  8211                           ;	Boot Block Code Protection bit
  8212                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8213                           ;	Data EEPROM Code Protection bit
  8214                           ;	CPD = OFF, Data EEPROM not code-protected
  8215  300009                     	org	3145737
  8216  300009  C0                 	db	192
  8217                           
  8218                           ;Config register CONFIG6L @ 0x30000A
  8219                           ;	Write Protection bit
  8220                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8221                           ;	Write Protection bit
  8222                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8223                           ;	Write Protection bit
  8224                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8225                           ;	Write Protection bit
  8226                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8227  30000A                     	org	3145738
  8228  30000A  0F                 	db	15
  8229                           
  8230                           ;Config register CONFIG6H @ 0x30000B
  8231                           ;	Configuration Register Write Protection bit
  8232                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8233                           ;	Boot Block Write Protection bit
  8234                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8235                           ;	Data EEPROM Write Protection bit
  8236                           ;	WRTD = OFF, Data EEPROM not write-protected
  8237  30000B                     	org	3145739
  8238  30000B  E0                 	db	224
  8239                           
  8240                           ;Config register CONFIG7L @ 0x30000C
  8241                           ;	Table Read Protection bit
  8242                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8243                           ;	Table Read Protection bit
  8244                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8245                           ;	Table Read Protection bit
  8246                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8247                           ;	Table Read Protection bit
  8248                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8249  30000C                     	org	3145740
  8250  30000C  0F                 	db	15
  8251                           
  8252                           ;Config register CONFIG7H @ 0x30000D
  8253                           ;	Boot Block Table Read Protection bit
  8254                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8255  30000D                     	org	3145741
  8256  30000D  40                 	db	64
  8257                           tosu	equ	0xFFF
  8258                           tosh	equ	0xFFE
  8259                           tosl	equ	0xFFD
  8260                           stkptr	equ	0xFFC
  8261                           pclatu	equ	0xFFB
  8262                           pclath	equ	0xFFA
  8263                           pcl	equ	0xFF9
  8264                           tblptru	equ	0xFF8
  8265                           tblptrh	equ	0xFF7
  8266                           tblptrl	equ	0xFF6
  8267                           tablat	equ	0xFF5
  8268                           prodh	equ	0xFF4
  8269                           prodl	equ	0xFF3
  8270                           indf0	equ	0xFEF
  8271                           postinc0	equ	0xFEE
  8272                           postdec0	equ	0xFED
  8273                           preinc0	equ	0xFEC
  8274                           plusw0	equ	0xFEB
  8275                           fsr0h	equ	0xFEA
  8276                           fsr0l	equ	0xFE9
  8277                           wreg	equ	0xFE8
  8278                           indf1	equ	0xFE7
  8279                           postinc1	equ	0xFE6
  8280                           postdec1	equ	0xFE5
  8281                           preinc1	equ	0xFE4
  8282                           plusw1	equ	0xFE3
  8283                           fsr1h	equ	0xFE2
  8284                           fsr1l	equ	0xFE1
  8285                           bsr	equ	0xFE0
  8286                           indf2	equ	0xFDF
  8287                           postinc2	equ	0xFDE
  8288                           postdec2	equ	0xFDD
  8289                           preinc2	equ	0xFDC
  8290                           plusw2	equ	0xFDB
  8291                           fsr2h	equ	0xFDA
  8292                           fsr2l	equ	0xFD9
  8293                           status	equ	0xFD8

Data Sizes:
    Strings     473
    Constant    16
    Data        68
    BSS         280
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    113     127
    BANK0           128      0      94
    BANK1           256      0     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdStrDelay@str	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_54(CODE[12]), STR_53(CODE[8]), 

    lcdStr@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_64(CODE[17]), STR_63(CODE[3]), STR_62(CODE[11]), STR_61(CODE[17]), 
		 -> STR_60(CODE[17]), STR_59(CODE[17]), STR_58(CODE[3]), STR_57(CODE[11]), 
		 -> STR_56(CODE[17]), STR_55(CODE[17]), STR_52(CODE[17]), STR_51(CODE[17]), 
		 -> STR_50(CODE[17]), STR_49(CODE[17]), STR_48(CODE[17]), STR_47(CODE[17]), 
		 -> STR_46(CODE[17]), STR_45(CODE[17]), STR_44(CODE[17]), STR_43(CODE[17]), 
		 -> STR_42(CODE[17]), STR_41(CODE[17]), STR_40(CODE[17]), STR_39(CODE[17]), 
		 -> STR_38(CODE[17]), STR_37(CODE[17]), STR_36(CODE[17]), STR_35(CODE[17]), 
		 -> STR_34(CODE[17]), STR_33(CODE[17]), STR_32(CODE[17]), STR_31(CODE[17]), 
		 -> STR_30(CODE[17]), STR_29(CODE[17]), STR_28(CODE[17]), STR_27(CODE[17]), 
		 -> STR_26(CODE[17]), STR_25(CODE[17]), STR_24(CODE[17]), STR_23(CODE[17]), 
		 -> STR_22(CODE[17]), STR_21(CODE[17]), STR_20(CODE[17]), STR_19(CODE[17]), 
		 -> STR_18(CODE[17]), STR_17(CODE[17]), STR_16(CODE[17]), STR_15(CODE[17]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[17]), 
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[17]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_titleScreen
    _updateScreen->_ssdDigit
    _ssdUpdate->_digitalWrite
    _ssdDigit->___lwmod
    ___lwmod->___lwdiv
    _titleScreen->_lcdStrDelay
    _lcdStrDelay->_lcdChar
    _ssdInit->_pinMode
    _playerInput->_kpDebounce
    _lcdInit->_lcdCommand
    _youWin->_lcdNumber
    _rand->___lmul
    _gameOver->_lcdNumber
    _lcdStr->_lcdChar
    _lcdPosition->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdNumber->___awmod
    _lcdChar->_digitalWrite
    ___awmod->_rand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                64    64      0   95325
                                             49 COMRAM    64    64      0
                          _gameLogic
                             _kpInit
                            _lcdChar
                         _lcdCommand
                            _lcdInit
                        _playerInput
                         _setupLevel
                            _ssdInit
                          _timerInit
                        _titleScreen
                       _updateScreen
 ---------------------------------------------------------------------------------
 (1) _updateScreen                                        16    16      0   16677
                                             14 COMRAM    16    16      0
                            ___awdiv
                            ___lwdiv
                            ___lwmod
                            _lcdChar
                        _lcdPosition
                           _ssdDigit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (2) _ssdUpdate                                            2     2      0    2572
                                              6 COMRAM     2     2      0
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _ssdDigit                                             2     1      1     480
                                             12 COMRAM     2     1      1
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _titleScreen                                         34    34      0   19127
                                             15 COMRAM    34    34      0
                         _kpDebounce
                             _kpRead
                        _lcdPosition
                             _lcdStr
                        _lcdStrDelay
 ---------------------------------------------------------------------------------
 (2) _lcdStrDelay                                          7     5      2    2951
                                              8 COMRAM     7     5      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    1352
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _playerInput                                          0     0      0     315
                         _kpDebounce
                             _kpRead
 ---------------------------------------------------------------------------------
 (2) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _kpDebounce                                          10    10      0     315
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    4243
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1352
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _gameLogic                                            2     2      0   47929
                                             28 COMRAM     2     2      0
                            ___awmod
                             ___wmul
                           _gameOver
                               _rand
                         _setupLevel
                             _youWin
 ---------------------------------------------------------------------------------
 (2) _youWin                                               0     0      0   23226
                         _lcdCommand
                          _lcdNumber
                        _lcdPosition
                             _lcdStr
 ---------------------------------------------------------------------------------
 (1) _setupLevel                                           6     4      2     196
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _rand                                                 6     4      2     370
                                             12 COMRAM     6     4      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) _gameOver                                             0     0      0   23226
                         _lcdCommand
                          _lcdNumber
                        _lcdPosition
                             _lcdStr
 ---------------------------------------------------------------------------------
 (2) _lcdStr                                               5     3      2    7465
                                              8 COMRAM     5     3      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdPosition                                          5     4      1    7637
                                              8 COMRAM     5     4      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _lcdCommand                                           2     2      0    2799
                                              6 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _Delay2ms                                             1     1      0      92
                                              1 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (3) _lcdNumber                                            4     2      2    5325
                                             24 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              2     2      0    2663
                                              6 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    2572
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Delay40us                                            1     1      0      46
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     600
                                             18 COMRAM     6     2      4
                            ___awdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1820
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gameLogic
     ___awmod
       ___awdiv (ARG)
       _rand (ARG)
         ___lmul
     ___wmul
     _gameOver
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdNumber
         ___awdiv
         ___awmod
           ___awdiv (ARG)
           _rand (ARG)
             ___lmul
         _lcdChar
           _Delay40us
           _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdChar
           _Delay40us
           _digitalWrite
     _rand
       ___lmul
     _setupLevel
     _youWin
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
       _lcdNumber
         ___awdiv
         ___awmod
           ___awdiv (ARG)
           _rand (ARG)
             ___lmul
         _lcdChar
           _Delay40us
           _digitalWrite
       _lcdPosition
         _lcdCommand
           _Delay2ms
             _Delay40us
           _Delay40us
           _digitalWrite
       _lcdStr
         _lcdChar
           _Delay40us
           _digitalWrite
   _kpInit
   _lcdChar
     _Delay40us
     _digitalWrite
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
       _Delay40us
     _lcdCommand
       _Delay2ms
         _Delay40us
       _Delay40us
       _digitalWrite
     _pinMode
   _playerInput
     _kpDebounce
     _kpRead
   _setupLevel
   _ssdInit
     _pinMode
   _timerInit
   _titleScreen
     _kpDebounce
     _kpRead
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _lcdStr
       _lcdChar
         _Delay40us
         _digitalWrite
     _lcdStrDelay
       _lcdChar
         _Delay40us
         _digitalWrite
   _updateScreen
     ___awdiv
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _lcdChar
       _Delay40us
       _digitalWrite
     _lcdPosition
       _lcdCommand
         _Delay2ms
           _Delay40us
         _Delay40us
         _digitalWrite
     _ssdDigit
       ___lwdiv (ARG)
       ___lwmod (ARG)
         ___lwdiv (ARG)
     _ssdUpdate
       _digitalWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F0       7       93.8%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      5E       5       73.4%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     71      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CD      15        0.0%
DATA                 0      0     1CD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Dec 06 00:08:51 2020

                      _i 007D                        _j 0076                        _k 00D7  
                     l42 67E0                       l76 6A2E                       l89 5670  
           ___awdiv@sign 0006                       _v0 007A                       _v1 0079  
                     _v2 0078                       _v3 0077      ___wmul@multiplicand 0003  
                    l112 5666                      l130 56A4                      l107 635C  
                    l140 57AE                      l108 6374                      l212 5804  
                    l125 5688                      l109 637C                      l137 5CD2  
                    l209 61FE                      l401 7C8C                      l146 5AF0  
                    l155 575A                      l235 565C                      l163 5C54  
                    l315 7650                      l411 7E12                      l172 5DD2  
                    l149 5BDC                      l424 6B86                      l451 6592  
                    l444 6EC8                      l428 6C2E                      l364 60AE  
                    l454 5A06                      l199 585C                      l464 56CA  
                    l475 591A                      l459 5A78                      l708 5F10  
                    l476 592A                      l695 5FD4                      l962 5B64  
                    l955 5B5C                      l972 58C0                      l965 58B8  
                    _key 0074             ___awmod@sign 0018                      prod 000FF3  
                    wreg 000FE8            setupLevel@lvl 0001                     l1143 5998  
                   l3011 6FE0                     l3003 6FAA                     l3101 71F6  
                   l3013 6FF6                     l3005 6FAE                     l3103 7200  
                   l3031 7054                     l3015 7000                     l3007 6FCA  
                   l3201 745A                     l3121 7260                     l3113 722A  
                   l3105 7216                     l3041 70A2                     l3033 7060  
                   l3025 702A                     l3017 7016                     l3009 6FD4  
                   l3211 748E                     l3123 7276                     l3115 722E  
                   l3107 7222                     l3051 70CA                     l3035 7076  
                   l3027 702E                     l3019 7022                     l2421 5676  
                   l2501 5762                     l3301 6024                     l3213 7498  
                   l3205 7462                     l3141 72D4                     l3125 7280  
                   l3117 724A                     l3061 7116                     l3053 70D4  
                   l3037 7080                     l3029 704A                     l2423 5678  
                   l2415 5672                     l2431 65E2                     l2511 57A6  
                   l2503 5766                     l3311 607C                     l3303 6032  
                   l3223 74E2                     l3215 74AE                     l3207 746C  
                   l3151 7322                     l3143 72E0                     l3135 72AA  
                   l3127 7296                     l3119 7254                     l3071 712E  
                   l3063 7122                     l3055 70E0                     l3047 70AA  
                   l3039 7096                     l2521 5F2C                     l2441 667C  
                   l2433 6604                     l2425 6594                     l2513 57AA  
                   l2505 577A                     l2601 570C                     l3313 6080  
                   l3305 604C                     l3321 60AA                     l3233 7512  
                   l3217 74BA                     l3209 7478                     l3161 7352  
                   l3153 732A                     l3145 72F6                     l3137 72AE  
                   l3129 72A2                     l3081 7180                     l3073 714A  
                   l3057 70F6                     l3049 70AE                     l3401 79A2  
                   l2531 5F52                     l2523 5F30                     l2515 5F12  
                   l2451 6710                     l2443 6698                     l2435 6620  
                   l2427 65B0                     l2507 577E                     l2611 5D58  
                   l2603 5714                     l3315 608E                     l3307 6052  
                   l3243 7542                     l3227 74EA                     l3219 74C2  
                   l3171 739E                     l3163 735C                     l3147 7300  
                   l3139 72CA                     l3091 71AA                     l3083 7196  
                   l3075 7154                     l3059 7100                     l3411 7B1A  
                   l3403 7A14                     l3323 7652                     l2541 5F88  
                   l2533 5F64                     l2525 5F3E                     l2517 5F16  
                   l2461 67A2                     l2453 672A                     l2445 66B2  
                   l2437 663A                     l2429 65C2                     l2509 5792  
                   l2621 5D7E                     l2613 5D5E                     l2605 5730  
                   l3501 6B5A                     l3317 6092                     l3309 6060  
                   l3253 7572                     l3237 751A                     l3229 74F2  
                   l3173 73AA                     l3165 7368                     l3157 734A  
                   l3149 7316                     l3093 71AE                     l3085 71A2  
                   l3077 7160                     l3069 712A                     l3413 7B26  
                   l3405 7A3E                     l3421 7BA2                     l3341 76A4  
                   l3325 7656                     l2543 5F9E                     l2535 5F6C  
                   l2551 5FB4                     l2527 5F46                     l2519 5F24  
                   l2463 67C2                     l2455 674A                     l2447 66D2  
                   l2439 665A                     l2471 568E                     l2623 5D88  
                   l2615 5D68                     l2607 5732                     l3511 6BE0  
                   l3319 609A                     l3271 75C0                     l3263 75A2  
                   l3247 754A                     l3239 7522                     l3191 7410  
                   l3183 73DA                     l3175 73B2                     l3167 737E  
                   l3095 71CA                     l3079 7176                     l3431 7C9A  
                   l3423 7BB4                     l3415 7B2E                     l3407 7A82  
                   l3351 76C2                     l3335 766E                     l2553 5FC4  
                   l2545 5FA6                     l2537 5F74                     l2529 5F4A  
                   l2561 5E66                     l2457 676C                     l2449 66F4  
                   l2473 5692                     l2465 568A                     l2481 5C60  
                   l2625 5D8E                     l2617 5D6E                     l2609 5D54  
                   l2641 58F0                     l3521 6C08                     l3505 6BB0  
                   l2721 630E                     l2705 6256                     l3281 7618  
                   l3273 75D6                     l3257 757A                     l3249 7552  
                   l3193 7426                     l3185 73E4                     l3169 7388  
                   l3097 71D4                     l2801 618E                     l3433 7CA6  
                   l3425 7BFC                     l3409 7AF4                     l3417 7B9C  
                   l3353 76E2                     l3361 7784                     l3337 7692  
                   l3345 76AA                     l3329 766A                     l2555 5FCC  
                   l2547 5FA8                     l2539 5F82                     l2571 5E96  
                   l2563 5E74                     l2459 6788                     l2475 5694  
                   l2491 5CA4                     l2483 5C74                     l2619 5D78  
                   l2643 58FA                     l2635 58C2                     l3531 6C50  
                   l3523 6C28                     l3507 6BD8                     l3515 6BE6  
                   l2651 6830                     l2731 634A                     l2723 6310  
                   l2715 627A                     l2707 625A                     l3291 5FD6  
                   l3283 7622                     l3275 75E0                     l3267 75AA  
                   l3259 7582                     l3195 7432                     l3187 73F0  
                   l3179 73D2                     l3099 71E0                     l2803 6196  
                   l3451 7D1C                     l3443 7D0E                     l3435 7CAE  
                   l3427 7C0C                     l3371 77A2                     l3355 7702  
                   l3347 76AE                     l3339 7694                     l3611 5E3C  
                   l3603 5E20                     l2549 5FAE                     l2581 5EDC  
                   l2573 5EA8                     l2565 5E7C                     l2493 5CB6  
                   l2485 5C78                     l2477 5C58                     l2629 5D98  
                   l2637 58D2                     l2821 6386                     l3541 6C98  
                   l3533 6C54                     l3517 6BF4                     l3509 6BDC  
                   l2661 68CA                     l2653 6852                     l2645 67E2  
                   l2733 6350                     l2725 6320                     l2717 62A6  
                   l2709 6276                     l3293 5FDA                     l2741 5BDE  
                   l3285 7632                     l3277 75F6                     l3269 75B4  
                   l3197 743A                     l3189 7406                     l2901 5B56  
                   l2805 61A8                     l2813 61C4                     l3453 7D42  
                   l3445 7D18                     l3461 7D5A                     l3429 7C40  
                   l3437 7CF6                     l3381 784C                     l3373 77C2  
                   l3357 770E                     l3365 778A                     l3613 5E42  
                   l3605 5E32                     l2591 5F08                     l2583 5EE4  
                   l2575 5EB0                     l2567 5E80                     l2559 5E62  
                   l2495 5CC6                     l2487 5C8C                     l2479 5C5C  
                   l2639 58E0                     l2831 6490                     l2823 63B4  
                   l3551 6D62                     l3543 6CB8                     l3527 6C34  
                   l3471 6A5C                     l2671 695E                     l2663 68E6  
                   l2655 686E                     l2647 67FE                     l2735 6354  
                   l2727 6322                     l2719 62D8                     l3295 5FF6  
                   l2751 5C0A                     l2743 5BE6                     l3287 7636  
                   l3279 7602                     l2911 588E                     l2903 585E  
                   l2807 61BC                     l3463 7E0E                     l3455 7D44  
                   l3439 7CFA                     l3391 792A                     l3383 786C  
                   l3375 77FA                     l3367 778E                     l3359 7716  
                   l3615 5E4E                     l2585 5EEA                     l2577 5EB8  
                   l2569 5E8E                     l2497 5CCE                     l2489 5CA0  
                   l2841 599A                     l2833 6564                     l3561 6E40  
                   l3553 6D8C                     l3545 6CE6                     l3537 6C68  
                   l3529 6C48                     l3481 6AA4                     l3473 6A62  
                   l3465 6A30                     l2681 69E8                     l2673 6970  
                   l2665 68F8                     l2657 6880                     l2649 6810  
                   l2921 5B66                     l2737 636C                     l2729 6332  
                   l3297 600E                     l2753 5C0E                     l2745 5C02  
                   l3289 7642                     l2913 58A4                     l2905 5870  
                   l2761 5818                     l3457 7D54                     l3393 794E  
                   l3385 7878                     l3377 781C                     l3617 5E52  
                   l3609 5E38                     l2579 5EC6                     l2587 5EF0  
                   l2499 575E                     l2595 5A7E                     l2851 59E4  
                   l2843 59A0                     l2827 63C8                     l2819 637E  
                   l3571 6E74                     l3555 6DC0                     l3547 6D14  
                   l3539 6C88                     l3563 6E54                     l3483 6ACC  
                   l3475 6A66                     l3467 6A42                     l2683 6A0C  
                   l2675 6994                     l2667 691C                     l2659 68A4  
                   l2931 5B9E                     l2923 5B8E                     l2739 6378  
                   l2691 6208                     l3299 601A                     l2755 5C2A  
                   l2915 58AC                     l2907 5878                     l2771 5846  
                   l2763 581C                     l3395 796E                     l3387 7880  
                   l3379 783C                     l3619 5E56                     l2589 5F00  
                   l2597 5A8A                     l2853 59F0                     l2845 59AC  
                   l2829 63D8                     l2837 656A                     l2861 5A0C  
                   l3573 6E8A                     l3557 6DE0                     l3549 6D34  
                   l3485 6AEC                     l3469 6A54                     l3493 6B22  
                   l2677 69BA                     l2669 6942                     l2941 5BB4  
                   l2933 5BA2                     l2925 5B92                     l2685 5668  
                   l2757 5C2C                     l2917 58B2                     l2909 5880  
                   l2773 5858                     l2765 582C                     l3661 61D8  
                   l2781 60DC                     l3397 798E                     l3389 78F2  
                   l3581 5DD4                     l2599 5AD6                     l3663 5DAC  
                   l2847 59C2                     l2855 592C                     l2839 658A  
                   l2871 5A56                     l2863 5A12                     l3575 6E9E  
                   l3559 6E08                     l3567 6E5A                     l3495 6B26  
                   l3487 6B00                     l3479 6A7A                     l2919 565E  
                   l2679 69D6                     l2951 5BD0                     l2943 5BBA  
                   l2935 5BA6                     l2927 5B96                     l2687 6200  
                   l2767 5830                     l2759 5808                     l2791 613A  
                   l2783 60F0                     l2775 60B0                     l3399 799A  
                   l3591 5DF6                     l3583 5DE6                     l2849 59CC  
                   l2857 596A                     l2873 5A62                     l2865 5A1E  
                   l3577 6EB0                     l3569 6E60                     l3489 6B1C  
                   l2953 5BD6                     l2945 5BBE                     l2937 5BAC  
                   l2929 5B9A                     l2697 620C                     l2689 6204  
                   l2961 565A                     l2881 5AF2                     l2769 5842  
                   l2793 614C                     l2785 610C                     l2777 60B4  
                   l3593 5DFC                     l3585 5DEA                     l2875 56A6  
                   l2867 5A34                     l3579 6EC4                     l3499 6B3A  
                   l2947 5BC4                     l2939 5BB0                     l2699 624E  
                   l2955 57B0                     l2971 6F00                     l2963 6ECA  
                   l2891 5B2A                     l2883 5AFA                     l2795 6160  
                   l2787 611E                     l2779 60C8                     l3595 5E02  
                   l3587 5DEE                     l2877 56C2                     l2869 5A3E  
                   l2949 5BCA                     l2957 5800                     l2981 6F2A  
                   l2973 6F16                     l2965 6ED4                     l2893 5B30  
                   l2885 5B0C                     l2797 6168                     l2789 6132  
                   l3597 5E08                     l3589 5DF2                     l2959 5656  
                   l2991 6F76                     l2983 6F2E                     l2975 6F22  
                   l2967 6EE0                     l2895 5B46                     l2887 5B14  
                   l2799 617A                     l3599 5E0C                     l2993 6F80  
                   l2985 6F4A                     l2969 6EF6                     l2897 5B4E  
                   l2889 5B1C                     l2995 6F96                     l2987 6F54  
                   l2899 5B50                     l2997 6FA2                     l2989 6F60  
                   STR_1 7EF1                     STR_2 7E25                     STR_3 7E25  
                   STR_4 7EF1                     STR_5 7EF1                     STR_6 7F13  
                   STR_7 7F57                     STR_8 7EF1                     STR_9 7EF1  
                   u2000 5F9E                     u2001 5F9A                     u2010 5FC4  
                   u2011 5FC0                     u2020 5E74                     u2100 58E0  
                   u2021 5E70                     u2101 58DC                     u2030 5E8E  
                   u2110 591A                     u2031 5E8A                     u2111 5916  
                   u2040 5EA8                     u2200 68E6                     u2120 67FE  
                   u3000 7B1A                     u2041 5EA4                     u2201 68E2  
                   u2121 67FA                     u3001 7B16                     u2050 5EC6  
                   u2210 68F8                     u2130 6810                     u3010 7BB4  
                   u2051 5EC2                     u2211 68F4                     u2131 680C  
                   u3011 7BB0                     u2060 5EDC                     u3100 6AA4  
                   u3020 7C0C                     u2061 5ED8                     u3101 6AA0  
                   u3021 7C08                     u2070 5F00                     u3110 6ACC  
                   u3030 7C40                     u2071 5EFC                     u3111 6AC8  
                   u3031 7C3C                     u2080 5AF0                     u3200 6C64  
                   u3120 6AEC                     u2304 69FE                     u2240 695E  
                   u2224 690E                     u2160 686E                     u2144 6822  
                   u2400 6332                     u3040 7C9A                     u2081 5AEC  
                   u3201 6C60                     u3121 6AE8                     u2305 69FA  
                   u2241 695A                     u2225 690A                     u2161 686A  
                   u2145 681E                     u2401 632E                     u3041 7C96  
                   u2090 575A                     u3210 6C88                     u3130 6B36  
                   u2314 6A22                     u2250 6970                     u2234 6932  
                   u2170 6880                     u2154 6842                     u2410 634A  
                   u3050 7D0A                     u2091 5756                     u3211 6C84  
                   u3131 6B32                     u2315 6A1E                     u2251 696C  
                   u2235 692E                     u2171 687C                     u2155 683E  
                   u2411 6346                     u3051 7D06                     u2500 63D8  
                   u3300 6EC4                     u3220 6C98                     u3140 6B5A  
                   u2420 636C                     u2340 6276                     u2324 6222  
                   u3060 7D54                     u2501 63D4                     u3301 6EC0  
                   u3221 6C94                     u3141 6B56                     u2421 6368  
                   u2341 6272                     u2325 621E                     u3061 7D50  
                   u2510 598A                     u3230 6CB8                     u3150 6BB0  
                   u3070 6A42                     u2334 6242                     u2430 5C2A  
                   u3231 6CB4                     u3151 6BAC                     u3071 6A3E  
                   u2335 623E                     u2431 5C26                     u3311 5DDE  
                   u1720 5688                     u3240 6D34                     u3160 6BD8  
                   u3080 6A54                     u2280 69D6                     u2264 6986  
                   u2184 6896                     u2360 62A6                     u2440 5C54  
                   u2600 704A                     u2520 5B0C                     u3320 5E1C  
                   u1721 5684                     u3241 6D30                     u3161 6BD4  
                   u3081 6A50                     u2281 69D2                     u2265 6982  
                   u2185 6892                     u2361 62A2                     u2441 5C50  
                   u2601 7046                     u2521 5B08                     u3321 5E18  
                   u1810 6698                     u1730 65B0                     u3250 6DC0  
                   u3170 6C04                     u3090 6A76                     u2290 69E8  
                   u2274 69AA                     u2194 68BA                     u2354 628C  
                   u2610 70CA                     u2530 5B2A                     u2450 5818  
                   u1811 6694                     u1731 65AC                     u2515 5980  
                   u3251 6DBC                     u3171 6C00                     u3091 6A72  
                   u2291 69E4                     u2275 69A6                     u2195 68B6  
                   u2355 6288                     u2611 70C6                     u2531 5B26  
                   u2451 5814                     u1900 67A2                     u1820 66B2  
                   u1804 666C                     u1740 65C2                     u3260 6DE0  
                   u3180 6C28                     u2700 750E                     u2620 714A  
                   u2540 5B46                     u2460 582C                     u1901 679E  
                   u1821 66AE                     u1805 6668                     u1741 65BE  
                   u3261 6DDC                     u3181 6C24                     u2701 750A  
                   u2621 7146                     u2541 5B42                     u2461 5828  
                   u3270 6E74                     u3190 6C48                     u2390 6320  
                   u2374 62C4                     u2710 753E                     u2630 71CA  
                   u2550 5870                     u2470 5842                     u3271 6E70  
                   u3191 6C44                     u2391 631C                     u2375 62BE  
                   u2711 753A                     u2631 71C6                     u2551 586C  
                   u2471 583E                     u3280 6E8A                     u2384 62F6  
                   u2800 607C                     u2720 756E                     u2640 724A  
                   u2560 588E                     u2480 5858                     u3281 6E86  
                   u2385 62F0                     u2801 6078                     u2721 756A  
                   u2641 7246                     u2561 588A                     u2481 5854  
                   u1914 67B4                     u1850 6710                     u1834 66C4  
                   u1770 6620                     u1754 65D4                     u1930 56A4  
                   u2490 63C4                     u3290 6EB0                     u2810 608E  
                   u2730 759E                     u2650 72CA                     u2570 58A4  
                   u1915 67B0                     u1851 670C                     u1835 66C0  
                   u1771 661C                     u1755 65D0                     u1931 56A0  
                   u2491 63C0                     u3291 6EAC                     u2811 608A  
                   u2731 759A                     u2651 72C6                     u2571 58A0  
                   u1924 67D4                     u1860 672A                     u1844 66E4  
                   u1780 663A                     u1764 65F4                     u1940 5CB6  
                   u2740 7650                     u2660 7346                     u2580 6F4A  
                   u2900 781C                     u2820 7666                     u1925 67D0  
                   u1861 6726                     u1845 66E0                     u1781 6636  
                   u1765 65F0                     u1941 5CB2                     u2741 764C  
                   u2661 7342                     u2581 6F46                     u2901 7818  
                   u2821 7662                     u1950 5CC6                     u2750 5FF6  
                   u2670 73CE                     u2590 6FCA                     u2910 783C  
                   u2830 76A4                     u1951 5CC2                     u2751 5FF2  
                   u2671 73CA                     u2591 6FC6                     u2911 7838  
                   u2831 76A0                     u1960 5F24                     u2760 600E  
                   u2680 7456                     u2920 784C                     u2840 76BE  
                   u1961 5F20                     u2761 600A                     u2681 7452  
                   u2921 7848                     u2841 76BA                     u1970 5F3E  
                   u1890 6788                     u1874 673C                     u1794 664C  
                   u2770 6032                     u2690 74DE                     u2930 786C  
                   u2850 76E2                     u1971 5F3A                     u1891 6784  
                   u1875 6738                     u1795 6648                     u2771 602E  
                   u2691 74DA                     u2931 7868                     u2851 76DE  
                   u1980 5F64                     u1884 675C                     u2780 604C  
                   u2940 792A                     u2860 7702                     u1981 5F60  
                   u1885 6758                     u2781 6048                     u2941 7926  
                   u2861 76FE                     u1990 5F82                     u2790 6060  
                   u2950 794E                     u2870 779E                     u1991 5F7E  
                   u2791 605C                     u2951 794A                     u2871 779A  
                   u2960 796E                     u2880 77C2                     u2961 796A  
                   u2881 77BE                     u2970 798E                     u2890 77FA  
                   u2971 798A                     u2891 77F6                     u2980 7A3E  
                   u2981 7A3A                     u2990 7A82                     u2991 7A7E  
                   _main 5DD4                     _rand 592C                     _seed 00D8  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
           ___param_bank 000000                    ?_main 0001                    ?_rand 000D  
        __end_of___awdiv 5FD6                    STR_10 7F68                    STR_11 7F79  
                  STR_20 7EF1                    STR_12 7EF1                    STR_21 7EF1  
                  STR_13 7EF1                    STR_14 7F9B                    STR_22 7F46  
                  STR_30 7E8B                    STR_15 7FCE                    STR_31 7FAC  
                  STR_23 7F24                    STR_40 7EF1                    STR_32 7EF1  
                  STR_24 7EF1                    STR_16 7EF1                    STR_41 7EF1  
                  STR_33 7EF1                    STR_25 7EF1                    STR_17 7EF1  
                  STR_50 7E25                    STR_18 7F8A                    STR_26 7ECF  
                  STR_34 7E69                    STR_42 7E47                    STR_51 7E25  
                  STR_35 7FBD                    STR_27 7F35                    STR_19 7F02  
                  STR_43 7E9C                    STR_60 7EF1                    STR_52 7EF1  
                  STR_44 7EF1                    STR_36 7EF1                    STR_28 7EF1  
        __end_of___awmod 5F12                    STR_45 7EF1                    STR_37 7EF1  
                  STR_29 7EF1                    STR_53 7FF6                    STR_61 7EAD  
                  STR_62 7FEB                    STR_54 7FDF                    STR_38 7E58  
                  STR_46 7E36                    STR_63 7E33                    STR_55 7EF1  
                  STR_39 7EE0                    STR_47 7E7A                    STR_64 7EF1  
                  STR_48 7EF1                    STR_56 7EBE                    STR_49 7EF1  
                  STR_57 7FEB                    STR_58 7E33                    STR_59 7EF1  
                  _T0CON 000FD5          ___awdiv@divisor 0003          __end_of___lwdiv 5B66  
        __end_of___lwmod 58C2          ___awdiv@counter 0005                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_lcdChar 57B0  
    ___lmul@multiplicand 0005          __end_of_lcdInit 5BDE                    _level 007E  
           titleScreen@i 0012                    _score 0072          __end_of_pinMode 6A30  
                  _valor 00D5                    _speed 00DC                    tablat 000FF5  
        __end_of_ssdInit 5806                    plusw1 000FE3                    plusw2 000FDB  
                  status 000FD8         __end_of_Delay2ms 56A6     __end_of_digitalWrite 67E2  
        __initialization 5CD4             __end_of_main 5E62             __end_of_rand 599A  
     __size_of_Delay40us 0018                   ??_main 0032                   ??_rand 000F  
          __activetblptr 000002             ?_playerInput 0001         ___awdiv@dividend 0001  
                 _INTCON 000FF2     __size_of_lcdStrDelay 0078     __size_of_lcdPosition 0082  
       __end_of_gameOver 5A0C                   ___lmul 58C2                   ___wmul 56A6  
              ??___awdiv 0005                ??___awmod 0017                   _aliens 0100  
              ??___lwdiv 0005                   _lcdStr 570C                ??___lwmod 000C  
                 _kpInit 565E                   _kpRead 5668                   clear_0 5D2A  
                 clear_1 5D36                   clear_2 5D42         ___awdiv@quotient 0007  
        ___awmod@divisor 0015                   _player 00C0                ??_lcdChar 0007  
              ??_lcdInit 0009          ___awmod@counter 0017                   _youWin 5A0C  
       __end_of_ssdDigit 585E             __pdataCOMRAM 007E                ??_pinMode 0005  
           __mediumconst 7E14                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_ssdInit 0007        __end_of_Delay40us 568A  
             __accesstop 0080  __end_of__initialization 5D48            ___rparam_used 000001  
           ?_titleScreen 0001              pinMode@type 0003           __pcstackCOMRAM 0001  
           __pidataBANK0 5652             __pidataBANK1 56CC       __size_of_gameLogic 049A  
     __size_of_lcdNumber 0074                ?_Delay2ms 0001               __pbssBANK0 0080  
             __pbssBANK1 0100    __size_of_digitalWrite 024E               _aliensLeft 00CB  
                ?___lmul 0001               _lcdCommand 5C56                  ?___wmul 0001  
                ?_lcdStr 0009                  ?_kpInit 0001                  ?_kpRead 0001  
         ___lmul@product 0009               _kpDebounce 6200                  ?_youWin 0001  
     __size_of_timerInit 0008       __size_of_ssdUpdate 0150               ??_Delay2ms 0002  
              ?_gameOver 0001             _digitalWrite 6594        __end_of_gameLogic 6ECA  
   __size_of_playerInput 00DA                  __Hparam 0000        __end_of_lcdNumber 5AF2  
                __Lparam 0000                ?_ssdDigit 000D          kpDebounce@old_D 0006  
     lcdPosition@command 000D          kpDebounce@tempo 007C                  ___awdiv 5F12  
        __size_of___lmul 006A                  ___awmod 5E62          __size_of___wmul 0026  
                ___lwdiv 5AF2                  ___lwmod 585E          __size_of_lcdStr 0050  
        __size_of_kpInit 000A          __size_of_kpRead 000A              ssdDigit@val 000E  
            ssdDigit@pos 000D                  __pcinit 5CD4                  _lcdChar 575C  
                __ramtop 0600                  _lcdInit 5B66                  __ptext0 5DD4  
                __ptext1 7652                  __ptext2 60B0                  __ptext3 5806  
                __ptext4 585E                  __ptext5 5AF2                  __ptext6 6ECA  
                __ptext7 5BDE                  __ptext8 5656                  __ptext9 57B0  
                _display 007B          __size_of_youWin 0072                  _pinMode 67E2  
       ___awmod@dividend 0013               ??_gameOver 001D           titleScreen@key 0010  
                _ssdInit 57B0                  lcdStr@i 000D                Delay2ms@i 0002  
    kpDebounce@valorNovo 00D3     end_of_initialization 5D48            __Lmediumconst 7E14  
      __end_of_timerInit 565E        __end_of_ssdUpdate 6200               ??_ssdDigit 000E  
   __size_of_titleScreen 0788                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 0001                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE              ?_kpDebounce 0001               _setupLevel 637E  
             lcdNumber@i 001B           _valor@ssd$F178 7E15            ??_lcdStrDelay 000B  
          ??_lcdPosition 000A             _contadorLoop 00CD                _Delay40us 5672  
          ?_updateScreen 0001           __end_of___lmul 592C         lcdStrDelay@i_128 000D  
         __end_of___wmul 56CC            __pidataCOMRAM 5654           __end_of_lcdStr 575C  
         __end_of_kpInit 5668           __end_of_kpRead 5672   __end_of_valor@ssd$F178 7E25  
         __end_of_youWin 5A7E      start_initialization 5CD4        __size_of_Delay2ms 001C  
    __size_of_lcdCommand 007E      __size_of_kpDebounce 017E               ?_Delay40us 0001  
         ??_updateScreen 000F      __end_of_lcdStrDelay 5C56      __end_of_lcdPosition 5DD4  
               ??___lmul 0009                 ??___wmul 0005                 ??_lcdStr 000B  
               ??_kpInit 0001                 ??_kpRead 0003              __pdataBANK0 00DC  
            __pdataBANK1 01B0              ?_setupLevel 0001                 ??_youWin 001D  
            __pbssCOMRAM 0072               pinMode@pin 0001        __size_of_gameOver 0072  
              _gameLogic 6A30         ___lwdiv@dividend 0001            __pmediumconst 7E14  
               ?___awdiv 0001                 ?___awmod 0013        __size_of_ssdDigit 0058  
              _lcdNumber 5A7E                 ?___lwdiv 0001                 ?___lwmod 0008  
               ?_lcdChar 0001                 ?_lcdInit 0001            lcdCommand@cmd 0008  
               ?_pinMode 0001                 ?_ssdInit 0001         ___lwdiv@quotient 0005  
          ??_playerInput 000B              _lcdStrDelay 5BDE              _lcdPosition 5D52  
       titleScreen@i_302 0024         titleScreen@i_312 0028         titleScreen@i_313 002A  
       titleScreen@i_314 002C         titleScreen@i_315 002E         titleScreen@i_307 0026  
       titleScreen@i_316 0030         titleScreen@i_262 0014         titleScreen@i_272 0018  
       titleScreen@i_282 001C         titleScreen@i_267 0016         titleScreen@i_292 0020  
       titleScreen@i_277 001A         titleScreen@i_287 001E         titleScreen@i_297 0022  
            ??_Delay40us 0001           ___wmul@product 0005      __size_of_setupLevel 0216  
             ?_gameLogic 0001             ??_lcdCommand 0007                main@F2650 01B0  
              _timerInit 5656                _ssdUpdate 60B0               ?_lcdNumber 0019  
              lcdStr@str 0009             ??_kpDebounce 0001        ___wmul@multiplier 0001  
        lcdCommand@old_D 0007    kpDebounce@valorAntigo 00D1     __end_of_updateScreen 7E14  
               _Delay2ms 568A          main@customChars 0032        ___lmul@multiplier 0001  
              copy_data0 5CE8       __end_of_lcdCommand 5CD4             lcdChar@old_D 0008  
           lcdChar@valor 0007       __end_of_kpDebounce 637E            ??_titleScreen 0010  
    __end_of_playerInput 60B0                 __Hrparam 0000                 __Lrparam 0000  
        lcdPosition@line 000C               ?_timerInit 0001               ?_ssdUpdate 0001  
       __size_of___awdiv 00C4         __size_of___awmod 00B0           lcdNumber@valor 0019  
       __size_of___lwdiv 0074         __size_of___lwmod 0064             _screenBuffer 0080  
       __size_of_lcdChar 0054         __size_of_lcdInit 0078                 _gameOver 599A  
       __size_of_pinMode 024E          ___lwdiv@divisor 0003          ___lwdiv@counter 0007  
               __ptext10 5FD6                 __ptext11 5668                 __ptext20 58C2  
               __ptext12 6200                 __ptext21 599A                 __ptext13 5B66  
               __ptext30 5E62                 __ptext22 570C                 __ptext14 67E2  
               __ptext31 5F12                 __ptext23 5D52                 __ptext15 565E  
               __ptext32 56A6                 __ptext24 5C56                 __ptext16 6A30  
               __ptext25 568A                 __ptext17 5A0C                 __ptext26 5A7E  
               __ptext18 637E                 __ptext27 575C                 __ptext19 592C  
               __ptext28 6594                 __ptext29 5672         __size_of_ssdInit 0056  
               _keyCount 00CF            __size_of_main 008E            __size_of_rand 006E  
            ??_gameLogic 001D               Delay40us@i 0001                 _ssdDigit 5806  
            ??_lcdNumber 001B      __end_of_titleScreen 7652             ??_setupLevel 0003  
         lcdStrDelay@str 0009           lcdPosition@col 0009            ?_digitalWrite 0001  
            _playerInput 5FD6        digitalWrite@value 0003         ___lwmod@dividend 0008  
     __end_of_setupLevel 6594              ??_timerInit 0001              ??_ssdUpdate 0007  
       _updateScreen$370 0017         _updateScreen$371 0019         _updateScreen$372 001B  
       _updateScreen$373 001D         _updateScreen$369 0015    __size_of_updateScreen 07C2  
        ___lwmod@divisor 000A              kpDebounce@i 000A              kpDebounce@j 0009  
            kpDebounce@k 0007          ___lwmod@counter 000C           ??_digitalWrite 0005  
           lcdStrDelay@i 000F             ?_lcdStrDelay 0009             ?_lcdPosition 0009  
        digitalWrite@pin 0001              _titleScreen 6ECA             _updateScreen 7652  
